{"version":3,"sources":["store/entries.js","store/layout.js","data/tracks.js","store/size.js","store/graph.js","store/ids.js","utils.js","store/iterations.js","store/iterationIndex.js","store/iteration.js","ui/Draw.js","store/model.js","store/training.js","ui/Guess.js","ui/Pick.js","ui/Preview.js","store/progress.js","tf/vis.js","ui/Train.js","ui/App.js","index.js","data/layout.js","data/iterations.js"],"names":["setEntries","createEvent","entries$","restore","fetchEntries","createEffect","use","fetch","done","watch","a","params","result","json","entries","sorted","sort","b","timestamp","iterationTimestamp","iterations","entry","date","format","type","deviceName","name","iteration","avg","push","iterationKey","deviceKey","device","Math","round","reduce","memo","bpm","length","console","log","iterationKeys","Object","keys","current","setTimeout","setLayout","layout$","horizontalTracks","verticalTracks","setSize","size$","linksGraph$","combine","layout","size","graph","Graph","allowSelfLoops","edgeKeyGenerator","undirected","source","target","attributes","multi","id","i","fromIndex","addNode","nodeEntries","x","j","toIndex","y","z","hasNode","addEdge","clusters$","linksGraph","idClusters","clusterIds","traverseNode","getNodeAttributes","process","hasEdge","nodes","clusterIds$","map","clusters","key","idClusters$","ids$","item","inside","p","w","h","mouseX","mouseY","xy","floor","generateIteration","getState","ids","id2index","fromEntries","index","horizontalSteps","s","e","steps","verticalSteps","pick","random","addPending","floorTiles","pending","indexOf","k","floorIndex","n","row","is","filter","iterationToLayout","join","xs","ys","setRawIterations","rawIterations$","iterations$","rawIterations","rate","iterationLayout","data","maja","dog","rates","george","boogie","mala","ada","NaN","heartRateDog","actualRank","abs","trainable","isNaN","output","Array","from","_","combined","setIterationIndex","iterationIndex$","iteration$","iterationIndex","group","payload","_id","title","expectedRank","method","headers","body","JSON","stringify","model$","model","tf","layers","conv2d","batchInputShape","kernelSize","filters","strides","activation","kernelInitializer","flatten","dense","units","compile","loss","metrics","optimizer","adam","setTraining","training$","saveIteration","rank","now","Date","toISOString","classNames","ranks","guess","number","response","predict","preds","argMax","argMax1","l","labels","tfvis","perClassAccuracy","classAccuracy","container","tab","confusionMatrix","values","tickLabels","dispose","fail","error","finally","find","tries","redraw","max","findClickHandler","form","useStore","useForm","mode","errors","formState","handleSubmit","register","useEffect","p5","W","H","bounds","dragging","setup","createCanvas","CANVAS","noLoop","textSize","textAlign","CENTER","mousePressed","mouseReleased","mouseDragged","draw","posX","posY","posZ","c","fill","rect","text","TILE_SIZE","sketch","remove","onSubmit","ref","value","disabled","isValid","isSubmitting","Cards","styled","div","Card","onClick","toString","WEBGL","frameRate","clear","ambientLight","rotateX","rotateY","translate","PI","plane","pop","edgeEntries","t","sp","tp","strokeWeight","stroke","line","href","setProgress","progress$","visualizeModel","modelSummary","validIterations","train","callbacks","fitCallbacks","styles","height","fit","epochs","shuffle","onEpochEnd","args","epoch","progress","training","Nav","nav","Header","PickSection","open","Pick","PreviewSection","Preview","TrainSection","Train","GuessSection","Guess","props","george_boogie","then","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.0c386e4f.chunk.js","sourcesContent":["import { format } from \"date-fns\";\nimport { createEffect, createEvent, restore } from \"effector\";\n\nconst setEntries = createEvent();\nexport const entries$ = restore(setEntries, null);\n\nexport const fetchEntries = createEffect();\nfetchEntries.use(() => fetch(\"https://heartrate.miran248.now.sh/api/entries\"));\nfetchEntries.done.watch(async({ params, result }) => {\n  const { entries } = await result.json();\n\n  const sorted = entries.sort((a, b) => a.timestamp - b.timestamp);\n\n  let iterationTimestamp = 0;\n\n  const iterations = {};\n\n  for(let entry of sorted) {\n    entry.date = format(entry.timestamp * 1000, \"yyyy-MM-dd HH:mm:ss\");\n\n    if(entry.type === \"start\")\n      iterationTimestamp = entry.timestamp;\n    // else if(entry.type === \"end\")\n    //   iterationTimestamp = 0;\n    else if(entry.type === \"entry\") {\n      const deviceName = entry.name || \"unknown\";\n      const iteration = iterations[iterationTimestamp] = iterations[iterationTimestamp] || {};\n      const device = iteration[deviceName] = iteration[deviceName] || { entries: [], avg: 0 };\n      device.entries.push(entry);\n    }\n  }\n\n  for(let iterationKey in iterations) {\n    const iteration = iterations[iterationKey];\n\n    for(let deviceKey in iteration) {\n      const device = iteration[deviceKey];\n      device.avg = Math.round(device.entries.reduce((memo, entry) => memo + entry.bpm, 0) / device.entries.length);\n    }\n  }\n\n  // console.log(\"entries\", entries);\n  console.log(\"entries\", iterations);\n\n  const iterationKeys = Object.keys(iterations).sort((a, b) => b - a);\n  iterations.current = iterationKeys[0];\n\n  setEntries(iterations);\n\n  setTimeout(() => fetchEntries(), 60000);\n});\n\n// fetchEntries();\n","import { createEvent, restore } from \"effector\";\n\nexport const setLayout = createEvent();\nexport const layout$ = restore(setLayout, null);\n","export const horizontalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  [\n    [ 1, 1, 1 ], // fixed\n\n    [ 1, 2, 3 ],\n    [ 1, 4, 5 ],\n  ],\n  // 2. floor\n  [\n    // [ 1, 0, 6 ], // empty\n\n    [ 2, 7, 10 ],\n\n    [ 4, 11, 17 ],\n\n    // [ 1, 0, 18 ], // empty\n    // [ 1, 0, 19 ],\n    // [ 1, 0, 20 ],\n    // [ 1, 0, 21 ],\n    [ 1, 19, 21 ],\n\n    // [ 1, 0, 22 ], // empty\n  ],\n  // 3. floor\n  [\n    // [ 1, 0, 23 ], // empty\n\n    [ 2, 24, 28 ],\n\n    [ 3, 29, 35 ],\n\n    [ 3, 36, 41 ],\n\n    // [ 1, 0, 42 ], // empty\n  ],\n  // 4. floor\n  [\n    // [ 2, 43, 47 ],\n    [ 2, 43, 46 ], // 47 temp empty\n\n    // [ 4, 48, 53 ],\n    [ 3, 48, 52 ], // 53 temp empty\n\n    // [ 2, 54, 58 ],\n    [ 2, 54, 57 ], // 58 temp empty\n\n    [ 1, 59, 59 ], // fixed\n  ],\n  // 5. floor\n  null,\n];\n\nexport const verticalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  null,\n  // 2. floor\n  null,\n  // 3. floor\n  null,\n  // 4. floor\n  null,\n  // 5. floor\n  [\n    [ 1, 63, 68 ],\n\n    [ 1, 64, 72 ],\n\n    [ 2, 61, 73 ],\n\n    [ 2, 60, 71 ],\n  ],\n];\n","import { createEvent, restore } from \"effector\";\n\nexport const setSize = createEvent();\nexport const size$ = restore(setSize, null);\n","import { combine } from \"effector\";\nimport Graph from \"graphology\";\n\nimport { layout$ } from \"./layout\";\nimport { size$ } from \"./size\";\n\nimport { fromIndex, toIndex } from \"../utils\";\n\n// all possible links / paths, ignoring clusters and floors\nexport const linksGraph$ = combine(layout$, size$, (layout, size) => {\n  if(layout === null || size === null)\n    return null;\n\n  const graph = new Graph({\n    allowSelfLoops: false,\n    edgeKeyGenerator: ({ undirected, source, target, attributes }) => `${source}->${target}`,\n    multi: true,\n    type: \"directed\",\n  });\n\n  let id = 0;\n  for(let i in layout) {\n    if(layout[i] === 0)\n      continue;\n\n    const attributes = {\n      ...fromIndex(size, i),\n      i,\n      id: ++id,\n    };\n\n    graph.addNode(i, attributes);\n  }\n\n  for(let [ i, a ] of graph.nodeEntries()) {\n    // right\n    if(a.x < size.x - 1) {\n      const j = toIndex(size, a.x + 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 1, y: 0, z: 0 });\n    }\n    // down\n    if(a.y < size.y - 1) {\n      const j = toIndex(size, a.x, a.y + 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: 1, z: 0 });\n    }\n    // // left\n    if(a.x > 0) {\n      const j = toIndex(size, a.x - 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: -1, y: 0, z: 0 });\n    }\n    // up\n    if(a.y > 0) {\n      const j = toIndex(size, a.x, a.y - 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: -1, z: 0 });\n    }\n\n    // next floor\n    if(a.z < size.z - 1) {\n      // right\n      if(a.x < size.x - 1) {\n        const j = toIndex(size, a.x + 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 1, y: 0, z: 1 });\n      }\n      // down\n      if(a.y < size.y - 1) {\n        const j = toIndex(size, a.x, a.y + 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: 1, z: 1 });\n      }\n      // left\n      if(a.x > 0) {\n        const j = toIndex(size, a.x - 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: -1, y: 0, z: 1 });\n      }\n      // up\n      if(a.y > 0) {\n        const j = toIndex(size, a.x, a.y - 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: -1, z: 1 });\n      }\n    }\n  }\n\n  return graph;\n});\n\n// group neighbors (on the same floor) into clusters\nconst clusters$ = combine(linksGraph$, size$, (linksGraph, size) => {\n  if(linksGraph === null || size === null)\n    return null;\n\n  let id = 0;\n  const idClusters = {};\n  const clusterIds = {};\n\n  const traverseNode = (i) => {\n    const a = linksGraph.getNodeAttributes(i);\n    // right\n    if(a.x < size.x - 1)\n      process(i, toIndex(size, a.x + 1, a.y, a.z));\n    // down\n    if(a.y < size.y - 1)\n      process(i, toIndex(size, a.x, a.y + 1, a.z));\n    // left\n    if(a.x > 0)\n      process(i, toIndex(size, a.x - 1, a.y, a.z));\n    // up\n    if(a.y > 0)\n      process(i, toIndex(size, a.x, a.y - 1, a.z));\n  };\n\n  const process = (i, j) => {\n    if(i in idClusters && j in idClusters)\n      return;\n\n    if(linksGraph.hasNode(j) && linksGraph.hasEdge(i, j)) {\n      if(!(i in idClusters)) {\n        idClusters[i] = ++id;\n        clusterIds[idClusters[i]] = [ +i ];\n      }\n\n      if(!(j in idClusters)) {\n        idClusters[j] = idClusters[i];\n        clusterIds[idClusters[j]].push(+j);\n      }\n\n      traverseNode(j);\n    }\n  };\n\n  for(let i of linksGraph.nodes())\n    traverseNode(+i);\n\n  return [ clusterIds, idClusters ];\n});\nexport const clusterIds$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ clusterIds, _ ] = clusters;\n\n  for(let key in clusterIds)\n    clusterIds[key].sort();\n\n  return clusterIds;\n});\nexport const idClusters$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ _, idClusters ] = clusters;\n\n  return idClusters;\n});\n","import { layout$ } from \"./layout\";\n\nexport const ids$ = layout$.map((layout) => {\n  if(!layout)\n    return null;\n\n  let id = 0;\n\n  return layout.map((item) => item === 0 ? 0 : ++id);\n});\n","import { horizontalTracks, verticalTracks } from \"./data/tracks\";\nimport { clusterIds$, idClusters$, linksGraph$ } from \"./store/graph\";\nimport { ids$ } from \"./store/ids\";\nimport { size$ } from \"./store/size\";\n\nexport function inside(p, [ x, y, w, h ]) {\n  return p.mouseX > x && p.mouseX < x + w && p.mouseY > y && p.mouseY < y + h;\n}\n\nexport function fromIndex(size, i) {\n  const xy = size.x * size.y;\n  const z = Math.floor(i / xy);\n\n  i -= z * xy;\n  const y = Math.floor(i / size.x);\n  const x = i - y * size.x;\n\n  return { x, y, z };\n}\nexport function toIndex(size, x, y, z) {\n  return z * size.x * size.y + y * size.x + x;\n}\n\nexport const generateIteration = (p) => {\n  const clusterIds = clusterIds$.getState();\n  const idClusters = idClusters$.getState();\n  const linksGraph = linksGraph$.getState();\n  const ids = ids$.getState();\n  const size = size$.getState();\n\n  const id2index = Object.fromEntries(Object.keys(idClusters).map((index) => [ ids[index], index ]));\n  // const edges = Array.from(linksGraph.edgeEntries());\n\n  // console.log(\"clusterIds\", clusterIds);\n  // console.log(\"idClusters\", idClusters);\n  // // console.log(\"linksGraph\", edges.filter(([ k, ka, s ]) => s == 19)); // ids[+s] === 1));\n  // console.log(\"ids\", ids);\n\n  const horizontalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x + 1, a.y, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n  const verticalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x, a.y + 1, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n\n  const pick = (steps) => steps[Math.floor(Math.random() * steps.length)];\n\n  const addPending = (i, a, floorTiles, pending) => {\n    if(a.x < 0 || a.y < 0 || a.x >= size.x || a.y >= size.y)\n      return;\n\n    const j = toIndex(size, a.x, a.y, a.z);\n    if(!linksGraph.hasEdge(i, j) || floorTiles.indexOf(ids[j]) < 0) {\n      const k = toIndex(size, a.x, a.y, a.z + 1);\n      if(linksGraph.hasEdge(i, k) && pending.indexOf(ids[k]) < 0)\n        pending.push(ids[k]);\n    }\n  };\n\n  let iteration = [];\n  let pending = [];\n\n  for(let floorIndex = 0; floorIndex < 5; ++floorIndex) {\n    const floor = horizontalTracks[floorIndex] || verticalTracks[floorIndex];\n\n    let floorTiles = [];\n\n    for(let [ n, s, e ] of floor) {\n      const steps = s === 0 ? null : horizontalTracks[floorIndex] ? horizontalSteps(s, e) : verticalSteps(s, e);\n      const row = [];\n\n      if(pending.length > 0) {\n        if(s === 0) {\n          const i = pending.indexOf(e);\n          if(i > -1)\n            row.push(e);\n          else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        } else {\n          const is = pending.filter((i) => steps.indexOf(i) > -1);\n          if(is.length > 0) {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(Math.random() < .5)\n                  id = is[Math.floor(Math.random() * is.length)];\n                else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              row.push(id);\n            }\n          } else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        }\n      } else {\n        for(let i = 0; i < n; ++i) {\n          let id = 0;\n\n          do {\n            if(s === 0) {\n              id = [ s, e ][Math.round(Math.random())];\n            } else {\n              id = pick(steps);\n            }\n          } while(row.indexOf(id) > -1);\n\n          if(id > 0)\n            row.push(id);\n        }\n      }\n\n      floorTiles = [ ...floorTiles, ...row ];\n    }\n\n    pending = [];\n\n    for(let id of floorTiles) {\n      const i = id2index[id];\n      const a = linksGraph.getNodeAttributes(i);\n\n      // right\n      addPending(i, { x: a.x + 1, y: a.y, z: a.z }, floorTiles, pending);\n      // down\n      addPending(i, { x: a.x, y: a.y + 1, z: a.z }, floorTiles, pending);\n      // // left\n      addPending(i, { x: a.x - 1, y: a.y, z: a.z }, floorTiles, pending);\n      // up\n      addPending(i, { x: a.x, y: a.y - 1, z: a.z }, floorTiles, pending);\n    }\n\n    // console.log(\"pending\", pending);\n\n    iteration = [ ...iteration, ...floorTiles ];\n  }\n\n  iteration.sort((a, b) => a - b);\n\n  return iteration;\n};\n\nexport const iterationToLayout = (layout, iteration) => {\n  let id = 0;\n\n  return layout.map((item) => {\n    if(item === 0)\n      return 0;\n\n    return iteration.indexOf(++id) > -1 ? 1 : 0;\n  });\n};\n\nexport const join = (xs, ys) => xs.map((x, i) => x + ys[i]);\n","import { combine, createEvent, restore } from \"effector\";\n\nimport { layout$ } from \"./layout\";\n\nimport { iterationToLayout, join } from \"../utils\";\n\nconst heartRateDog = (iteration) => {\n  const rates = [];\n\n  if(\"dog\" in iteration)\n    rates.push(iteration.dog);\n  if(\"george\" in iteration)\n    rates.push(iteration.george);\n  if(\"boogie\" in iteration)\n    rates.push(iteration.boogie);\n  if(\"mala\" in iteration)\n    rates.push(iteration.mala);\n  if(\"ada\" in iteration)\n    rates.push(iteration.ada);\n\n  const n = rates.length;\n\n  if(n === 0)\n    return NaN;\n\n  return rates.reduce((memo, rate) => memo + rate, 0) / n;\n};\n// TODO: Move to utils\nconst heartRateDeltaRank = (rate) => {\n  if(rate < 5)\n    return 0; // [ 0, 5 )\n\n  if(rate < 10)\n    return 1; // [ 5, 10 )\n\n  if(rate < 20)\n    return 2; // [ 10, 20 )\n\n  if(rate < 40)\n    return 3; // [ 20, 40 )\n\n  return 4; // [ 80, inf )\n};\n\nexport const setRawIterations = createEvent();\nexport const rawIterations$ = restore(setRawIterations, null);\n\nexport const iterations$ = combine(layout$, rawIterations$, (layout, rawIterations) => {\n  if(layout === null || rawIterations === null)\n    return null;\n    \n  return rawIterations.map((iteration) => {\n    const iterationLayout = iterationToLayout(layout, iteration.data);\n\n    const maja = iteration.maja;\n    const dog = heartRateDog(iteration);\n\n    const actualRank = \"actualRank\" in iteration\n      ? iteration.actualRank\n      : heartRateDeltaRank(Math.abs(maja - dog));\n    const trainable = isNaN(actualRank) === false;\n    const output = trainable\n      ? Array.from(Array(5), (_, i) => i === actualRank ? 1 : 0)\n      : null;\n    \n    return {\n      ...iteration,\n      actualRank,\n      combined: join(layout, iterationLayout),\n      dog,\n      layout: iterationLayout,\n      maja,\n      output,\n      trainable,\n    };\n  });\n});\n","import { createEvent, restore } from \"effector\";\n\nexport const setIterationIndex = createEvent();\nexport const iterationIndex$ = restore(setIterationIndex, 0);\n","import { combine } from \"effector\";\n\nimport { entries$ } from \"./entries\";\nimport { iterationIndex$ } from \"./iterationIndex\";\nimport { iterations$, rawIterations$, setRawIterations } from \"./iterations\";\n\nexport const iteration$ = combine(iterationIndex$, iterations$, (iterationIndex, iterations) => {\n  if(iterationIndex < 0 || iterations === null)\n    return null;\n\n  return iterations[iterationIndex];\n});\n\ncombine(iteration$, entries$, async(iteration, entries) => {\n  if(iteration === null || entries === null)\n    return;\n\n  if((\"_id\" in iteration) === false)\n    return;\n\n  const group = entries[entries.current];\n  const keys = Object.keys(group);\n    \n    // TODO: Simplify\n  const maja = group[keys[0]].avg;\n  const dog = keys[1] ? group[keys[1]].avg : 0;\n\n  if(iteration.trainable && maja === iteration.maja && dog === iteration.dog)\n    return;\n\n  const payload = {\n    _id: iteration._id,\n    title: iteration.title,\n    data: iteration.data,\n    expectedRank: iteration.expectedRank,\n    timestamp: iteration.timestamp,\n    iterationKey: iteration.iterationKey,\n    maja,\n    dog,\n  };\n\n  console.log(iteration, payload);\n\n  await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  });\n\n  setRawIterations([\n    ...rawIterations$.getState().map(\n      (iteration) => iteration._id === payload._id ? payload : iteration\n    ),\n  ]);\n});\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { ids$ } from \"../store/ids\";\nimport { iteration$ } from \"../store/iteration\";\nimport { size$ } from \"../store/size\";\nimport { inside, fromIndex, toIndex, generateIteration } from \"../utils\";\n\nconst TILE_SIZE = 12;\n\nconst sketch = (iteration, size) => (p) => {\n  const ids = ids$.getState();\n\n  const W = size.x * TILE_SIZE;\n  const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n  const bounds = [ 0, 0, W, H ];\n\n  let dragging = -1;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n  };\n  p.mousePressed = () => {\n    if(inside(p, bounds)) {\n      const l = [ p.mouseX - bounds[0], p.mouseY - bounds[1] ];\n      const x = p.floor(l[0] / TILE_SIZE);\n      const z = p.floor(l[1] / (TILE_SIZE * (size.y + 1)));\n      const y = p.floor(l[1] / TILE_SIZE) - (size.y + 1) * z;\n\n      if(x < size.x && y < size.y && z < size.z) {\n        const i = toIndex(size, x, y, z);\n\n        if(iteration[i] === 2)\n          dragging = iteration[i] = 1;\n        else if(iteration[i] === 1)\n          dragging = iteration[i] = 2;\n        else\n          dragging = -1;\n\n        p.redraw();\n      }\n    } else\n      dragging = -1;\n  };\n  p.mouseReleased = () => {\n    dragging = -1;\n  };\n  p.mouseDragged = () => {\n    if(dragging < 0)\n      return;\n\n    if(inside(p, bounds)) {\n      const l = [ p.mouseX - bounds[0], p.mouseY - bounds[1] ];\n      const x = p.floor(l[0] / TILE_SIZE);\n      const z = p.floor(l[1] / (TILE_SIZE * (size.y + 1)));\n      const y = p.floor(l[1] / TILE_SIZE) - (size.y + 1) * z;\n\n      if(x < size.x && y < size.y && z < size.z) {\n        const i = toIndex(size, x, y, z);\n\n        if(iteration[i] > 0)\n          iteration[i] = dragging;\n\n        p.redraw();\n      }\n    }\n  }\n  p.draw = () => {\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    for(let i in iteration) {\n      const { x, y, z } = fromIndex(size, i);\n\n      const posX = x * TILE_SIZE;\n      const posY = y * TILE_SIZE;\n      const posZ = z * (size.y + 1) * TILE_SIZE;\n\n      let c = 255;\n\n      if(iteration[i] === 2)\n        c = 51;\n      else if(iteration[i] === 1)\n        c = 204;\n\n      p.fill(c);\n      p.rect(posX, posY + posZ, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      if(ids[i] > 0)\n        p.text(ids[i], posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n    }\n  };\n};\n\nconst generateClickHandler = () => {\n  const iteration = generateIteration(p);\n\n  console.log(iteration);\n};\n\nlet p;\n\nexport default () => {\n  const iteration = useStore(iteration$);\n  const size = useStore(size$);\n\n  const id = `draw-container`;\n\n  useEffect(() => {\n    p = new p5(sketch(iteration.combined, size), id);\n\n    return p.remove;\n  }, []);\n\n  return (\n    <div>\n      <p>\n        <button onClick={generateClickHandler}>Generate</button>\n      </p>\n      <div id={id} />\n    </div>\n  );\n};\n","import * as tf from \"@tensorflow/tfjs\";\n\nimport { size$ } from \"../store/size\";\n\nexport const model$ = size$.map((size) => {\n  if(size === null)\n    return null;\n\n  const model = tf.sequential({\n    layers: [\n      // hidden\n      // tf.layers.dense({\n      //   batchInputShape: [ null, 36 ],\n      //   units: 1024,\n      //   activation: \"sigmoid\",\n      // }),\n      // // output\n      // tf.layers.dense({\n      //   units: 2,\n      //   activation: \"softmax\",\n      // }),\n      tf.layers.conv2d({\n        batchInputShape: [ null, size.x, size.y, size.z ],\n        kernelSize: 5,\n        filters: 16,\n        strides: 2,\n        activation: \"relu\",\n        kernelInitializer: \"varianceScaling\",\n      }),\n\n      // The MaxPooling layer acts as a sort of downsampling using max values\n      // in a region instead of averaging.\n      // tf.layers.maxPooling2d({ poolSize: [2, 2], strides: [2, 2] }),\n\n      // Now we flatten the output from the 2D filters into a 1D vector to prepare\n      // it for input into our last layer. This is common practice when feeding\n      // higher dimensional data to a final classification output layer.\n      tf.layers.flatten(),\n\n      // output\n      tf.layers.dense({\n        units: 5,\n        kernelInitializer: \"varianceScaling\",\n        activation: \"softmax\",\n      }),\n    ],\n  });\n\n  model.compile({\n    // loss: tf.losses.categoricalCrossentropy,\n    loss: \"categoricalCrossentropy\",\n    metrics: [ \"accuracy\" ],\n    // loss: tf.losses.softmaxCrossEntropy,\n    // optimizer: tf.train.sgd(.2),\n    optimizer: tf.train.adam(),\n  });\n\n  return model;\n});\n","import { createEvent, restore } from \"effector\";\n\nexport const setTraining = createEvent();\nexport const training$ = restore(setTraining, false);\n","import { createEffect } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { ids$ } from \"../store/ids\";\nimport { rawIterations$, setRawIterations } from \"../store/iterations\";\nimport { entries$ } from \"../store/entries\";\nimport { layout$ } from \"../store/layout\";\nimport { model$ } from \"../store/model\";\nimport { size$ } from \"../store/size\";\nimport { setTraining } from \"../store/training\";\nimport { inside, fromIndex, toIndex, generateIteration, iterationToLayout, join } from \"../utils\";\n\nconst saveIteration = async(iteration, rank) => {\n  const now = new Date;\n  const timestamp = +now;\n  \n  const payload = {\n    _id: `${timestamp}`,\n    title: now.toISOString(),\n    data: iteration,\n    expectedRank: rank,\n    // iterationKey: entries$.getState().current,\n    timestamp,\n  };\n\n  console.log(\"saveIteration\", payload);\n\n  await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  });\n\n  setRawIterations([\n    payload,\n    ...rawIterations$.getState(),\n  ]);\n};\n\nconst classNames = [\n  \"Zero\",\n  \"One\",\n  \"Two\",\n  \"Three\",\n  \"Four\",\n  \"Five\",\n  \"Six\",\n  \"Seven\",\n  \"Eight\",\n  \"Nine\",\n];\n\nconst ranks = [\n  [ 1, 0, 0, 0, 0 ],\n  [ 0, 1, 0, 0, 0 ],\n  [ 0, 0, 1, 0, 0 ],\n  [ 0, 0, 0, 1, 0 ],\n  [ 0, 0, 0, 0, 1 ],\n];\n\nconst guess = createEffect();\nguess.use(async({ number, rank }) => {\n  const size = size$.getState();\n\n  const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ], \"int32\");\n  // const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ]);\n  const response = model$.getState().predict(xs);\n  const preds = response.argMax(1);\n  const argMax1 = await preds.data();\n  const data = await response.data();\n\n  const l = tf.tensor([ ranks[rank] ], [ 1, 5 ]);\n  const labels = await l.argMax(1);\n\n  console.log(\"guessed\", argMax1[0], Array.from(data));\n\n  // accuracy\n  const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\n  const container = { name: \"Accuracy\", tab: \"Evaluation\" };\n  tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\n\n  // confusion\n  const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\n  // console.log(\"tfvis.show\", tfvis.show)\n  // console.log(\"tfvis.render\", tfvis.render)\n  // console.log(\"tfvis.metrics\", tfvis.metrics)\n\n  tfvis.render.confusionMatrix({ name: \"Confusion Matrix\", tab: \"Evaluation\" }, {\n    values: confusionMatrix,\n    tickLabels: classNames,\n  });\n  // tfvis.render.heatmap({ name: \"Heatmap\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n  // tfvis.render.histogram({ name: \"Histogram\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n\n  xs.dispose();\n  l.dispose();\n\n  return response;\n});\nguess.pending.watch((pending) => pending && setTraining(true));\nguess.fail.watch((error) => {\n  console.error(\"guess error\", error);\n})\nguess.finally.watch(() => setTraining(false));\n\nconst find = createEffect();\nfind.use(async({ rank }) => {\n  const size = size$.getState();\n  const l = layout$.getState();\n\n  let argMax1;\n  let response;\n  let iteration;\n\n  let tries = 0;\n\n  do {\n    ++tries;\n\n    // randomizeClickHandler();\n    \n    iteration = generateIteration(p);\n    const iterationLayout = join(l, iterationToLayout(l, iteration));\n\n    layout = iterationLayout;\n\n    p.redraw();\n\n    const number = layout.map((item) => Math.max(0, item - 1));\n\n    const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ], \"int32\");\n    // const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ]);\n    response = model$.getState().predict(xs);\n    const preds = response.argMax(1);\n    argMax1 = await preds.data();\n    const data = await response.data();\n\n    const ys = tf.tensor([ ranks[rank] ], [ 1, 5 ]);\n    const labels = await ys.argMax(1);\n\n    console.log(`${tries}. found`, argMax1[0]); // , Array.from(data));\n\n    // accuracy\n    const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\n    const container = { name: \"Accuracy\", tab: \"Evaluation\" };\n    tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\n\n    // confusion\n    const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\n    // console.log(\"tfvis.show\", tfvis.show)\n    // console.log(\"tfvis.render\", tfvis.render)\n    // console.log(\"tfvis.metrics\", tfvis.metrics)\n\n    tfvis.render.confusionMatrix({ name: \"Confusion Matrix\", tab: \"Evaluation\" }, {\n      values: confusionMatrix,\n      tickLabels: classNames,\n    });\n    // tfvis.render.heatmap({ name: \"Heatmap\", tab: \"Evaluation\" }, {\n    //   values: confusionMatrix,\n    // });\n    // tfvis.render.histogram({ name: \"Histogram\", tab: \"Evaluation\" }, {\n    //   values: confusionMatrix,\n    // });\n\n    xs.dispose();\n    ys.dispose();\n  } while(argMax1[0] !== rank);\n\n  // \"https://heartrate.miran248.now.sh/api/iteration\"\n\n  console.log(\"found rank\", rank, \"in\", tries, \"tries\");\n\n  await saveIteration(iteration, rank);\n\n  return response;\n});\nfind.pending.watch((pending) => pending && setTraining(true));\nfind.fail.watch((error) => {\n  console.error(\"find error\", error);\n})\nfind.finally.watch(() => setTraining(false));\n\n// const test = async() => {\n//   for(let i of trainData) {\n//     const response = await guess(i[0]);\n//     const argMax = await response.argMax(1).data();\n//     const data = await response.data();\n//\n//     const fake = Array.from(data);\n//     const realIndex = i[1];\n//     const fakeIndex = Array.from(argMax)[0];\n//\n//     console.log(realIndex === fakeIndex, realIndex, fakeIndex, i[2], fake.map((i) => i.toFixed(2)));\n//   }\n// };\n\nconst TILE_SIZE = 12;\n\nconst sketch = (size) => (p) => {\n  const ids = ids$.getState();\n\n  const W = size.x * TILE_SIZE;\n  const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n  const bounds = [ 0, 0, W, H ];\n\n  let dragging = -1;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n  };\n  p.mousePressed = () => {\n    if(inside(p, bounds)) {\n      const l = [ p.mouseX - bounds[0], p.mouseY - bounds[1] ];\n      const x = p.floor(l[0] / TILE_SIZE);\n      const z = p.floor(l[1] / (TILE_SIZE * (size.y + 1)));\n      const y = p.floor(l[1] / TILE_SIZE) - (size.y + 1) * z;\n\n      if(x < size.x && y < size.y && z < size.z) {\n        const i = toIndex(size, x, y, z);\n\n        if(layout[i] === 2)\n          dragging = layout[i] = 1;\n        else if(layout[i] === 1)\n          dragging = layout[i] = 2;\n        else\n          dragging = -1;\n\n        p.redraw();\n      }\n    } else\n      dragging = -1;\n  };\n  p.mouseReleased = () => {\n    dragging = -1;\n  };\n  p.mouseDragged = () => {\n    if(dragging < 0)\n      return;\n\n    if(inside(p, bounds)) {\n      const l = [ p.mouseX - bounds[0], p.mouseY - bounds[1] ];\n      const x = p.floor(l[0] / TILE_SIZE);\n      const z = p.floor(l[1] / (TILE_SIZE * (size.y + 1)));\n      const y = p.floor(l[1] / TILE_SIZE) - (size.y + 1) * z;\n\n      if(x < size.x && y < size.y && z < size.z) {\n        const i = toIndex(size, x, y, z);\n\n        if(layout[i] > 0)\n          layout[i] = dragging;\n\n        p.redraw();\n      }\n    }\n  }\n  p.draw = () => {\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    for(let i in layout) {\n      const { x, y, z } = fromIndex(size, i);\n\n      const posX = x * TILE_SIZE;\n      const posY = y * TILE_SIZE;\n      const posZ = z * (size.y + 1) * TILE_SIZE;\n\n      let c = 255;\n\n      if(layout[i] === 2)\n        c = 51;\n      else if(layout[i] === 1)\n        c = 204;\n\n      p.fill(c);\n      p.rect(posX, posY + posZ, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      if(ids[i] > 0)\n        p.text(ids[i], posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n    }\n  };\n};\n\nconst randomizeClickHandler = () => {\n  const l = layout$.getState();\n\n  const iteration = generateIteration(p);\n  const iterationLayout = join(l, iterationToLayout(l, iteration));\n\n  layout = iterationLayout;\n\n  p.redraw();\n};\nconst guessClickHandler = (form) => {\n  const rank = +form.rank;\n  guess({ number: layout.map((item) => Math.max(0, item - 1)), rank });\n};\nconst findClickHandler = (form) => {\n  const rank = +form.rank;\n  find({ rank });\n};\n\nlet p, layout;\n\nexport default () => {\n  const size = useStore(size$);\n\n  const { errors, formState, handleSubmit, register } = useForm({\n    mode: \"onChange\",\n  });\n\n  const id = `guess-container`;\n\n  useEffect(() => {\n    layout = layout$.getState();\n\n    p = new p5(sketch(size), id);\n    p.redraw();\n\n    return p.remove;\n  }, []);\n\n  return (\n    <div>\n      {/* <p>\n        <button onClick={randomizeClickHandler}>randomize</button>\n      </p> */}\n      {/* <form onSubmit={handleSubmit(guessClickHandler)}>\n        <fieldset>\n          <legend>options</legend>\n          <label>\n            <h6>class</h6>\n            <select name=\"rank\" ref={register}>\n              <option value={0}>0</option>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n              <option value={4}>4</option>\n            </select>\n            {errors.rank && \"class is required\"}\n          </label>\n          <hr />\n          <input type=\"submit\" value=\"guess\" disabled={!formState.isValid || formState.isSubmitting} />\n        </fieldset>\n      </form> */}\n      <form onSubmit={handleSubmit(findClickHandler)}>\n        <fieldset>\n          <legend>options</legend>\n          <label>\n            <h6>class</h6>\n            <select name=\"rank\" ref={register}>\n              <option value={0}>0</option>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n              <option value={4}>4</option>\n            </select>\n            {errors.rank && \"class is required\"}\n          </label>\n          <hr />\n          <input type=\"submit\" value=\"find\" disabled={!formState.isValid || formState.isSubmitting} />\n        </fieldset>\n      </form>\n      <p id={id} />\n    </div>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { ids$ } from \"../store/ids\";\nimport { iterationIndex$, setIterationIndex } from \"../store/iterationIndex\";\nimport { iterations$ } from \"../store/iterations\";\nimport { size$ } from \"../store/size\";\nimport { fromIndex } from \"../utils\";\n\nconst TILE_SIZE = 12;\n// const TILE_SIZE = 24;\n\nconst sketch = (iteration, size) => (p) => {\n  const ids = ids$.getState();\n\n  const W = size.x * TILE_SIZE;\n  const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n  };\n  p.draw = () => {\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    for(let i in iteration) {\n      const { x, y, z } = fromIndex(size, i);\n\n      const posX = x * TILE_SIZE;\n      const posY = y * TILE_SIZE;\n      const posZ = z * (size.y + 1) * TILE_SIZE;\n\n      let c = 255;\n\n      if(iteration[i] === 2)\n        c = 51;\n      else if(iteration[i] === 1)\n        c = 204;\n\n      p.fill(c);\n      p.rect(posX, posY + posZ, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      if(ids[i] > 0)\n        p.text(ids[i], posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n    }\n  };\n};\n\nconst Cards = styled.div`\n  display: grid;\n  gap: 1ch;\n  grid-auto-flow: column;\n  overflow-x: auto;\n`;\n\nconst Card = ({ id, index, iteration }) => {\n  const selectedIndex = useStore(iterationIndex$);\n  const size = useStore(size$);\n\n  useEffect(() => {\n    const p = new p5(sketch(iteration.combined, size), id);\n\n    return p.remove;\n  }, []);\n\n  return (\n    <button id={id}\n            onClick={() => setIterationIndex(index)}\n            disabled={true || selectedIndex === index}>\n      <div>{iteration.title}</div>\n      <div>dog {iteration.dog}bpm, maja {iteration.maja}bpm, delta {Math.abs(iteration.maja - iteration.dog)}bpm</div>\n      <div>{\"_id\" in iteration ? `expected ${iteration.expectedRank}, ` : \"\"}actual {iteration.actualRank}</div>\n      <div>trainable {iteration.trainable.toString()} ({iteration.output})</div>\n    </button>\n  );\n};\n\nexport default () => {\n  const iterations = useStore(iterations$);\n\n  return (\n    <div>\n      <h6>total iterations</h6>\n      <p>{iterations.length}</p>\n      <Cards>\n      {iterations.map((iteration, i) => {\n        const id = `pick-container-${iteration.title}`;\n\n        return (\n          <Card key={id}\n                id={id}\n                index={i}\n                iteration={iteration} />\n        );\n      })}\n      </Cards>\n    </div>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { linksGraph$ } from \"../store/graph\";\nimport { iteration$ } from \"../store/iteration\";\nimport { size$ } from \"../store/size\";\nimport { fromIndex } from \"../utils\";\n\nconst TILE_SIZE = 60;\n\nconst sketch = (iteration, size) => (p) => {\n  const W = 750;\n  const H = 468.75;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.WEBGL);\n    p.frameRate(12);\n  };\n  p.draw = () => {\n    p.clear();\n\n    // p.normalMaterial();\n    p.ambientLight(255, 255, 255);\n\n    //p.rotateX(-p.mouseY * .01);\n    p.rotateX(-.6);\n    p.rotateY(p.mouseX * .01);\n\n    p.translate(\n      -.5 * TILE_SIZE * size.x,\n      -.5 * TILE_SIZE * size.y,\n      -.5 * TILE_SIZE * size.z\n    );\n\n    for(let i in iteration) {\n      if(iteration[i] === 0)\n        continue;\n\n      const { x, y, z } = fromIndex(size, i);\n\n      p.push();\n\n      p.translate(\n        TILE_SIZE * (x + .5),\n        TILE_SIZE * (z + .5),\n        TILE_SIZE * (y + .5)\n      );\n      p.rotateX(p.PI * -.5);\n\n      if(iteration[i] === 2)\n        p.fill(51, 51, 51);\n      else if(iteration[i] === 1)\n        p.fill(153, 153, 153);\n\n      p.plane(TILE_SIZE);\n\n      // p.box(TILE_SIZE - 1, TILE_SIZE - 1, TILE_SIZE - 1);\n\n      p.pop();\n    }\n\n    const linksGraph = linksGraph$.getState();\n    for(let [ k, ka, s, t, sa, ta ] of linksGraph.edgeEntries()) {\n      const sp = fromIndex(size, +s);\n      const tp = fromIndex(size, +t);\n\n      p.push();\n\n      p.strokeWeight(2);\n      p.stroke(0, 102, 255);\n      p.line(\n        TILE_SIZE * (sp.x + .5), TILE_SIZE * (sp.z + .5), TILE_SIZE * (sp.y + .5),\n        TILE_SIZE * (tp.x + .5), TILE_SIZE * (tp.z + .5), TILE_SIZE * (tp.y + .5)\n      );\n\n      p.pop();\n    }\n  };\n};\n\nconst Card = styled.div`\n  & canvas {\n    display: block;\n    height: auto !important;\n    width: 100% !important;\n  }\n`;\n\nexport default () => {\n  const iteration = useStore(iteration$);\n  const size = useStore(size$);\n\n  const id = `preview-container`;\n\n  useEffect(() => {\n    if(iteration === null)\n      return;\n\n    const p = new p5(sketch(iteration.combined, size), id);\n\n    return p.remove;\n  }, [ iteration ]);\n\n  if(iteration === null) {\n    return (\n      <div><a href=\"#pick\">pick iteration</a></div>\n    );\n  }\n\n  const text = JSON.stringify(iteration.combined);\n\n  return (\n    <Card>\n      <p>\n        <code>{text}</code>\n      </p>\n      <div id={id} />\n    </Card>\n  );\n};\n","import { createEvent, restore } from \"effector\";\n\nexport const setProgress = createEvent();\nexport const progress$ = restore(setProgress, 0);\n","import * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS, NUM_OUTPUT_CLASSES } from \"./constants\";\n\nexport async function visualizeModel(model) {\n  tfvis.show.modelSummary({ name: \"Model Architecture\" }, model);\n}\n\nexport async function showExamples(data) {\n  // Create a container in the visor\n  const surface = tfvis\n    .visor()\n    .surface({ name: \"Input Data Examples\", tab: \"Input Data\" });\n\n  // Get the examples\n  // const examples = data.nextTestBatch(20);\n  // const examples = data.allTrainData();\n  const examples = data;\n  const numExamples = examples.xs.shape[0];\n\n  // Create a canvas element to render each example\n  for (let i = 0; i < numExamples; i++) {\n    const imageTensor = tf.tidy(() => {\n      // Reshape the image to 28x28 px\n      return examples.xs\n        .slice([i, 0], [1, examples.xs.shape[1]])\n        .reshape([IMAGE_WIDTH, IMAGE_HEIGHT, /*IMAGE_CHANNELS*/]);\n    });\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = IMAGE_WIDTH;\n    canvas.height = IMAGE_HEIGHT;\n    canvas.style.margin = \"4px\";\n    await tf.browser.toPixels(imageTensor, canvas);\n    surface.drawArea.appendChild(canvas);\n\n    imageTensor.dispose();\n  }\n}\n\nexport function getFitCallbacks() {\n  const metrics = [\"loss\", \"val_loss\", \"acc\", \"val_acc\"];\n  // const metrics = [\"val_loss\", \"val_acc\"];\n  const container = {\n    name: \"Model Training\",\n    tab: \"Training\",\n    styles: { height: \"800px\" }\n  };\n\n  return tfvis.show.fitCallbacks(container, metrics, {\n    callbacks: [\"onEpochEnd\"]\n  });\n}\n\nexport async function showAccuracy(\n  [preds, labels],\n  data,\n  classNames\n) {\n  const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\n  const container = { name: \"Accuracy\", tab: \"Evaluation\" };\n  tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\n}\n\nexport async function showConfusion(\n  [preds, labels],\n  data,\n  classNames\n) {\n  const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\n  // console.log(\"tfvis.show\", tfvis.show)\n  // console.log(\"tfvis.render\", tfvis.render)\n  // console.log(\"tfvis.metrics\", tfvis.metrics)\n\n  tfvis.render.confusionMatrix({ name: \"Confusion Matrix\", tab: \"Evaluation\" }, {\n    values: confusionMatrix,\n    tickLabels: classNames,\n  });\n  // tfvis.render.heatmap({ name: \"Heatmap\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n  // tfvis.render.histogram({ name: \"Histogram\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n}\n\nexport function openVis() {\n  tfvis.visor().open();\n}\n\nexport function isVisOpen() {\n  return tfvis.visor().isOpen();\n}\n","import { combine, createEffect } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nimport { iterations$ } from \"../store/iterations\";\nimport { model$ } from \"../store/model\";\nimport { setProgress, progress$ } from \"../store/progress\";\nimport { size$ } from \"../store/size\";\nimport { setTraining, training$ } from \"../store/training\";\nimport {\n  showExamples,\n  showAccuracy,\n  showConfusion,\n  visualizeModel,\n  getFitCallbacks,\n} from \"../tf/vis\";\nimport { join } from \"../utils\";\n\nconst EPOCH_COUNT = 250;\n\nlet xs;\nlet ys;\ncombine(iterations$, size$, (iterations, size) => {\n  if(iterations === null || size === null)\n    return;\n\n  if(xs)\n    xs.dispose();\n\n  if(ys)\n    ys.dispose();\n\n  const validIterations = iterations.filter((iteration) => iteration.trainable);\n\n  const data = validIterations.map((iteration) => iteration.layout);\n  xs = tf.tensor(data, [ data.length, size.x, size.y, size.z ], \"int32\");\n\n  const output = validIterations.map((iteration) => iteration.output);\n  ys = tf.tensor(output, [ data.length, 5 ], \"int32\");\n});\n\nconst train = createEffect();\ntrain.use(async() => {\n  const model = model$.getState();\n\n  visualizeModel(model);\n\n  const callbacks = getFitCallbacks();\n\n  const response = await model.fit(xs, ys, {\n    epochs: EPOCH_COUNT,\n    shuffle: true,\n    // validationSplit: .1,\n    callbacks: {\n      // unblocks p5.draw\n      // onBatchEnd: tf.nextFrame,\n      onEpochEnd: (...args) => {\n        const [ i, history ] = args;\n\n        const epoch = i + 1;\n\n        // console.log(`epoch ${epoch}, loss ${history.loss}`);\n\n        setProgress(epoch / EPOCH_COUNT);\n\n        return callbacks.onEpochEnd(...args);\n      },\n    },\n  });\n\n  return response;\n});\ntrain.pending.watch((pending) => pending && setTraining(true));\ntrain.fail.watch((error) => {\n  console.error(\"train error\", error);\n})\ntrain.finally.watch(() => setTraining(false));\n\nexport default () => {\n  const progress = useStore(progress$);\n  const training = useStore(training$);\n\n  return (\n    <div>\n      <p>\n        <button onClick={train}\n                disabled={training}>{training ? \"training ...\" : \"train\"}</button>\n      </p>\n      <progress value={progress}>{Math.round(progress * 100)}%</progress>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Draw from \"./Draw\";\n// import Generate from \"./Generate\";\nimport Guess from \"./Guess\";\nimport Pick from \"./Pick\";\nimport Preview from \"./Preview\";\nimport Train from \"./Train\";\n\nconst Nav = styled.nav`\n  & > a + a {\n    margin-left: 1ch;\n  }\n`;\n\nconst Header = () => (\n  <header>\n    <h1>nbf</h1>\n    <Nav>\n      <a href=\"#pick\">pick</a>\n      {/* <a href=\"#draw\">draw</a> */}\n      <a href=\"#preview\">preview</a>\n      <a href=\"#train\">train</a>\n      <a href=\"#guess\">guess</a>\n      {/* <a href=\"#generate\">generate</a> */}\n    </Nav>\n  </header>\n);\n\nconst PickSection = () => (\n  <details id=\"pick\" open>\n    <summary>pick iteration</summary>\n\n    <Pick />\n  </details>\n);\nconst DrawSection = () => (\n  <details id=\"draw\">\n    <summary>draw</summary>\n\n    <Draw />\n  </details>\n);\nconst PreviewSection = () => (\n  <details id=\"preview\" open>\n    <summary>3d preview</summary>\n\n    <Preview />\n  </details>\n);\nconst TrainSection = () => (\n  <details id=\"train\" open>\n    <summary>train</summary>\n\n    <Train />\n  </details>\n);\nconst GuessSection = () => (\n  <details id=\"guess\" open>\n    <summary>guess</summary>\n\n    <Guess />\n  </details>\n);\n// const GenerateSection = () => (\n//   <details id=\"generate\" open>\n//     <summary>generate</summary>\n//\n//     <Generate />\n//   </details>\n// );\n\nexport default () => (\n  <>\n    <Header />\n    <main>\n      <PickSection />\n      <hr />\n      {/* <DrawSection />\n      <hr /> */}\n      <PreviewSection />\n      <hr />\n      <TrainSection />\n      <hr />\n      <GuessSection />\n      {/* <hr />\n      <GenerateSection /> */}\n    </main>\n  </>\n);\n","import \"regenerator-runtime/runtime\";\nimport \"@exampledev/new.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./store/entries\";\nimport { rawIterations$, setRawIterations } from \"./store/iterations\";\nimport { setLayout } from \"./store/layout\";\nimport { setSize } from \"./store/size\";\nimport App from \"./ui/App\";\n\n// import fours from \"./data/fours\";\n// import ones from \"./data/ones\";\n// import threes from \"./data/threes\";\n// import twos from \"./data/twos\";\n// import zeros from \"./data/zeros\";\n// const props = {\n//   iterations: [\n//     ...zeros .map((item, i) => ({ title: `zeros ${i + 1}`,  data: item, output: [ 1, 0, 0, 0, 0 ] })),\n//     ...ones  .map((item, i) => ({ title: `ones ${i + 1}`,   data: item, output: [ 0, 1, 0, 0, 0 ] })),\n//     ...twos  .map((item, i) => ({ title: `twos ${i + 1}`,   data: item, output: [ 0, 0, 1, 0, 0 ] })),\n//     ...threes.map((item, i) => ({ title: `threes ${i + 1}`, data: item, output: [ 0, 0, 0, 1, 0 ] })),\n//     ...fours .map((item, i) => ({ title: `fours ${i + 1}`,  data: item, output: [ 0, 0, 0, 0, 1 ] })),\n//   ],\n//   layout: Array.from(Array(36), () => 1),\n//   size: { x: 6, y: 6, z: 1 },\n// };\n\nimport iterations from \"./data/iterations\";\nimport layout, { layoutSize } from \"./data/layout\";\n\nconst props = {\n  iterations,\n  layout,\n  size: layoutSize,\n};\n\nsetRawIterations(props.iterations);\nsetLayout(props.layout);\nsetSize(props.size);\n\nfetch(\"https://heartrate.miran248.now.sh/api/iterations\").then(\n  (response) => response.json()\n).then(\n  (response) => {\n    console.log(\"fetched iterations\", response);\n\n    setRawIterations([\n      ...response.iterations,\n      ...rawIterations$.getState(),\n    ]);\n  }\n)\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","export const layoutSize = { x: 7, y: 5, z: 5 };\n\nexport default [\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 1, 0,\n  0, 1, 1, 0, 0, 1, 1,\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 0, 0, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 1, 1, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 0, 0, 1, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 0, 1, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 0, 0,\n  0, 0, 1, 1, 0, 0, 0,\n];","export default [\n  // 20200526\n  {\n    title: \"2020-05-26 1\",\n    data: [ 3, 4, 6, 7, 9, 11, 12, 14, 15, 24, 27, 29, 31, 34, 36, 38, 39, 44, 46, 48, 49, 51, 53, 54, 57, 59, 61, 62, 63, 64, 70, 72 ],\n    george: 89,\n    maja: 104,\n  },\n  {\n    title: \"2020-05-26 2\",\n    data: [ 3, 4, 6, 7, 9, 11, 12, 13, 15, 24, 27, 29, 32, 35, 36, 38, 39, 44, 45, 48, 49, 52, 53, 54, 57, 59, 62, 63, 65, 70, 72 ],\n    boogie: 98,\n    maja: 87,\n  },\n  // 20200527\n  {\n    title: \"2020-05-27 1\",\n    data: [ 1, 3, 4, 5, 7, 9,  11, 12, 13, 15, 19, 24, 28, 29, 32, 35, 36, 40, 41, 46, 48, 49, 51, 54, 57, 59, 61, 62, 68, 70, 72 ],\n    maja: 93,\n    george: 80,\n    george_boogie: 85, // ?\n    boogie: 90,\n  },\n  {\n    title: \"2020-05-27 2\",\n    data: [ 1, 3, 4, 5, 8, 10, 11, 12, 13, 15, 19, 24, 28, 29, 35, 38, 40, 41, 43, 46, 48, 50, 51, 55, 56, 59, 61, 62, 68, 70, 72 ],\n    maja: 90,\n    george: 82,\n    george_boogie: 90, // ?\n    boogie: 98,\n  },\n  // 20200601\n  {\n    title: \"2020-06-01 1\",\n    data: [ 3, 4, 5, 7, 10, 13, 14, 15, 17, 19, 24, 28, 30, 32, 35, 38, 40, 41, 43, 46, 48, 50, 52, 54, 57, 59, 60, 62, 65, 68, 70, 72 ],\n    maja: 90,\n    boogie: 127,\n  },\n  {\n    title: \"2020-06-01 2\",\n    data: [ 4, 5, 10, 13, 14, 15, 16, 19, 24, 28, 30, 32, 34, 37, 38, 40, 41, 43, 47, 48, 50, 51, 54, 57, 59, 60, 61, 62, 64, 68, 70, 72 ],\n    maja: 96,\n    boogie: 93,\n  },\n  // 20200602\n  {\n    title: \"2020-06-02 1\",\n    data: [ 3, 4, 5, 7, 9,  12, 13, 15, 17, 19, 24, 26, 30, 31, 34, 36, 38, 40, 43, 46, 48, 50, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 93,\n    george: 92, // georgy?\n  },\n  {\n    title: \"2020-06-02 2\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 16, 17, 19, 26, 27, 29, 31, 34, 36, 40, 43, 48, 49, 52, 55, 57, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 97,\n    george: 142, // georgy?\n  },\n  {\n    title: \"2020-06-02 3\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 13, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 40, 43, 46, 48, 49, 50, 54, 57, 59, 61, 62, 68, 70, 71, 72 ],\n    maja: 92,\n    mala: 81,\n  },\n  {\n    title: \"2020-06-02 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 41, 43, 46, 48, 49, 52, 54, 57, 59, 60, 61, 68, 70, 71, 72 ],\n    maja: 86,\n    mala: 88,\n  },\n  // 20200603\n  {\n    title: \"2020-06-03 1\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 15, 16, 20, 26, 28, 29, 30, 32, 36, 39, 41, 43, 46, 48, 49, 52, 54, 56, 59, 60, 61, 63, 69, 70, 71 ],\n    maja: 95,\n    mala: 154,\n  },\n  {\n    title: \"2020-06-03 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 13, 14, 17, 20, 25, 28, 29, 31, 33, 36, 37, 41, 43, 46, 48, 49, 52, 56, 57, 59, 62, 63, 64, 65, 70, 71 ],\n    maja: 99,\n    mala: 87,\n  },\n  {\n    title: \"2020-06-03 3\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 38, 41, 43, 46, 48, 49, 52, 55, 57, 59, 60, 61, 63, 70, 71, 72 ],\n    maja: 98,\n    george: 96,\n  },\n  {\n    title: \"2020-06-03 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 40, 41, 43, 46, 47, 48, 49, 52, 55, 57, 59, 61, 62, 63, 70, 71, 72 ],\n    maja: 93,\n    george: 119,\n  },\n  {\n    title: \"2020-06-03 5\",\n    data: [ 3, 4, 5, 8, 10, 11, 13, 15, 17, 20, 25, 26, 30, 32, 34, 36, 38, 41, 43, 44, 46, 47, 48, 50, 52, 55, 57, 59, 60, 61, 63, 66, 71, 72 ],\n    maja: 101,\n    boogie: 75,\n  },\n  {\n    title: \"2020-06-03 6\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 20, 25, 26, 29, 31, 34, 36, 38, 41, 45, 46, 48, 49, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 92,\n    ada: 69,\n  },\n  // 20200604\n  {\n    title: \"2020-06-04 1\",\n    data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 20, 24, 25, 27, 29, 30, 32, 33, 39, 43, 44, 48, 49, 50, 51, 56, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 92,\n    ada: 96,\n  },\n  {\n    title: \"2020-06-04 2\",\n    data: [ 3, 4, 5, 8, 9, 11, 13, 15, 17, 19, 24, 25, 29, 32, 34, 38, 40, 41, 43, 46, 47, 48, 49, 52, 53, 57, 60, 61, 64, 68, 71, 73 ],\n    maja: 87,\n    george: 93,\n  },\n  {\n    title: \"2020-06-04 3\",\n    data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 19, 24, 26, 29, 32, 34, 38, 40, 41, 44, 46, 48, 50, 52, 55, 57, 59, 62, 65, 68, 71, 72, 73 ],\n    maja: 96,\n    boogie: 184,\n  },\n  {\n    title: \"2020-06-04 4\",\n    data: [ 3, 4, 5, 7, 8, 11, 13, 15, 17, 20, 24, 27, 29, 30, 34, 38, 40, 41, 45, 46, 48, 51, 52, 54, 57, 59, 61, 63, 64, 70, 71, 73 ],\n    maja: 97,\n    ada: 98,\n  },\n  // 20200605\n  {\n    title: \"2020-06-05 1\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 20, 24, 27, 29, 31, 34, 38, 40, 41, 43, 44, 48, 51, 52, 54, 57, 62, 63, 70, 71, 72, 73 ],\n    maja: 89,\n    boogie: 108,\n  },\n  {\n    title: \"2020-06-05 2\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 14, 15, 16, 24, 27, 29, 31, 34, 38, 40, 41, 43, 45, 48, 49, 51, 54, 56, 60, 63, 69, 70, 71, 73 ],\n    maja: 97,\n    boogie: 85,\n  },\n  {\n    title: \"2020-06-05 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 25, 27, 29, 31, 34, 37, 40, 41, 43, 48, 49, 52, 55, 57, 59, 62, 65, 68, 69, 71, 73 ],\n    maja: 93,\n    george: 124,\n  },\n  {\n    title: \"2020-06-05 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 14, 16, 19, 26, 27, 29, 31, 34, 36, 40, 41, 46, 48, 51, 52, 55, 57, 59, 61, 62, 64, 65, 68, 71 ],\n    maja: 86,\n    george: 150,\n  },\n  {\n    title: \"2020-06-05 5\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 13, 15, 20, 26, 27, 31, 32, 34, 36, 39, 41, 44, 46, 51, 52, 54, 56, 59, 61, 62, 63, 65, 69, 71 ],\n    maja: 95,\n    ada: 90,\n  },\n  // 20200608\n  {\n    title: \"2020-06-08 1\",\n    data: [ 3, 4, 5 ],\n    maja: 88,\n    george: 83,\n  },\n  {\n    title: \"2020-06-08 2\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 27, 31, 32, 34, 36, 38, 41, 43, 48, 49, 52, 55, 57, 59, 61, 62, 63, 64, 66, 69 ],\n    maja: 90,\n    george: 117,\n  },\n  {\n    title: \"2020-06-08 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 26, 31, 32, 34, 36, 38, 41, 43, 48, 49, 51, 55, 57, 59, 61, 62, 63, 64, 66, 69, 70 ],\n    maja: 97,\n    mala: 98,\n  },\n  {\n    title: \"2020-06-08 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 12, 16, 17, 20, 24, 25, 31, 33, 34, 36, 38, 41, 46, 48, 49, 52, 55, 57, 59, 60, 63, 64, 65, 66, 70 ],\n    maja: 105,\n    mala: 133,\n  },\n  {\n    title: \"2020-06-08 5\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 16, 17, 20, 25, 27, 30, 33, 34, 37, 38, 41, 45, 48, 50, 51, 55, 57, 59, 60, 63, 65, 66, 70, 72 ],\n    maja: 107,\n    boogie: 88,\n  },\n  {\n    title: \"2020-06-08 6\",\n    data: [ 3, 4, 5, 8, 10, 11, 13, 14, 16, 21, 25, 27, 30, 33, 34, 36, 37, 38, 43, 48, 51, 52, 55, 56, 59, 62, 63, 65, 70, 71, 72 ],\n    maja: 105,\n    boogie: 129,\n  },\n  // 20200609\n  {\n    title: \"2020-06-09 1\",\n    data: [ 3, 4, 5, 8, 10, 11, 12, 14, 15, 16, 19, 21, 25, 28, 30, 31, 35, 37, 39, 40, 43, 48, 51, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n    maja: 82,\n    mala: 0,\n  },\n  {\n    title: \"2020-06-09 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 12, 14, 16, 19, 24, 28, 29, 30, 35, 39, 40, 41, 45, 48, 50, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n    maja: 89,\n    george: 153,\n  },\n  {\n    title: \"2020-06-09 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 13, 14, 16, 19, 25, 26, 30, 33, 35, 37, 40, 41, 45, 48, 50, 51, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n    maja: 109,\n    boogie: 94,\n  },\n  // 20200611\n  {\n    title: \"2020-06-11 1\",\n    data: [ 1, 3, 5, 7, 10, 11, 13, 15, 16, 20, 24, 25, 30, 32, 35, 36, 37, 39, 44, 48, 50, 51, 54, 56, 59, 60, 62, 63, 65, 70, 72 ],\n    maja: 140,\n    george: 119, // 114 / 124 AW\n  },\n  {\n    title: \"2020-06-11 2\",\n    data: [ 1, 3, 5, 7, 9,  10, 11, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 46, 48, 49, 52, 54, 56, 59, 61, 62, 63, 69, 70, 71 ],\n    maja: 97,\n    mala: 116, // 107 / 125 AW\n  },\n  {\n    title: \"2020-06-11 3\",\n    data: [ 1, 3, 5, 7, 10, 11, 12, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 45, 48, 50, 52, 54, 56, 59, 61, 63, 64, 66, 70, 71 ],\n    maja: 87,\n    boogie: 113, // 105 / 122 AW\n  },\n  {\n    title: \"2020-06-11 4\",\n    data: [ 1, 3, 5, 7, 10, 12, 14, 15, 16, 20, 24, 27, 30, 33, 35, 36, 38, 39, 45, 48, 50, 51, 54, 55, 59, 61, 63, 64, 66, 70, 71 ],\n    maja: 117,\n    boogie: 87,\n  },\n  // 20200612\n  {\n    title: \"2020-06-12 1\",\n    data: [ 1, 3, 4, 7, 10, 12, 14, 15, 16, 20, 24, 25, 30, 34, 35, 36, 37, 39, 43, 49, 50, 51, 52, 54, 57, 59, 62, 63, 69, 70, 71, 73 ],\n    maja: 106,\n    george: 106, // 113/99aw\n  },\n  {\n    title: \"2020-06-12 2\",\n    data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 37, 38, 39, 43, 44, 50, 51, 52, 54, 57, 59, 61, 62, 63, 71, 73 ],\n    maja: 125,\n    george: 125,\n  },\n  {\n    title: \"2020-06-12 3\",\n    data: [ 1, 3, 5, 7, 9,  11, 12, 15, 16, 21, 24, 26, 30, 34, 35, 37, 39, 40, 43, 48, 49, 51, 56, 57, 59, 61, 62, 68, 69, 71, 73 ],\n    maja: 124,\n    boogie: 154,\n  },\n  {\n    title: \"2020-06-12 4\",\n    data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 21, 26, 27, 30, 34, 35, 37, 39, 40, 44, 48, 49, 51, 56, 57, 59, 61, 66, 68, 71, 72, 73 ],\n    maja: 88,\n    boogie: 97,\n  },\n  // 20200615\n  {\n    title: \"2020-06-15 1\",\n    data: [ 1, 3, 5, 8, 9,  11, 13, 14, 16, 21, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 51, 55, 57, 59, 61, 66, 68, 69, 70, 71 ],\n    maja: 80,\n    george: 176, // 174/178aw\n  },\n  {\n    title: \"2020-06-15 2\",\n    data: [ 1, 3, 4, 8, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 52, 55, 56, 59, 61, 64, 66, 68, 70, 71 ],\n    maja: 84,\n    george: 140, // 147/133aw\n  },\n  {\n    title: \"2020-06-15 3\",\n    data: [ 1, 3, 5, 9, 10, 11, 12, 14, 16, 21, 26, 28, 30, 33, 35, 38, 39, 40, 43, 44, 48, 50, 51, 55, 57, 59, 61, 66, 68, 71, 72, 73 ],\n    maja: 87,\n    boogie: 139,\n  },\n  {\n    title: \"2020-06-15 4\",\n    data: [ 1, 3, 5, 7, 9, 11, 12, 13, 14, 21, 26, 28, 30, 34, 35, 38, 39, 40, 43, 45, 48, 50, 51, 55, 57, 59, 61, 63, 66, 71, 72, 73 ],\n    maja: 70,\n    boogie: 126,\n  },\n  // {\n  //   title: \"2020-06-15 5\",\n  //   data: [],\n  // },\n  // {\n  //   title: \"2020-06-15 6\",\n  //   data: [],\n  // },\n  // 20200616\n  {\n    title: \"2020-06-16 1\",\n    data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 26, 28, 32, 34, 35, 36, 39, 41, 43, 46, 49, 50, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n    maja: 102,\n    boogie: 124, // 124 / AW\n  },\n  {\n    title: \"2020-06-16 2\",\n    data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 37, 39, 41, 43, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n    maja: 85,\n    boogie: 123,\n  },\n  // {\n  //   title: \"2020-06-16 3\",\n  //   data: [],\n  // },\n  // 20200618\n  {\n    title: \"2020-06-18 1\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n    maja: 89,\n    boogie: 155,\n  },\n  {\n    title: \"2020-06-18 2\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 30, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n    maja: 115,\n    boogie: 130,\n  },\n  {\n    title: \"2020-06-18 3\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 25, 26, 32, 34, 35, 36, 40, 41, 43, 45, 49, 51, 52, 56, 57, 59, 60, 62, 64, 65, 68, 70 ],\n    maja: 116,\n    george: 157,\n  },\n  {\n    title: \"2020-06-18 4\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 17, 21, 25, 26, 30, 34, 35, 36, 40, 41, 43, 46, 49, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 107,\n    ada: 97,\n  },\n  {\n    title: \"2020-06-18 5\",\n    data: [ 3, 5, 9, 10, 11, 13, 16, 17, 21, 26, 27, 32, 34, 35, 36, 40, 41, 43, 44, 50, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 108,\n    ada: 120,\n  },\n  // {\n  //   title: \"2020-06-18 6\",\n  //   data: [],\n  // },\n  // 20200619\n  {\n    title: \"2020-06-19 1\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 24, 27, 32, 34, 35, 36, 38, 41, 43, 44, 49, 50, 52, 55, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 73,\n    boogie: 66,\n  },\n  {\n    title: \"2020-06-19 2\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 27, 28, 31, 32, 34, 36, 38, 41, 43, 44, 49, 50, 52, 54, 55, 59, 60, 61, 64, 65, 68, 71 ],\n    maja: 109,\n    boogie: 91,\n  },\n  {\n    title: \"2020-06-19 3\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 30, 34, 36, 40, 41, 43, 44, 49, 50, 51, 56, 57, 59, 60, 61, 64, 65, 68, 71 ], // 20?\n    maja: 76,\n    george: 144,\n  },\n  {\n    title: \"2020-06-19 4\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 34, 35, 36, 37, 38, 43, 44, 49, 51, 52, 55, 57, 59, 60, 61, 62, 64, 68, 70 ],\n    maja: 118,\n    ada: 97,\n  },\n  // 20200622\n  {\n    title: \"2020-06-22 1\",\n    data: [ 1, 3, 4, 7, 8, 11, 12, 13, 16, 20, 27, 28, 31, 34, 35, 37, 39, 40, 44, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 89,\n    ada: 72,\n  },\n  {\n    title: \"2020-06-22 2\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 27, 28, 29, 34, 35, 37, 39, 40, 43, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 84,\n    ada: 92,\n  },\n  {\n    title: \"2020-06-22 3\",\n    data: [ 1, 3, 4, 8, 9, 11, 13, 14, 16, 20, 26, 28, 30, 34, 35, 37, 39, 40, 43, 46, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 86,\n    george: 90,\n  },\n  {\n    title: \"2020-06-22 4\",\n    data: [ 1, 2, 4, 8, 9, 11, 12, 14, 17, 20, 25, 28, 30, 33, 35, 37, 39, 40, 45, 46, 48, 51, 52, 55, 56, 59, 60, 64, 68, 70, 71, 73 ],\n    maja: 86,\n    george: 85,\n  },\n  // 20200623\n  {\n    title: \"2020-06-23 1\",\n    data: [ 1, 2, 4, 8, 10, 11, 12, 16, 17, 21, 26, 28, 29, 32, 35, 36, 39, 40, 44, 46, 49, 50, 52, 54, 56, 59, 60, 65, 66, 68, 72, 73 ],\n    maja: 81,\n    george: 167,\n  },\n  {\n    title: \"2020-06-23 2\",\n    data: [ 1, 2, 4, 7, 10, 11, 12, 16, 17, 21, 26, 28, 29, 33, 35, 36, 39, 40, 44, 46, 48, 50, 52, 54, 56, 59, 60, 65, 66, 68, 69, 73 ],\n    maja: 90,\n    george: 88,\n  },\n  {\n    title: \"2020-06-23 3\",\n    data: [ 1, 2, 5, 7, 10, 11, 12, 16, 17, 21, 26, 28, 29, 33, 35, 36, 39, 40, 44, 46, 48, 50, 52, 55, 56, 59, 60, 61, 62, 68, 69, 73 ],\n    maja: 85,\n    ada: 123,\n  },\n  {\n    title: \"2020-06-23 4\",\n    data: [ 1, 2, 4, 7, 10, 11, 12, 16, 17, 21, 24, 28, 29, 31, 35, 36, 39, 40, 44, 46, 48, 50, 52, 55, 56, 59, 60, 61, 66, 68, 72, 73 ],\n    maja: 85,\n    ada: 90,\n  },\n  // {\n  //   title: \"2020-06-23 5\",\n  //   data: [],\n  // },\n  // 20200626\n  {\n    title: \"2020-06-26 1\",\n    data: [ 1, 2, 4, 9, 10, 11, 12, 13, 15, 20, 25, 26, 29, 33, 35, 36, 39, 40, 43, 46, 49, 50, 51, 52, 54, 57, 59, 60, 63, 64, 66, 70, 73 ],\n    maja: 88,\n    boogie: 201,\n  },\n  {\n    title: \"2020-06-26 2\",\n    data: [ 1, 2, 5, 9, 10, 11, 12, 13, 17, 21, 24, 25, 29, 33, 35, 36, 37, 40, 43, 46, 49, 51, 54, 57, 59, 60, 63, 64, 66, 70, 73 ],\n    maja: 89,\n    boogie: 146,\n  },\n  {\n    title: \"2020-06-26 3\",\n    data: [ 1, 2, 5, 9, 10, 11, 12, 13, 17, 21, 24, 25, 29, 32, 35, 36, 39, 40, 45, 46, 49, 51, 52, 54, 56, 59, 60, 66, 68, 69, 70, 73 ],\n    maja: 83,\n    ada: 143,\n  },\n  {\n    title: \"2020-06-26 4\",\n    data: [ 1, 2, 4, 8, 10, 11, 14, 15, 17, 19, 25, 26, 30, 32, 34, 36, 37, 38, 45, 46, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 69, 70 ],\n    maja: 96,\n    ada: 92,\n  },\n  // 20200629\n  {\n    title: \"2020-06-29 1\",\n    data: [ 1, 2, 4, 7, 9,  10, 11, 12, 17, 21, 24, 27, 29, 30, 34, 38, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 69, 72 ],\n    maja: 85, // 84/85aw\n    boogie: 186,\n  },\n  {\n    title: \"2020-06-29 2\",\n    data: [ 1, 2, 4, 7, 10, 11, 12, 13, 17, 21, 24, 27, 30, 32, 34, 36, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 81, // 81/81aw\n    boogie: 182,\n  },\n  {\n    title: \"2020-06-29 3\",\n    data: [ 1, 2, 4, 8, 10, 11, 12, 13, 17, 21, 24, 27, 30, 32, 34, 36, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 65, 68, 72 ],\n    maja: 76, // 73/79aw\n    ada: 180,\n  },\n  // 20200630\n  {\n    title: \"2020-06-30 1\",\n    data: [ 1, 2, 4, 10, 11, 12, 13, 16, 17, 21, 43, 46, 49, 51, 52, 57, 59, 60, 61, 62, 65, 68, 72 ],\n    maja: 82, // 83/81aw\n    ada: 104,\n  },\n  {\n    title: \"2020-06-30 2\",\n    data: [ 1, 2, 4, 7,  10, 11, 12, 13, 17, 21, 24, 26, 30, 31, 34, 36, 39, 40, 44, 45, 48, 51, 52, 55, 59, 60, 62, 68, 70, 72, 73 ],\n    maja: 85, // 83/86a\n    ada: 101,\n  },\n  {\n    title: \"2020-06-30 3\",\n    data: [ 1, 2, 5, 7,  10, 11, 12, 16, 17, 21, 24, 26, 30, 33, 34, 36, 39, 40, 43, 46, 48, 51, 52, 55, 57, 59, 60, 61, 62, 65, 68, 72 ],\n    maja: 78, // 77/79aw\n    boogie: 147,\n  },\n  // 20200702\n  {\n    title: \"2020-07-02 1\",\n    data: [ 1, 2, 4, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 33, 34, 36, 39, 40, 43, 46, 47, 49, 51, 55, 57, 59, 60, 61, 68, 69, 70, 71 ],\n    maja: 78, // 74/82aw\n    boogie: 192,\n  },\n  {\n    title: \"2020-07-02 2\",\n    data: [ 1, 2, 5, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 49, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n    maja: 91, // 83/98aw\n    boogie: 167,\n  },\n  {\n    title: \"2020-07-02 3\",\n    data: [ 1, 2, 4, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 48, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n    maja: 90, // 87/92aw\n    ada: 167,\n  },\n  {\n    title: \"2020-07-02 4\",\n    data: [ 1, 2, 4, 9, 10, 12, 13, 15, 17, 20, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 48, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n    maja: 90, // 85/94aw\n    ada: 97,\n  },\n  // // 20200703\n  // {\n  //   title: \"2020-07-03 1\",\n  //   data: [ ],\n  //   maja: 88,\n  //   boogie: 78,\n  // },\n  // {\n  //   title: \"2020-07-03 2\",\n  //   data: [ ],\n  //   maja: 74,\n  //   boogie: 152,\n  // },\n  // {\n  //   title: \"2020-07-03 3\",\n  //   data: [ ],\n  //   maja: 74,\n  //   ada: 210,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: 87,\n  //   ada: 210,\n  // },\n  // // 202007\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n];\n"],"sourceRoot":""}