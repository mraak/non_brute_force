{"version":3,"sources":["store/aggregates.js","store/layout.js","data/tracks.js","store/size.js","store/graph.js","store/ids.js","utils.js","store/iterations.js","formatters.js","ui/components.js","ui/pages/Archive.js","store/iterationIndex.js","store/iteration.js","store/phase.js","ui/Heartrate.js","ui/pages/Phase1.js","ui/pages/Phase2.js","store/model.js","store/training.js","ui/Guess.js","ui/pages/Phase3.js","ui/Preview.js","store/progress.js","tf/vis.js","ui/Train.js","ui/pages/Phase4.js","ui/pages/Main.js","ui/pages/Map.js","ui/Redesign.js","index.js","data/iterations.js","data/layout.js"],"names":["setAggregates","createEvent","aggregates$","restore","fetchAggregates","createEffect","use","fetch","done","watch","a","params","result","json","aggregates","setLayout","layout$","horizontalTracks","verticalTracks","setSize","size$","linksGraph$","combine","layout","size","graph","Graph","allowSelfLoops","edgeKeyGenerator","undirected","source","target","attributes","multi","type","id","i","fromIndex","addNode","nodeEntries","x","j","toIndex","y","z","hasNode","addEdge","clusters$","linksGraph","idClusters","clusterIds","traverseNode","getNodeAttributes","process","hasEdge","push","nodes","clusterIds$","map","clusters","key","sort","idClusters$","ids$","item","inside","p","w","h","mouseX","mouseY","xy","Math","floor","generateIteration","getState","ids","id2index","Object","fromEntries","keys","index","horizontalSteps","s","e","steps","verticalSteps","pick","random","length","addPending","floorTiles","pending","indexOf","k","iteration","floorIndex","n","row","round","is","filter","b","iterationToLayout","join","xs","ys","extractBpms","aggregate","maja","dog","undefined","devices","bpm","rates","george","boogie","mala","ada","NaN","reduce","memo","rate","heartRateDog","setHardcodedIterations","hardcodedIterations$","fetchIterations","fetchedIterations$","hardcodedIterations","fetchedIterationsResponse","fetchedIterations","iterations","all","valid","timestamp","iterationLayout","data","nextAaggregate","find","Date","start","currentAggregate","delta","abs","actualRank","Number","isFinite","trainable","isNaN","output","Array","from","_","combined","setIterations","iterations$","formatBpm","formatRank","rank","Image","styled","img","saveIteration","diff","payload","_id","console","log","method","headers","body","JSON","stringify","HorizontalPreview","value","useStore","ref","useRef","useEffect","current","p5","W","H","setup","createCanvas","CANVAS","noLoop","textSize","textAlign","CENTER","draw","pos","posX","posY","c","fill","rect","text","TILE_SIZE","sketch","remove","Styles","div","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","useMemo","Header","accessor","Cell","original","checked","disabled","onChange","date","format","expectedRank","src","setIterationIndex","iterationIndex$","iteration$","iterationIndex","setPhase","phase$","Heart","ecg","options","adDuration","vdDuration","vrDuration","this","beatDuration","nextBeat","nextBeatIn","voltage","addValue","time","randomGaussian","sin","setVoltage","noise","splice","drawBPM","getBpm","updateBPM","updateTimeToNextBeat","atriaDepolarization","ventricleDepolarization","ventricleRepolarization","draw_i","ECG","graphZero","values","maxValuesHistory","maximumX","alpha","stroke","line","circle","v","pop","updateDate","updateBloodPressure","updateVentilation","updateTemperature","updateHemoglobin","Card","code","heart","WEBGL","colorMode","RGB","angleMode","DEGREES","translate","beat","plotValues","updateInfo","Phase1ContentStats","who","areas","gap","Who","Bpm","Human","Dog","Delta","Class","AccGraph","LossGraph","AccDescription","LossDescription","as","model$","model","tf","layers","conv2d","batchInputShape","kernelSize","filters","strides","activation","kernelInitializer","flatten","dense","units","compile","loss","metrics","optimizer","adam","setTraining","training$","setAttempts","attempts$","setRank","rank$","now","title","toISOString","classNames","ranks","guess","number","response","predict","preds","argMax","argMax1","l","labels","tfvis","perClassAccuracy","classAccuracy","container","name","tab","confusionMatrix","tickLabels","dispose","fail","error","finally","setTimeout","tries","redraw","max","bounds","dragging","mousePressed","mouseReleased","mouseDragged","posZ","attempts","Attempt","Progress","Input","Hidden","Output","Guess","Code","frameRate","clear","ambientLight","rotateX","rotateY","PI","plane","edgeEntries","t","sp","tp","strokeWeight","href","setProgress","progress$","visualizeModel","modelSummary","validIterations","train","callbacks","fitCallbacks","styles","height","fit","epochs","shuffle","onEpochEnd","args","epoch","progress","training","onClick","Actions","Details","Preview","Train","Section","section","Stats","Co2","Temp","Start","End","Heartrate","Sidebar","PhaseTitle","phase","Phase","Title","Main","Phase4","Phase3","Phase2","Phase1","Nav","nav","to","exact","basename","path","Archive","Map","props","split","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3a155845.chunk.js","sourcesContent":["import { createEffect, createEvent, restore } from \"effector\";\n\nconst setAggregates = createEvent();\nexport const aggregates$ = restore(setAggregates, null);\n\nconst fetchAggregates = createEffect();\nfetchAggregates.use(() => fetch(\"https://heartrate.miran248.now.sh/api/aggregates\"));\nfetchAggregates.done.watch(async({ params, result }) => {\n  const { aggregates } = await result.json();\n\n  setAggregates(aggregates);\n\n  // setTimeout(() => fetchAggregates(), 60000);\n});\n\nfetchAggregates();\n","import { createEvent, restore } from \"effector\";\n\nexport const setLayout = createEvent();\nexport const layout$ = restore(setLayout, null);\n","export const horizontalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  [\n    [ 1, 1, 1 ], // fixed\n\n    [ 1, 2, 3 ],\n    [ 1, 4, 5 ],\n  ],\n  // 2. floor\n  [\n    // [ 1, 0, 6 ], // empty\n\n    [ 2, 7, 10 ],\n\n    [ 4, 11, 17 ],\n\n    // [ 1, 0, 18 ], // empty\n    // [ 1, 0, 19 ],\n    // [ 1, 0, 20 ],\n    // [ 1, 0, 21 ],\n    [ 1, 19, 21 ],\n\n    // [ 1, 0, 22 ], // empty\n  ],\n  // 3. floor\n  [\n    // [ 1, 0, 23 ], // empty\n\n    [ 2, 24, 28 ],\n\n    [ 3, 29, 35 ],\n\n    [ 3, 36, 41 ],\n\n    // [ 1, 0, 42 ], // empty\n  ],\n  // 4. floor\n  [\n    // [ 2, 43, 47 ],\n    [ 2, 43, 46 ], // 47 temp empty\n\n    // [ 4, 48, 53 ],\n    [ 3, 48, 52 ], // 53 temp empty\n\n    // [ 2, 54, 58 ],\n    [ 2, 54, 57 ], // 58 temp empty\n\n    [ 1, 59, 59 ], // fixed\n  ],\n  // 5. floor\n  null,\n];\n\nexport const verticalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  null,\n  // 2. floor\n  null,\n  // 3. floor\n  null,\n  // 4. floor\n  null,\n  // 5. floor\n  [\n    [ 1, 63, 68 ],\n\n    [ 1, 64, 72 ],\n\n    [ 2, 61, 73 ],\n\n    [ 2, 60, 71 ],\n  ],\n];\n","import { createEvent, restore } from \"effector\";\n\nexport const setSize = createEvent();\nexport const size$ = restore(setSize, null);\n","import { combine } from \"effector\";\nimport Graph from \"graphology\";\n\nimport { layout$ } from \"./layout\";\nimport { size$ } from \"./size\";\n\nimport { fromIndex, toIndex } from \"../utils\";\n\n// all possible links / paths, ignoring clusters and floors\nexport const linksGraph$ = combine(layout$, size$, (layout, size) => {\n  if(layout === null || size === null)\n    return null;\n\n  const graph = new Graph({\n    allowSelfLoops: false,\n    edgeKeyGenerator: ({ undirected, source, target, attributes }) => `${source}->${target}`,\n    multi: true,\n    type: \"directed\",\n  });\n\n  let id = 0;\n  for(let i in layout) {\n    if(layout[i] === 0)\n      continue;\n\n    const attributes = {\n      ...fromIndex(size, i),\n      i,\n      id: ++id,\n    };\n\n    graph.addNode(i, attributes);\n  }\n\n  for(let [ i, a ] of graph.nodeEntries()) {\n    // right\n    if(a.x < size.x - 1) {\n      const j = toIndex(size, a.x + 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 1, y: 0, z: 0 });\n    }\n    // down\n    if(a.y < size.y - 1) {\n      const j = toIndex(size, a.x, a.y + 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: 1, z: 0 });\n    }\n    // // left\n    if(a.x > 0) {\n      const j = toIndex(size, a.x - 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: -1, y: 0, z: 0 });\n    }\n    // up\n    if(a.y > 0) {\n      const j = toIndex(size, a.x, a.y - 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: -1, z: 0 });\n    }\n\n    // next floor\n    if(a.z < size.z - 1) {\n      // right\n      if(a.x < size.x - 1) {\n        const j = toIndex(size, a.x + 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 1, y: 0, z: 1 });\n      }\n      // down\n      if(a.y < size.y - 1) {\n        const j = toIndex(size, a.x, a.y + 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: 1, z: 1 });\n      }\n      // left\n      if(a.x > 0) {\n        const j = toIndex(size, a.x - 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: -1, y: 0, z: 1 });\n      }\n      // up\n      if(a.y > 0) {\n        const j = toIndex(size, a.x, a.y - 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: -1, z: 1 });\n      }\n    }\n  }\n\n  return graph;\n});\n\n// group neighbors (on the same floor) into clusters\nconst clusters$ = combine(linksGraph$, size$, (linksGraph, size) => {\n  if(linksGraph === null || size === null)\n    return null;\n\n  let id = 0;\n  const idClusters = {};\n  const clusterIds = {};\n\n  const traverseNode = (i) => {\n    const a = linksGraph.getNodeAttributes(i);\n    // right\n    if(a.x < size.x - 1)\n      process(i, toIndex(size, a.x + 1, a.y, a.z));\n    // down\n    if(a.y < size.y - 1)\n      process(i, toIndex(size, a.x, a.y + 1, a.z));\n    // left\n    if(a.x > 0)\n      process(i, toIndex(size, a.x - 1, a.y, a.z));\n    // up\n    if(a.y > 0)\n      process(i, toIndex(size, a.x, a.y - 1, a.z));\n  };\n\n  const process = (i, j) => {\n    if(i in idClusters && j in idClusters)\n      return;\n\n    if(linksGraph.hasNode(j) && linksGraph.hasEdge(i, j)) {\n      if(!(i in idClusters)) {\n        idClusters[i] = ++id;\n        clusterIds[idClusters[i]] = [ +i ];\n      }\n\n      if(!(j in idClusters)) {\n        idClusters[j] = idClusters[i];\n        clusterIds[idClusters[j]].push(+j);\n      }\n\n      traverseNode(j);\n    }\n  };\n\n  for(let i of linksGraph.nodes())\n    traverseNode(+i);\n\n  return [ clusterIds, idClusters ];\n});\nexport const clusterIds$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ clusterIds, _ ] = clusters;\n\n  for(let key in clusterIds)\n    clusterIds[key].sort();\n\n  return clusterIds;\n});\nexport const idClusters$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ _, idClusters ] = clusters;\n\n  return idClusters;\n});\n","import { layout$ } from \"./layout\";\n\nexport const ids$ = layout$.map((layout) => {\n  if(!layout)\n    return null;\n\n  let id = 0;\n\n  return layout.map((item) => item === 0 ? 0 : ++id);\n});\n","import { horizontalTracks, verticalTracks } from \"./data/tracks\";\nimport { clusterIds$, idClusters$, linksGraph$ } from \"./store/graph\";\nimport { ids$ } from \"./store/ids\";\nimport { size$ } from \"./store/size\";\n\nexport function inside(p, [ x, y, w, h ]) {\n  return p.mouseX > x && p.mouseX < x + w && p.mouseY > y && p.mouseY < y + h;\n}\n\nexport function fromIndex(size, i) {\n  const xy = size.x * size.y;\n  const z = Math.floor(i / xy);\n\n  i -= z * xy;\n  const y = Math.floor(i / size.x);\n  const x = i - y * size.x;\n\n  return { x, y, z };\n}\nexport function toIndex(size, x, y, z) {\n  return z * size.x * size.y + y * size.x + x;\n}\n\nexport const generateIteration = (p) => {\n  const clusterIds = clusterIds$.getState();\n  const idClusters = idClusters$.getState();\n  const linksGraph = linksGraph$.getState();\n  const ids = ids$.getState();\n  const size = size$.getState();\n\n  const id2index = Object.fromEntries(Object.keys(idClusters).map((index) => [ ids[index], index ]));\n  // const edges = Array.from(linksGraph.edgeEntries());\n\n  // console.log(\"clusterIds\", clusterIds);\n  // console.log(\"idClusters\", idClusters);\n  // // console.log(\"linksGraph\", edges.filter(([ k, ka, s ]) => s == 19)); // ids[+s] === 1));\n  // console.log(\"ids\", ids);\n\n  const horizontalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x + 1, a.y, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n  const verticalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x, a.y + 1, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n\n  const pick = (steps) => steps[Math.floor(Math.random() * steps.length)];\n\n  const addPending = (i, a, floorTiles, pending) => {\n    if(a.x < 0 || a.y < 0 || a.x >= size.x || a.y >= size.y)\n      return;\n\n    const j = toIndex(size, a.x, a.y, a.z);\n    if(!linksGraph.hasEdge(i, j) || floorTiles.indexOf(ids[j]) < 0) {\n      const k = toIndex(size, a.x, a.y, a.z + 1);\n      if(linksGraph.hasEdge(i, k) && pending.indexOf(ids[k]) < 0)\n        pending.push(ids[k]);\n    }\n  };\n\n  let iteration = [];\n  let pending = [];\n\n  for(let floorIndex = 0; floorIndex < 5; ++floorIndex) {\n    const floor = horizontalTracks[floorIndex] || verticalTracks[floorIndex];\n\n    let floorTiles = [];\n\n    for(let [ n, s, e ] of floor) {\n      const steps = s === 0 ? null : horizontalTracks[floorIndex] ? horizontalSteps(s, e) : verticalSteps(s, e);\n      const row = [];\n\n      if(pending.length > 0) {\n        if(s === 0) {\n          const i = pending.indexOf(e);\n          if(i > -1)\n            row.push(e);\n          else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        } else {\n          const is = pending.filter((i) => steps.indexOf(i) > -1);\n          if(is.length > 0) {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(Math.random() < .5)\n                  id = is[Math.floor(Math.random() * is.length)];\n                else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              row.push(id);\n            }\n          } else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        }\n      } else {\n        for(let i = 0; i < n; ++i) {\n          let id = 0;\n\n          do {\n            if(s === 0) {\n              id = [ s, e ][Math.round(Math.random())];\n            } else {\n              id = pick(steps);\n            }\n          } while(row.indexOf(id) > -1);\n\n          if(id > 0)\n            row.push(id);\n        }\n      }\n\n      floorTiles = [ ...floorTiles, ...row ];\n    }\n\n    pending = [];\n\n    for(let id of floorTiles) {\n      const i = id2index[id];\n      const a = linksGraph.getNodeAttributes(i);\n\n      // right\n      addPending(i, { x: a.x + 1, y: a.y, z: a.z }, floorTiles, pending);\n      // down\n      addPending(i, { x: a.x, y: a.y + 1, z: a.z }, floorTiles, pending);\n      // // left\n      addPending(i, { x: a.x - 1, y: a.y, z: a.z }, floorTiles, pending);\n      // up\n      addPending(i, { x: a.x, y: a.y - 1, z: a.z }, floorTiles, pending);\n    }\n\n    // console.log(\"pending\", pending);\n\n    iteration = [ ...iteration, ...floorTiles ];\n  }\n\n  iteration.sort((a, b) => a - b);\n\n  return iteration;\n};\n\nexport const iterationToLayout = (layout, iteration) => {\n  let id = 0;\n\n  return layout.map((item) => {\n    if(item === 0)\n      return 0;\n\n    return iteration.indexOf(++id) > -1 ? 1 : 0;\n  });\n};\n\nexport const join = (xs, ys) => xs.map((x, i) => x + ys[i]);\n","import { combine, createEffect, createEvent, restore } from \"effector\";\n\nimport { aggregates$ } from \"./aggregates\";\nimport { layout$ } from \"./layout\";\n\nimport { iterationToLayout, join } from \"../utils\";\n\nconst heartRateDog = (iteration) => {\n  const rates = [];\n\n  if(\"dog\" in iteration)\n    rates.push(iteration.dog);\n  if(\"george\" in iteration)\n    rates.push(iteration.george);\n  if(\"boogie\" in iteration)\n    rates.push(iteration.boogie);\n  if(\"mala\" in iteration)\n    rates.push(iteration.mala);\n  if(\"ada\" in iteration)\n    rates.push(iteration.ada);\n\n  const n = rates.length;\n\n  if(n === 0)\n    return NaN;\n\n  return rates.reduce((memo, rate) => memo + rate, 0) / n;\n};\n// TODO: Move to utils\nconst heartRateDeltaRank = (rate) => {\n  if(rate < 5)\n    return 0; // [ 0, 5 )\n\n  if(rate < 10)\n    return 1; // [ 5, 10 )\n\n  if(rate < 20)\n    return 2; // [ 10, 20 )\n\n  if(rate < 40)\n    return 3; // [ 20, 40 )\n\n  return 4; // [ 40, inf )\n};\n\n// TODO: Fix me!\nconst extractBpms = (iteration, aggregate) => {\n  let maja;\n  let dog;\n\n  if(aggregate !== undefined && \"_id\" in iteration) {\n    const { devices } = aggregate;\n\n    maja = devices[\"Maja’s iPhone\"];\n    dog = devices[\"Ada’s iPhone\"];\n\n    if(maja && dog) {\n      maja = maja[Object.keys(maja)[0]].bpm;\n      dog = dog[Object.keys(dog)[0]].bpm;\n    } else if(maja) {\n      const keys = Object.keys(maja);\n\n      if(keys.length >= 2) {\n        const s = maja;\n        maja = s[keys[0]].bpm;\n        dog = s[keys[1]].bpm;\n      }\n    } else if(dog) {\n      const keys = Object.keys(dog);\n\n      if(keys.length >= 2) {\n        const s = dog;\n        maja = s[keys[0]].bpm;\n        dog = s[keys[1]].bpm;\n      }\n    }\n  } else {\n    maja = iteration.maja;\n    dog = heartRateDog(iteration);\n  }\n\n  return [ maja, dog ];\n};\n\nexport const setHardcodedIterations = createEvent();\nexport const hardcodedIterations$ = restore(setHardcodedIterations, null);\n\nexport const fetchIterations = createEffect();\nfetchIterations.use(() => fetch(\"https://heartrate.miran248.now.sh/api/iterations\"));\n\nfetchIterations();\n\nconst fetchedIterations$ = restore(fetchIterations.done, null);\n\ncombine(layout$, hardcodedIterations$, fetchedIterations$, aggregates$, async(layout, hardcodedIterations, fetchedIterationsResponse, aggregates) => {\n  if(layout === null || hardcodedIterations === null || fetchedIterationsResponse === null || aggregates === null)\n    return;\n\n  const { result } = fetchedIterationsResponse;\n  const { iterations: fetchedIterations } = await result.json();\n  \n  const all = [\n    ...hardcodedIterations,\n    ...fetchedIterations.map((iteration) => ({\n      ...iteration,\n      valid: \"valid\" in iteration ? iteration.valid : true,\n    })),\n  ];\n\n  all.sort((a, b) => a.timestamp - b.timestamp);\n\n  let currentAggregate;\n    \n  const iterations = all.map(\n    (iteration) => {\n      const iterationLayout = iterationToLayout(layout, iteration.data);\n\n      let aggregate;\n      if(iteration.valid) {\n        const nextAaggregate = aggregates.find(\n          (aggregate) => +new Date(aggregate.start) >= iteration.timestamp\n        );\n\n        if(currentAggregate !== nextAaggregate) {\n          aggregate = currentAggregate = nextAaggregate;\n        }\n      }\n      // iteration.aggregate = aggregate;\n\n      const [ maja, dog ] = extractBpms(iteration, aggregate);\n\n      // const payload = {\n      //   _id: iteration._id,\n      //   title: iteration.title,\n      //   data: iteration.data,\n      //   expectedRank: iteration.expectedRank,\n      //   timestamp: iteration.timestamp,\n      //   iterationKey: iteration.iterationKey,\n      //   // maja,\n      //   // dog,\n      //   aggregate: iteration.aggregate,\n      // };\n\n      // await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify(payload),\n      // });\n\n      const delta = Math.abs(maja - dog);\n      const actualRank = Number.isFinite(delta) ? heartRateDeltaRank(delta) : NaN;\n      const trainable = iteration.valid && isNaN(actualRank) === false;\n      const output = trainable\n        ? Array.from(Array(5), (_, i) => i === actualRank ? 1 : 0)\n        : null;\n\n      const result = {\n        ...iteration,\n        actualRank,\n        combined: join(layout, iterationLayout),\n        delta,\n        dog,\n        layout: iterationLayout,\n        maja,\n        output,\n        trainable,\n      };\n\n      // console.log(iteration, result)\n      \n      return result;\n    }\n  );\n\n  iterations.sort((a, b) => b.timestamp - a.timestamp);\n\n  setIterations(iterations);\n});\n\nconst setIterations = createEvent();\nexport const iterations$ = restore(setIterations, null);\n","import { format } from \"date-fns\";\n\nexport const formatBpm = (bpm) => Number.isFinite(bpm) ? Math.round(bpm) : \"NA\";\nexport const formatRank = (rank) => Number.isFinite(rank) ? rank : \"NA\";\nexport const formatDate = (date) => format(date, \"yyyy-MM-dd HH:mm:ss\");\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n`;\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useMemo, useRef } from \"react\";\nimport { useTable } from \"react-table\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { ids$ } from \"../../store/ids\";\nimport { fetchIterations, iterations$ } from \"../../store/iterations\";\nimport { size$ } from \"../../store/size\";\nimport { fromIndex } from \"../../utils\";\n\nimport { Image } from \"../components\";\n\nconst saveIteration = async(id, diff) => {\n  const payload = {\n    _id: id,\n    ...diff,\n  };\n\n  console.log(\"saveIteration\", payload);\n\n  await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  });\n\n  fetchIterations();\n};\n\nconst TILE_SIZE = 12;\nconst sketch = (iteration, size) => (p) => {\n  const ids = ids$.getState();\n\n  // horizontal\n  const W = ((size.x + 1) * size.z - 1) * TILE_SIZE;\n  const H = size.y * TILE_SIZE;\n\n  // vertical\n  // const W = size.x * TILE_SIZE;\n  // const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n  };\n  p.draw = () => {\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    for(let i in iteration) {\n      const pos = fromIndex(size, i);\n\n      // horizontal\n      const posX = pos.x * TILE_SIZE;\n      const posY = pos.y * TILE_SIZE;\n      const posZ = pos.z * (size.x + 1) * TILE_SIZE;\n\n      const x = posX + posZ;\n      const y = posY;\n\n      // vertical\n      // const posX = p.x * TILE_SIZE;\n      // const posY = p.y * TILE_SIZE;\n      // const posZ = p.z * (size.y + 1) * TILE_SIZE;\n\n      // const x = posX;\n      // const y = posY + posZ;\n\n      let c = 255;\n\n      if(iteration[i] === 2)\n        c = 51;\n      else if(iteration[i] === 1)\n        c = 204;\n\n      p.fill(c);\n      p.rect(x, y, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, x + TILE_SIZE * .5, y + TILE_SIZE * .5);\n      if(ids[i] > 0)\n        p.text(ids[i], x + TILE_SIZE * .5, y + TILE_SIZE * .5);\n    }\n  };\n};\nconst HorizontalPreview = ({ value: layout }) => {\n  const size = useStore(size$);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null)\n      return;\n\n    const p = new p5(sketch(layout, size), ref.current);\n\n    return p.remove;\n  }, [ ref.current ]);\n\n  return (\n    <div ref={ref} />\n  );\n};\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nconst Table = ({ columns, data }) => {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default () => {\n  const iterations = useStore(iterations$);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"valid\",\n        accessor: \"valid\",\n        Cell: ({ row: { original }, value }) => (\n          <input type=\"checkbox\"\n                 checked={value}\n                 disabled={!(\"_id\" in original)}\n                 onChange={() => saveIteration(original._id, { valid: !value })}\n                 />\n        ),\n      },\n      {\n        Header: \"date\",\n        accessor: ({ timestamp }) => formatDate(timestamp),\n      },\n      {\n        Header: \"layout\",\n        accessor: \"combined\",\n        Cell: HorizontalPreview,\n      },\n      {\n        Header: \"maja bpm\",\n        accessor: ({ maja }) => formatBpm(maja),\n      },\n      {\n        Header: \"dog bpm\",\n        accessor: ({ dog }) => formatBpm(dog),\n      },\n      {\n        Header: \"delta bpm\",\n        accessor: ({ delta }) => formatBpm(delta),\n      },\n      {\n        Header: \"class\",\n        accessor: ({ actualRank }) => formatRank(actualRank),\n      },\n      {\n        Header: \"match\",\n        accessor: ({ expectedRank, actualRank }) => expectedRank === actualRank,\n        Cell: ({ value }) => (\n          <input type=\"checkbox\"\n                 checked={value}\n                 disabled />\n        ),\n      },\n      {\n        Header: \"trainable\",\n        accessor: \"trainable\",\n        Cell: ({ value }) => (\n          <input type=\"checkbox\"\n                 checked={value}\n                 disabled />\n        ),\n      },\n    ],\n    []\n  );\n\n  return (\n    <Styles>\n      <Image src=\"archive-histogram.png\" />\n      <Table columns={columns} data={iterations || []} />\n    </Styles>\n  );\n};\n","import { createEvent, restore } from \"effector\";\n\nexport const setIterationIndex = createEvent();\nexport const iterationIndex$ = restore(setIterationIndex, 0);\n","import { combine } from \"effector\";\n\nimport { iterationIndex$ } from \"./iterationIndex\";\nimport { iterations$ } from \"./iterations\";\n\nexport const iteration$ = combine(iterationIndex$, iterations$, (iterationIndex, iterations) => {\n  if(iterationIndex < 0 || iterations === null)\n    return null;\n\n  return iterations[iterationIndex];\n});\n","import { createEvent, restore } from \"effector\";\n\nexport const setPhase = createEvent();\nexport const phase$ = restore(setPhase, 4);\n","import p5 from \"p5\";\nimport React, { useEffect, useMemo, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../formatters\";\n\n/**\n * A Heart object will beat, and generate voltage values according to the time\n * the beat started\n *\n * \"Duration\" values are really pixels. 1 pixel represents 1/60 of a second.\n */\nclass Heart {\n  /**\n   * Creates an instance of Heart\n   * @param {number} adDuration Duration in pixels of the atria depolarization\n   * @param {number} vdDuration Duration in pixels of the ventricle depolarization\n   * @param {number} vrDuration Duration in pixels of the ventricle repolarization\n   *\n   * @property {number} this.beatDuration Duration in pixels of the whole beat\n   * @property {number} this.nextBeat Time between last beat, and next beat\n   * @property {number} this.nextBeatIn Time remaining for next beat\n   * @property {number[]} this.bpm Time between two particular beats\n   * @property {number} this.voltage Current voltage value. No units used.\n   */\n  constructor(p, ecg, options, adDuration, vdDuration, vrDuration) {\n    this.p = p;\n    this.ecg = ecg;\n    this.options = options;\n    this.adDuration = adDuration;\n    this.vdDuration = vdDuration;\n    this.vrDuration = vrDuration;\n\n    this.beatDuration = adDuration + vdDuration + vrDuration;\n\n    this.nextBeat = 1;\n    this.nextBeatIn = 1;\n    this.bpm = [];\n    this.voltage = 0;\n  }\n\n  /**\n   * Assign the heart a new voltage value, and report that value to the ECG\n   * the heart is connected to.\n   * @param {number} voltage\n   */\n  setVoltage(voltage) {\n    this.voltage = voltage;\n    this.ecg.addValue({ y: this.voltage });\n  }\n\n  /**\n   * Generates the voltage values corresponding to the atria depolarization process.\n   * This is the process that generates the first part of the curve of every beat.\n   *\n   * @param {number} time Time in pixels since the atria depolarization process started\n   */\n  atriaDepolarization(time) {\n    const p = this.p;\n    \n    // This process is not close to what reality does, but here it is generated using a\n    // sin function where only the positive values remain, making a bump followed by a\n    // flat section\n    let y = p.randomGaussian(5, 1) * p.sin(time * (360 / this.adDuration));\n\n    // To compensate for the y-axis inverted direction, return -y when y is over 0\n    y = y > 0 ? -y : 0.2 * (1 - y);\n\n    // Update the voltage to whatever value was calculated\n    this.setVoltage(y + p.noise(time));\n  }\n\n  /**\n   * Generates the voltage values corresponding to the ventricle depolarization process.\n   * This is the process that generates the spiky part of the curve of every beat.\n   *\n   * @param {number} time Time in pixels since the ventricle depolarization process started\n   */\n  ventricleDepolarization(time) {\n    const p = this.p;\n    \n    let y;\n    // In the first third, the curve has a spike going down\n    if(time <= this.vdDuration / 3)\n      y = (p.randomGaussian(8, 2) * (this.vdDuration - time)) / 6;\n    // In the second third, the curve has a big spike going up\n    else if(time < (2 * this.vdDuration) / 3) {\n      // Start producing a sound, going from 0 to 0.5 volume in 0.01 seconds\n      // osc.amp(0.5, 0.01);\n      y = (p.randomGaussian(70, 2) * p.abs(1.5 - (this.vdDuration - time))) / 3;\n      y = -y;\n    }\n\n    // In the last third, the curve has another spike (bigger than the first one) going down\n    else {\n      y = (p.randomGaussian(20, 2) * (this.vdDuration - time)) / 3;\n      // Stop the sound, going from 0.5 to 0 volume in 0.01 secs\n      // osc.amp(0, 0.01);\n    }\n\n    // Update the voltage to whatever value was calculated\n    this.setVoltage(y);\n  }\n\n  /**\n   * Generates the voltage values corresponding to the ventricle repolarization process.\n   * This is the process that generates the last part of the curve of every beat.\n   *\n   * @param {number} time Time in pixels since the ventricle repolarization process started\n   */\n  ventricleRepolarization(time) {\n    const p = this.p;\n    \n    // This process is not close to what reality does, but here it is generated using a\n    // sin function where only the positive values remain, but displaced half a turn to\n    // make a flat section followed by a bump\n    let y = p.randomGaussian(8, 2) * p.sin(180 + time * (360 / this.vrDuration));\n\n    // To compensate for the y-axis inverted direction, return -y when y is over 0\n    y = y < 0 ? 0.2 * (1 - y) : -y;\n\n    // Update the voltage to whatever value was calculated\n    this.setVoltage(y + p.noise(time));\n  }\n\n  updateBPM() {\n    const p = this.p;\n    \n    // bpm = 3600 / pixel-distance\n    // this.bpm = 3600 / this.nextBeat;\n    this.bpm.push(3600 / this.nextBeat);\n\n    // To make rapid frequency changes meaningful, get the average bpm using only the\n    // last 5 values of time, not all of them. So dispose the oldest one when the list\n    // length is over 5.\n    if(this.bpm.length > 5) this.bpm.splice(0, 1);\n    this.ecg.drawBPM(p.round(this.bpm.reduce((p, c) => p + c, 0) / this.bpm.length));\n    // this.ecg.drawBPM(p.round(this.bpm));\n  }\n  /**\n   * Decrease this.nextBeatIn to simulate the pass of time.\n   * If necessary, create a new this.nextBeat value\n   */\n  updateTimeToNextBeat() {\n    // This indicates that the next beat will begin in the next iteration\n    if(this.nextBeatIn-- <= 0) {\n      // const p = this.p;\n    \n      // Then calculate a new \"remaining time\" for the next beat.\n      // Use the x coordinates of the mouse position to modify the heart frequency\n      // this.nextBeat = p.abs(p.ceil(p.randomGaussian((900 - p.mouseX) / 10, 3)));\n      // this.nextBeat = this.nextBeatIn + 3600 / 200;\n      this.nextBeat = this.nextBeatIn + 3600 / this.options.getBpm();\n\n      // It the pixel time between beat and beat is less than 18, force it to be\n      // 18. This value makes to a bpm of 200.\n      // if(this.nextBeat < 18) this.nextBeat = 18;\n\n      // Get new bpm values using the last this.nextBeat\n      this.updateBPM();\n\n      // Reset the remaining time to the new calculated time\n      this.nextBeatIn = this.nextBeat;\n    }\n  }\n\n  /**\n   * Get voltage values for every second of the beat, even at rest (no-beating time\n   * after the ventricle repolarization finished, and before the next atria depolarization)\n   * @param {*} time Time in pixels after the atria depolarization started\n   */\n  beat(time) {\n    // Update the time left for the start of the next beat\n    this.updateTimeToNextBeat();\n\n    // If according to time, beat is in the atria depolarization process, call that function\n    if(time <= this.adDuration) {\n      this.atriaDepolarization(time);\n      return;\n    }\n\n    // If according to time, beat is in the ventricle depolarization process, call that function\n    // Update the time so the value sent is relative to the start of the ventricle\n    // depolarization process\n    time -= this.adDuration;\n    if(time <= this.vdDuration) {\n      this.ventricleDepolarization(time);\n      return;\n    }\n\n    // If according to time, beat is in the ventricle repolarization process, call that function\n    // Update the time so the value sent is relative to the start of the ventricle\n    // repolarization process\n    time -= this.vdDuration;\n    if(time <= this.vrDuration) {\n      this.ventricleRepolarization(time);\n      return;\n    }\n\n    const p = this.p;\n    \n    // If function reached this point, it's not in any of the beat processes, and it's resting.\n    // Add a noisy voltage value\n    this.setVoltage(0 + p.noise(p.draw_i * 0.5) * 5);\n  }\n}\n\n/**\n *  ECG will receive, process, and draw the health information\n */\nclass ECG {\n  /**\n   * @param {Object} graphZero  Coordinates of the {0, 0} value of the graph\n   * @param {Object[]} values   Array of {x, y} objects. x plots time, y plots voltage\n   * @param {number} maxValuesHistory   Maximum number of values before wiping oldest one\n   */\n  constructor(p, graphZero, values, maxValuesHistory) {\n    this.p = p;\n    this.graphZero = graphZero;\n    this.values = values;\n    this.maxValuesHistory = maxValuesHistory;\n    this.maximumX = maxValuesHistory;\n  }\n\n  /**\n   * Add a new voltage value to the values array. If it exceeds the maximum number of\n   * values allowed to store, remove the oldest one before.\n   * @param {Object} value {x, y} object. x represents time, y represents voltage\n   */\n  addValue(value) {\n    // If no x (time) value is received, assume it is the sucessor of the last value\n    // in the values array. If the new x exceeds the maximum allowed, make x = 0\n    if(this.values.length >= this.maxValuesHistory) this.values.splice(0, 1);\n    if(value.x === undefined) {\n      value.x = (this.values[this.values.length - 1].x + 1) % this.maximumX;\n    }\n    this.values.push(value);\n  }\n\n  /**\n   * Draw lines joining every voltage value throughout time in the screen\n   */\n  plotValues() {\n    const p = this.p;\n    \n    p.push();\n\n    for(let i = 1; i < this.values.length; i++) {\n      // If the previous value has a X coordinate higher than the current one,\n      // don't draw it, to avoid lines crossing from end to start of the ECG plot area.\n      if(this.values[i - 1].x > this.values[i].x) continue;\n\n      // Older values are drawn with a lower alpha\n      let alpha = i / this.values.length;\n\n      // Set the color of the drawing\n      p.stroke(121, 239, 150, alpha);\n      p.fill(121, 239, 150, alpha);\n\n      // Line from previous value to current value\n      p.line(\n        this.graphZero.x + this.values[i - 1].x,\n        this.graphZero.y + this.values[i - 1].y,\n        this.graphZero.x + this.values[i].x,\n        this.graphZero.y + this.values[i].y\n      );\n\n      // For the last 5 values, draw a circle with a radius going in function to\n      // its index. This to make the leading line thicker\n      if(i + 5 > this.values.length) {\n        p.circle(\n          this.graphZero.x + this.values[i].x,\n          this.graphZero.y + this.values[i].y,\n          this.values.length / i * 4\n        );\n      }\n    }\n\n    const v = this.values[this.values.length - 1];\n\n    // Set the color of the drawing\n    p.stroke(225, 225, 225, 1);\n\n    // Vertical line\n    p.line(\n      this.graphZero.x + v.x,\n      0,\n      this.graphZero.x + v.x,\n      150\n    );\n\n    p.pop();\n  }\n\n  //// The following methods update the values represented as html elements\n\n  updateInfo() {\n    const p = this.p;\n    \n    this.updateDate();\n    if(p.draw_i % 50 === 0) {\n      this.updateBloodPressure();\n      this.updateVentilation();\n      this.updateTemperature();\n      this.updateHemoglobin();\n    }\n  }\n\n  updateHemoglobin() {\n    const p = this.p;\n    \n    // document.getElementById(\"hemoglobin-value\").innerHTML = p.randomGaussian(14, .1).toFixed(1)\n\n  }\n  updateTemperature() {\n    const p = this.p;\n    \n    // document.getElementById(\"temperature-value\").innerHTML = p.randomGaussian(98.6, .1).toFixed(1)\n\n  }\n  updateVentilation() {\n    const p = this.p;\n    \n    // document.getElementById(\"minute-ventilation-value\").innerHTML = p.randomGaussian(6, .5).toFixed(2)\n  }\n\n  updateBloodPressure() {\n    const p = this.p;\n    \n    // document.getElementById(\"pressure-value\").innerHTML = \"\" + p.round(p.randomGaussian(130, 1)) + \"/\" + p.round(p.randomGaussian(90, 1));\n  }\n\n  updateDate() {\n    let date = new Date;\n    // document.getElementById(\"date-value\").innerHTML = formatDate(date);\n  }\n\n  /**\n   * Update the html content of the span containing the bpm info\n   * @param {number} bpm\n   */\n  drawBPM(bpm) {\n    // document.getElementById(\"heart-rate-value\").innerHTML = bpm;\n  }\n}\n\nconst sketch = (options) => (p) => {\n  // Taken from https://codepen.io/davidomarf/pen/ydyzaa\n  // Keep track of the times draw() has been called\n  p.draw_i = 0;\n\n  // p5.sound variables\n  // let osc;\n\n  const W = 300;\n  const H = 150;\n\n  // Initialize the ecg\n  // let ecg = new ECG(p, { x: 0, y: 110 }, [{ x: 0, y: 0 }], 600);\n  let ecg = new ECG(p, { x: 0, y: 110 }, [{ x: 0, y: 0 }], W);\n\n  // Initialize a heart\n  let heart = new Heart(p, ecg, options, 12, 8, 12);\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.WEBGL);\n    // p.frameRate(12);\n\n    // Set the color mode to allow calling RGBA without converting to string\n    p.colorMode(p.RGB, 255, 255, 255, 1);\n\n    // Work with degrees instead of Radians (sin function used inside Heart Class)\n    p.angleMode(p.DEGREES);\n\n    // Set the frequency the ecg will emit every heartbeat.\n    // osc = new p5.Oscillator();\n    // osc.setType(\"sine\");\n    // osc.freq(445);\n    // osc.amp(0);\n    // osc.start();\n  };\n  p.draw = () => {\n    p.translate(-W * .5, -H * .5);\n\n    // Keep track of the number of times draw has been called\n    ++p.draw_i;\n\n    // Hide previous ECG line by drawing a background\n    /**\n     *  Draw a rectangle of size (canvas.width - 1, canvas.height - 1)  with dark background\n     * and a brilliant green border.\n     *\n     * The -1 is to allow the border to be seen in the final page.\n     */\n    p.push();\n    p.fill(\"#201D1D\");\n    p.stroke(121, 239, 150, 1);\n    p.rect(0, 0, W - 1, H - 1);\n    p.pop();\n\n    // Get the new voltage values for the ECG from the heart\n    heart.beat(heart.nextBeat - heart.nextBeatIn);\n\n    // Draw the line of voltage values over time in the ECG screen\n    ecg.plotValues();\n\n    // Update the information values of the ECG\n    ecg.updateInfo();\n  };\n};\n\nconst Code = styled.code`\n  word-break: break-all;\n`;\nconst Card = styled.div`\n  & canvas {\n    height: auto !important;\n    width: 100% !important;\n  }\n`;\n\nexport default ({ bpm }) => {\n  const ref = useRef(null);\n  const options = useMemo(() => ({\n    getBpm: () => Number.isFinite(bpm) ? bpm : 1,\n  }), []);\n\n  useEffect(() => {\n    if(ref.current === null)\n      return;\n\n    const p = new p5(sketch(options), ref.current);\n\n    return p.remove;\n  }, [ ref.current ]);\n\n  return (\n    <Card>\n      <div ref={ref} />\n    </Card>\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { iteration$ } from \"../../store/iteration\";\n\nimport { Image } from \"../components\";\n\nconst phase1ContentStatsAreas = `\n  who bpm graph\n`\nconst Phase1ContentStats = ({ who, bpm, graph }) => (\n  <Composition areas={phase1ContentStatsAreas} gap={10}>\n    {({ Who, Bpm, Graph }) => (\n      <>\n        <Who>{who}</Who>\n        <Bpm>avg bpm: {bpm}</Bpm>\n        <Graph><Image src={graph} /></Graph>\n      </>\n    )}\n  </Composition>\n);\nconst phase1ContentAreas = `\n  human class\n  dog class\n  delta class\n`;\nexport default () => {\n  const iteration = useStore(iteration$);\n  \n  if(iteration === null) {\n    return (\n      <div>loading previous iteration</div>\n    );\n  }\n\n  return (\n    <Composition areas={phase1ContentAreas} gap={10}>\n      {({ Human, Dog, Delta, Class }) => (\n        <>\n          <Human>\n            <Phase1ContentStats who=\"human\" bpm={formatBpm(iteration.maja)} graph=\"human-chart.png\" />\n          </Human>\n          <Dog>\n            <Phase1ContentStats who=\"dog\" bpm={formatBpm(iteration.dog)} graph=\"dog-chart.png\" />\n          </Dog>\n          <Delta>\n            <Phase1ContentStats who=\"delta\" bpm={formatBpm(iteration.delta)} graph=\"delta-chart.png\" />\n          </Delta>\n          <Class>class: {iteration.actualRank}</Class>\n        </>\n      )}\n    </Composition>\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { iteration$ } from \"../../store/iteration\";\n\nimport { Image } from \"../components\";\n\nconst phase2ContentAreas = `\n  accGraph lossGraph\n  accDescription lossDescription\n`;\nexport default () => (\n  <Composition areas={phase2ContentAreas} gap={10}>\n    {({ AccGraph, LossGraph, AccDescription, LossDescription }) => (\n      <>\n        <AccGraph>\n          <Image src=\"accuracy-graph.png\" />\n        </AccGraph>\n        <LossGraph>\n          <Image src=\"loss-graph.png\" />\n        </LossGraph>\n        <AccDescription as=\"h4\">accuracy</AccDescription>\n        <LossDescription as=\"h4\">loss</LossDescription>\n      </>\n    )}\n  </Composition>\n);\n","import * as tf from \"@tensorflow/tfjs\";\n\nimport { size$ } from \"../store/size\";\n\nexport const model$ = size$.map((size) => {\n  if(size === null)\n    return null;\n\n  const model = tf.sequential({\n    layers: [\n      // hidden\n      // tf.layers.dense({\n      //   batchInputShape: [ null, 36 ],\n      //   units: 1024,\n      //   activation: \"sigmoid\",\n      // }),\n      // // output\n      // tf.layers.dense({\n      //   units: 2,\n      //   activation: \"softmax\",\n      // }),\n      tf.layers.conv2d({\n        batchInputShape: [ null, size.x, size.y, size.z ],\n        kernelSize: 5,\n        filters: 16,\n        strides: 2,\n        activation: \"relu\",\n        kernelInitializer: \"varianceScaling\",\n      }),\n\n      // The MaxPooling layer acts as a sort of downsampling using max values\n      // in a region instead of averaging.\n      // tf.layers.maxPooling2d({ poolSize: [2, 2], strides: [2, 2] }),\n\n      // Now we flatten the output from the 2D filters into a 1D vector to prepare\n      // it for input into our last layer. This is common practice when feeding\n      // higher dimensional data to a final classification output layer.\n      tf.layers.flatten(),\n\n      // output\n      tf.layers.dense({\n        units: 5,\n        kernelInitializer: \"varianceScaling\",\n        activation: \"softmax\",\n      }),\n    ],\n  });\n\n  model.compile({\n    // loss: tf.losses.categoricalCrossentropy,\n    loss: \"categoricalCrossentropy\",\n    metrics: [ \"accuracy\" ],\n    // loss: tf.losses.softmaxCrossEntropy,\n    // optimizer: tf.train.sgd(.2),\n    optimizer: tf.train.adam(),\n  });\n\n  return model;\n});\n","import { createEvent, restore } from \"effector\";\n\nexport const setTraining = createEvent();\nexport const training$ = restore(setTraining, false);\n","import { createEvent, createEffect, restore } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { ids$ } from \"../store/ids\";\nimport { fetchIterations } from \"../store/iterations\";\nimport { layout$ } from \"../store/layout\";\nimport { model$ } from \"../store/model\";\nimport { setPhase } from \"../store/phase\";\nimport { size$ } from \"../store/size\";\nimport { setTraining } from \"../store/training\";\nimport { inside, fromIndex, toIndex, generateIteration, iterationToLayout, join } from \"../utils\";\n\nconst setAttempts = createEvent();\nexport const attempts$ = restore(setAttempts, 0);\n\nconst setRank = createEvent();\nexport const rank$ = restore(setRank, 0);\n\nconst saveIteration = async(iteration, rank) => {\n  const now = new Date;\n  const timestamp = +now;\n  \n  const payload = {\n    _id: `${timestamp}`,\n    title: now.toISOString(),\n    data: iteration,\n    expectedRank: rank,\n    // iterationKey: entries$.getState().current,\n    timestamp,\n  };\n\n  console.log(\"saveIteration\", payload);\n\n  await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  });\n\n  fetchIterations();\n};\n\nconst classNames = [\n  \"Zero\",\n  \"One\",\n  \"Two\",\n  \"Three\",\n  \"Four\",\n  \"Five\",\n  \"Six\",\n  \"Seven\",\n  \"Eight\",\n  \"Nine\",\n];\n\nconst ranks = [\n  [ 1, 0, 0, 0, 0 ],\n  [ 0, 1, 0, 0, 0 ],\n  [ 0, 0, 1, 0, 0 ],\n  [ 0, 0, 0, 1, 0 ],\n  [ 0, 0, 0, 0, 1 ],\n];\n\nconst guess = createEffect();\nguess.use(async({ number, rank }) => {\n  const size = size$.getState();\n\n  const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ], \"int32\");\n  // const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ]);\n  const response = model$.getState().predict(xs);\n  const preds = response.argMax(1);\n  const argMax1 = await preds.data();\n  const data = await response.data();\n\n  const l = tf.tensor([ ranks[rank] ], [ 1, 5 ]);\n  const labels = await l.argMax(1);\n\n  console.log(\"guessed\", argMax1[0], Array.from(data));\n\n  // accuracy\n  const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\n  const container = { name: \"Accuracy\", tab: \"Evaluation\" };\n  tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\n\n  // confusion\n  const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\n  // console.log(\"tfvis.show\", tfvis.show)\n  // console.log(\"tfvis.render\", tfvis.render)\n  // console.log(\"tfvis.metrics\", tfvis.metrics)\n\n  tfvis.render.confusionMatrix({ name: \"Confusion Matrix\", tab: \"Evaluation\" }, {\n    values: confusionMatrix,\n    tickLabels: classNames,\n  });\n  // tfvis.render.heatmap({ name: \"Heatmap\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n  // tfvis.render.histogram({ name: \"Histogram\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n\n  xs.dispose();\n  l.dispose();\n\n  return response;\n});\nguess.pending.watch((pending) => pending && setTraining(true));\nguess.fail.watch((error) => {\n  console.error(\"guess error\", error);\n})\nguess.finally.watch(() => setTraining(false));\n\nexport const find = createEffect();\nfind.use(async({ rank }) => {\n  // const element = document.getElementById(\"phase-3\");\n  setTimeout(() => {\n    setPhase(3);\n    // window.scrollTo({\n    //   behavior: element ? \"smooth\" : \"auto\",\n    //   top: element ? element.offsetTop : 0,\n    // });\n  }, 100);\n\n  const size = size$.getState();\n  const l = layout$.getState();\n\n  let argMax1;\n  let response;\n  let iteration;\n\n  let tries = 0;\n\n  do {\n    ++tries;\n\n    setAttempts(tries);\n\n    // randomizeClickHandler();\n    \n    iteration = generateIteration(p);\n    const iterationLayout = join(l, iterationToLayout(l, iteration));\n\n    layout = iterationLayout;\n\n    p.redraw();\n\n    const number = layout.map((item) => Math.max(0, item - 1));\n\n    const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ], \"int32\");\n    // const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ]);\n    response = model$.getState().predict(xs);\n    const preds = response.argMax(1);\n    argMax1 = await preds.data();\n    const data = await response.data();\n\n    const ys = tf.tensor([ ranks[rank] ], [ 1, 5 ]);\n    const labels = await ys.argMax(1);\n\n    setRank(argMax1[0]);\n\n    console.log(`${tries}. found`, argMax1[0]); // , Array.from(data));\n\n    // accuracy\n    const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\n    const container = { name: \"Accuracy\", tab: \"Evaluation\" };\n    tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\n\n    // confusion\n    const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\n    // console.log(\"tfvis.show\", tfvis.show)\n    // console.log(\"tfvis.render\", tfvis.render)\n    // console.log(\"tfvis.metrics\", tfvis.metrics)\n\n    tfvis.render.confusionMatrix({ name: \"Confusion Matrix\", tab: \"Evaluation\" }, {\n      values: confusionMatrix,\n      tickLabels: classNames,\n    });\n    // tfvis.render.heatmap({ name: \"Heatmap\", tab: \"Evaluation\" }, {\n    //   values: confusionMatrix,\n    // });\n    // tfvis.render.histogram({ name: \"Histogram\", tab: \"Evaluation\" }, {\n    //   values: confusionMatrix,\n    // });\n\n    xs.dispose();\n    ys.dispose();\n  } while(argMax1[0] !== rank);\n\n  // \"https://heartrate.miran248.now.sh/api/iteration\"\n\n  console.log(\"found rank\", rank, \"in\", tries, \"tries\");\n\n  await saveIteration(iteration, rank);\n\n  return response;\n});\nfind.pending.watch((pending) => pending && setTraining(true));\nfind.fail.watch((error) => {\n  console.error(\"find error\", error);\n})\nfind.finally.watch(() => {\n  setTraining(false);\n\n  // const element = document.getElementById(\"phase-4\");\n  setTimeout(() => {\n    setPhase(4);\n    // window.scrollTo({\n    //   behavior: element ? \"smooth\" : \"auto\",\n    //   top: element ? element.offsetTop : 0,\n    // });\n  }, 100);\n});\n\n// const test = async() => {\n//   for(let i of trainData) {\n//     const response = await guess(i[0]);\n//     const argMax = await response.argMax(1).data();\n//     const data = await response.data();\n//\n//     const fake = Array.from(data);\n//     const realIndex = i[1];\n//     const fakeIndex = Array.from(argMax)[0];\n//\n//     console.log(realIndex === fakeIndex, realIndex, fakeIndex, i[2], fake.map((i) => i.toFixed(2)));\n//   }\n// };\n\nconst TILE_SIZE = 12;\n\nconst sketch = (size) => (p) => {\n  const ids = ids$.getState();\n\n  const W = size.x * TILE_SIZE;\n  const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n  const bounds = [ 0, 0, W, H ];\n\n  let dragging = -1;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n  };\n  p.mousePressed = () => {\n    if(inside(p, bounds)) {\n      const l = [ p.mouseX - bounds[0], p.mouseY - bounds[1] ];\n      const x = p.floor(l[0] / TILE_SIZE);\n      const z = p.floor(l[1] / (TILE_SIZE * (size.y + 1)));\n      const y = p.floor(l[1] / TILE_SIZE) - (size.y + 1) * z;\n\n      if(x < size.x && y < size.y && z < size.z) {\n        const i = toIndex(size, x, y, z);\n\n        if(layout[i] === 2)\n          dragging = layout[i] = 1;\n        else if(layout[i] === 1)\n          dragging = layout[i] = 2;\n        else\n          dragging = -1;\n\n        p.redraw();\n      }\n    } else\n      dragging = -1;\n  };\n  p.mouseReleased = () => {\n    dragging = -1;\n  };\n  p.mouseDragged = () => {\n    if(dragging < 0)\n      return;\n\n    if(inside(p, bounds)) {\n      const l = [ p.mouseX - bounds[0], p.mouseY - bounds[1] ];\n      const x = p.floor(l[0] / TILE_SIZE);\n      const z = p.floor(l[1] / (TILE_SIZE * (size.y + 1)));\n      const y = p.floor(l[1] / TILE_SIZE) - (size.y + 1) * z;\n\n      if(x < size.x && y < size.y && z < size.z) {\n        const i = toIndex(size, x, y, z);\n\n        if(layout[i] > 0)\n          layout[i] = dragging;\n\n        p.redraw();\n      }\n    }\n  }\n  p.draw = () => {\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    for(let i in layout) {\n      const { x, y, z } = fromIndex(size, i);\n\n      const posX = x * TILE_SIZE;\n      const posY = y * TILE_SIZE;\n      const posZ = z * (size.y + 1) * TILE_SIZE;\n\n      let c = 255;\n\n      if(layout[i] === 2)\n        c = 51;\n      else if(layout[i] === 1)\n        c = 204;\n\n      p.fill(c);\n      p.rect(posX, posY + posZ, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      if(ids[i] > 0)\n        p.text(ids[i], posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n    }\n  };\n};\n\nconst randomizeClickHandler = () => {\n  const l = layout$.getState();\n\n  const iteration = generateIteration(p);\n  const iterationLayout = join(l, iterationToLayout(l, iteration));\n\n  layout = iterationLayout;\n\n  p.redraw();\n};\nconst guessClickHandler = (form) => {\n  const rank = +form.rank;\n  guess({ number: layout.map((item) => Math.max(0, item - 1)), rank });\n};\nconst findClickHandler = (form) => {\n  const rank = +form.rank;\n  find({ rank });\n};\n\nlet p, layout;\n\nexport default () => {\n  const size = useStore(size$);\n\n  // const { errors, formState, handleSubmit, register } = useForm({\n  //   mode: \"onChange\",\n  // });\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null)\n      return;\n\n    layout = layout$.getState();\n\n    p = new p5(sketch(size), ref.current);\n    p.redraw();\n\n    return p.remove;\n  }, [ ref.current ]);\n\n  return (\n    <div ref={ref} />\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { iteration$ } from \"../../store/iteration\";\n\nimport { Image } from \"../components\";\nimport Guess, { attempts$, rank$ } from \"../Guess\";\n\nconst phase3ContentAreas = `\n  attempt progress class\n  graph graph graph\n`;\n// input hidden output\nexport default () => {\n  const attempts = useStore(attempts$);\n  const rank = useStore(rank$);\n\n  return (\n    <Composition areas={phase3ContentAreas} gap={10}>\n      {({ Attempt, Progress, Class, Graph, Input, Hidden, Output }) => (\n        <>\n          <Attempt as=\"h3\">attempt: {attempts}</Attempt>\n          <Progress as=\"h3\">--</Progress>\n          <Class as=\"h3\">class: {rank}</Class>\n          <Graph>\n            <Image src=\"phase3-canvas.png\" />\n            <Guess />\n          </Graph>\n          {/* <Input as=\"h4\">input</Input>\n          <Hidden as=\"h4\">hidden</Hidden>\n          <Output as=\"h4\">output</Output> */}\n        </>\n      )}\n    </Composition>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { linksGraph$ } from \"../store/graph\";\nimport { iteration$ } from \"../store/iteration\";\nimport { size$ } from \"../store/size\";\nimport { fromIndex } from \"../utils\";\n\nconst TILE_SIZE = 60;\n\nconst sketch = (iteration, size) => (p) => {\n  const W = 750;\n  // const W = 400;\n  const H = W * 10 / 16;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.WEBGL);\n    p.frameRate(12);\n  };\n  p.draw = () => {\n    p.clear();\n\n    // p.normalMaterial();\n    p.ambientLight(255, 255, 255);\n\n    //p.rotateX(-p.mouseY * .01);\n    p.rotateX(-.6);\n    p.rotateY(p.mouseX * .01);\n\n    p.translate(\n      -.5 * TILE_SIZE * size.x,\n      -.5 * TILE_SIZE * size.y,\n      -.5 * TILE_SIZE * size.z\n    );\n\n    for(let i in iteration) {\n      if(iteration[i] === 0)\n        continue;\n\n      const { x, y, z } = fromIndex(size, i);\n\n      p.push();\n\n      p.translate(\n        TILE_SIZE * (x + .5),\n        TILE_SIZE * (z + .5),\n        TILE_SIZE * (y + .5)\n      );\n      p.rotateX(p.PI * -.5);\n\n      if(iteration[i] === 2)\n        p.fill(51, 51, 51);\n      else if(iteration[i] === 1)\n        p.fill(153, 153, 153);\n\n      p.plane(TILE_SIZE);\n\n      // p.box(TILE_SIZE - 1, TILE_SIZE - 1, TILE_SIZE - 1);\n\n      p.pop();\n    }\n\n    const linksGraph = linksGraph$.getState();\n    for(let [ k, ka, s, t, sa, ta ] of linksGraph.edgeEntries()) {\n      const sp = fromIndex(size, +s);\n      const tp = fromIndex(size, +t);\n\n      p.push();\n\n      p.strokeWeight(2);\n      p.stroke(0, 102, 255);\n      p.line(\n        TILE_SIZE * (sp.x + .5), TILE_SIZE * (sp.z + .5), TILE_SIZE * (sp.y + .5),\n        TILE_SIZE * (tp.x + .5), TILE_SIZE * (tp.z + .5), TILE_SIZE * (tp.y + .5)\n      );\n\n      p.pop();\n    }\n  };\n};\n\nconst Code = styled.code`\n  word-break: break-all;\n`;\nconst Card = styled.div`\n  & canvas {\n    height: auto !important;\n    width: 100% !important;\n  }\n`;\n\nexport default () => {\n  const iteration = useStore(iteration$);\n  const size = useStore(size$);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null || iteration === null)\n      return;\n\n    const p = new p5(sketch(iteration.combined, size), ref.current);\n\n    return p.remove;\n  }, [ ref.current, iteration ]);\n\n  if(iteration === null) {\n    return (\n      <div><a href=\"#pick\">pick iteration</a></div>\n    );\n  }\n\n  const text = JSON.stringify(iteration.combined);\n\n  return (\n    <Card>\n      <p>\n        <Code>{text}</Code>\n      </p>\n      <div ref={ref} />\n    </Card>\n  );\n};\n","import { createEvent, restore } from \"effector\";\n\nexport const setProgress = createEvent();\nexport const progress$ = restore(setProgress, 0);\n","import * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS, NUM_OUTPUT_CLASSES } from \"./constants\";\n\nexport async function visualizeModel(model) {\n  tfvis.show.modelSummary({ name: \"Model Architecture\" }, model);\n}\n\nexport async function showExamples(data) {\n  // Create a container in the visor\n  const surface = tfvis\n    .visor()\n    .surface({ name: \"Input Data Examples\", tab: \"Input Data\" });\n\n  // Get the examples\n  // const examples = data.nextTestBatch(20);\n  // const examples = data.allTrainData();\n  const examples = data;\n  const numExamples = examples.xs.shape[0];\n\n  // Create a canvas element to render each example\n  for (let i = 0; i < numExamples; i++) {\n    const imageTensor = tf.tidy(() => {\n      // Reshape the image to 28x28 px\n      return examples.xs\n        .slice([i, 0], [1, examples.xs.shape[1]])\n        .reshape([IMAGE_WIDTH, IMAGE_HEIGHT, /*IMAGE_CHANNELS*/]);\n    });\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = IMAGE_WIDTH;\n    canvas.height = IMAGE_HEIGHT;\n    canvas.style.margin = \"4px\";\n    await tf.browser.toPixels(imageTensor, canvas);\n    surface.drawArea.appendChild(canvas);\n\n    imageTensor.dispose();\n  }\n}\n\nexport function getFitCallbacks() {\n  const metrics = [\"loss\", \"val_loss\", \"acc\", \"val_acc\"];\n  // const metrics = [\"val_loss\", \"val_acc\"];\n  const container = {\n    name: \"Model Training\",\n    tab: \"Training\",\n    styles: { height: \"800px\" }\n  };\n\n  return tfvis.show.fitCallbacks(container, metrics, {\n    callbacks: [\"onEpochEnd\"]\n  });\n}\n\nexport async function showAccuracy(\n  [preds, labels],\n  data,\n  classNames\n) {\n  const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\n  const container = { name: \"Accuracy\", tab: \"Evaluation\" };\n  tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\n}\n\nexport async function showConfusion(\n  [preds, labels],\n  data,\n  classNames\n) {\n  const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\n  // console.log(\"tfvis.show\", tfvis.show)\n  // console.log(\"tfvis.render\", tfvis.render)\n  // console.log(\"tfvis.metrics\", tfvis.metrics)\n\n  tfvis.render.confusionMatrix({ name: \"Confusion Matrix\", tab: \"Evaluation\" }, {\n    values: confusionMatrix,\n    tickLabels: classNames,\n  });\n  // tfvis.render.heatmap({ name: \"Heatmap\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n  // tfvis.render.histogram({ name: \"Histogram\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n}\n\nexport function openVis() {\n  tfvis.visor().open();\n}\n\nexport function isVisOpen() {\n  return tfvis.visor().isOpen();\n}\n","import { combine, createEffect } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nimport { iterations$ } from \"../store/iterations\";\nimport { model$ } from \"../store/model\";\nimport { setPhase } from \"../store/phase\";\nimport { setProgress, progress$ } from \"../store/progress\";\nimport { size$ } from \"../store/size\";\nimport { setTraining, training$ } from \"../store/training\";\nimport {\n  showExamples,\n  showAccuracy,\n  showConfusion,\n  visualizeModel,\n  getFitCallbacks,\n} from \"../tf/vis\";\n\nimport { find } from \"./Guess\";\n\nconst EPOCH_COUNT = 250;\n\nlet xs;\nlet ys;\ncombine(iterations$, size$, (iterations, size) => {\n  if(iterations === null || size === null)\n    return;\n\n  if(xs)\n    xs.dispose();\n\n  if(ys)\n    ys.dispose();\n\n  const validIterations = iterations.filter((iteration) => iteration.trainable);\n\n  const data = validIterations.map((iteration) => iteration.layout);\n  xs = tf.tensor(data, [ data.length, size.x, size.y, size.z ], \"int32\");\n\n  const output = validIterations.map((iteration) => iteration.output);\n  ys = tf.tensor(output, [ data.length, 5 ], \"int32\");\n});\n\nconst train = createEffect();\ntrain.use(async() => {\n  // const element1 = document.getElementById(\"phase-1\");\n  setTimeout(() => {\n    setPhase(1);\n    // window.scrollTo({\n    //   behavior: element1 ? \"smooth\" : \"auto\",\n    //   top: element1 ? element1.offsetTop : 0,\n    // });\n  }, 100);\n  // const element2 = document.getElementById(\"phase-2\");\n  setTimeout(() => {\n    setPhase(2);\n    // window.scrollTo({\n    //   behavior: element2 ? \"smooth\" : \"auto\",\n    //   top: element2 ? element2.offsetTop : 0,\n    // });\n  }, 10100);\n\n  const model = model$.getState();\n\n  visualizeModel(model);\n\n  const callbacks = getFitCallbacks();\n\n  const response = await model.fit(xs, ys, {\n    epochs: EPOCH_COUNT,\n    shuffle: true,\n    // validationSplit: .1,\n    callbacks: {\n      // unblocks p5.draw\n      // onBatchEnd: tf.nextFrame,\n      onEpochEnd: (...args) => {\n        const [ i, history ] = args;\n\n        const epoch = i + 1;\n\n        // console.log(`epoch ${epoch}, loss ${history.loss}`);\n\n        setProgress(epoch / EPOCH_COUNT);\n\n        return callbacks.onEpochEnd(...args);\n      },\n    },\n  });\n\n  return response;\n});\ntrain.pending.watch((pending) => pending && setTraining(true));\ntrain.fail.watch((error) => {\n  console.error(\"train error\", error);\n})\ntrain.finally.watch(() => {\n  setTraining(false);\n\n  find({ rank: 0 });\n});\n\nexport default () => {\n  const progress = useStore(progress$);\n  const training = useStore(training$);\n\n  return (\n    <div>\n      <p>\n        <button onClick={train}\n                disabled={training}>{training ? \"training ...\" : \"start new\"}</button>\n      </p>\n      <progress value={progress}>{Math.round(progress * 100)}%</progress>\n    </div>\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { iteration$ } from \"../../store/iteration\";\n\nimport Preview from \"../Preview\";\nimport Train from \"../Train\";\n\nconst phase4ContentAreas = `\n  graph actions\n  details details\n`;\nexport default () => {\n  const iteration = useStore(iteration$);\n  \n  if(iteration === null) {\n    return (\n      <div>loading 3d preview</div>\n    );\n  }\n\n  return (\n    <Composition areas={phase4ContentAreas} gap={10}>\n      {({ Graph, Actions, Details }) => (\n        <>\n          <Graph>\n            <Preview />\n          </Graph>\n          <Actions>\n            <Train />\n          </Actions>\n          <Details>\n            <h4>iteration ended:</h4>\n            <div>expected rank: {formatRank(iteration.expectedRank)} human/dog</div>\n            <div>actual rank: {formatRank(iteration.actualRank)} human/dog</div>\n          </Details>\n        </>\n      )}\n    </Composition>\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { iteration$ } from \"../../store/iteration\";\nimport { phase$ } from \"../../store/phase\";\n\nimport Heartrate from \"../Heartrate\";\n\nimport Phase1 from \"./Phase1\";\nimport Phase2 from \"./Phase2\";\nimport Phase3 from \"./Phase3\";\nimport Phase4 from \"./Phase4\";\n\nconst Section = styled.section`\n  min-height: 100vh;\n`;\n\nconst statsAreas = `\n  heart graph\n  co2 temp\n  start end\n`;\nconst Stats = ({ who, bpm }) => (\n  <Composition areas={statsAreas} as=\"section\" gap={10}>\n    {({ Heart, Graph, Co2, Temp, Start, End }) => (\n      <>\n        <Heart>{who} heart</Heart>\n        <Graph>\n          graph: {bpm}\n          <Heartrate bpm={bpm} />\n        </Graph>\n        <Co2>co2</Co2>\n        <Temp>temp</Temp>\n        <Start>start</Start>\n        <End>end</End>\n      </>\n    )}\n  </Composition>\n);\nconst Sidebar = () => {\n  const iteration = useStore(iteration$);\n  \n  if(iteration === null) {\n    return (\n      <div>loading iteration</div>\n    );\n  }\n\n  return (\n    <>\n      <Stats who=\"human\" bpm={formatBpm(iteration.maja)} />\n      <Stats who=\"dog\" bpm={formatBpm(iteration.dog)} />\n    </>\n  );\n};\n\nconst phaseTitle = `\n  phase title\n`;\nconst PhaseTitle = ({ phase, title }) => (\n  <Composition areas={phaseTitle} gap={10}>\n    {({ Phase, Title }) => (\n      <>\n        <Phase as=\"h1\">phase {phase}:</Phase>\n        <Title as=\"h2\">{title}</Title>\n      </>\n    )}\n  </Composition>\n);\n\nconst areas = `\n  sidebar main\n`;\nexport default () => {\n  const phase = useStore(phase$);\n\n  return (\n    <Composition areas={areas} gap={30}>\n      {(c) => (\n        <>\n          <c.Sidebar as=\"aside\">\n            <Sidebar />\n          </c.Sidebar>\n          <c.Main as=\"main\">\n            {phase > 3 && (\n              <Section id=\"phase-4\">\n                <PhaseTitle phase={4} title=\"new iteration layout\" />\n                <Phase4 />\n              </Section>\n            )}\n            {phase > 2 && (\n              <Section id=\"phase-3\">\n                <PhaseTitle phase={3} title=\"generating new layout\" />\n                <Phase3 />\n              </Section>\n            )}\n            {phase > 1 && (\n              <Section id=\"phase-2\">\n                <PhaseTitle phase={2} title=\"training model w/ cnn\" />\n                <Phase2 />\n              </Section>\n            )}\n            {phase > 0 && (\n              <Section id=\"phase-1\">\n                <PhaseTitle phase={1} title=\"previous iteration\" />\n                <Phase1 />\n              </Section>\n            )}\n          </c.Main>\n        </>\n      )}\n    </Composition>\n  );\n};\n","import React from \"react\";\n\nimport { Image } from \"../components\";\n\nexport default () => {\n  return (\n    <Image src=\"map-layout.png\" />\n  );\n};\n","import React from \"react\";\nimport {\n  NavLink,\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Archive from \"./pages/Archive\";\nimport Main from \"./pages/Main\";\nimport Map from \"./pages/Map\";\n\nconst root = \"/non-brute-force-ui\";\n\nconst Nav = styled.nav`\n  & > a + a {\n    margin-left: 1ch;\n  }\n`;\n\nconst Header = () => (\n  <header>\n    {/* <h1>nbf</h1> */}\n    <Nav>\n      <NavLink to=\"/\" exact>main</NavLink>\n      <NavLink to=\"/archive\" exact>archive</NavLink>\n      <NavLink to=\"/map\" exact>map</NavLink>\n    </Nav>\n  </header>\n);\n\nexport default () => (\n  <Router basename={root}>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact>\n        <Main />\n      </Route>\n      <Route path=\"/archive\" exact>\n        <Archive />\n      </Route>\n      <Route path=\"/map\" exact>\n        <Map />\n      </Route>\n      <Route path=\"*\">\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  </Router>\n);\n","import \"regenerator-runtime/runtime\";\n// import \"@exampledev/new.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { setHardcodedIterations } from \"./store/iterations\";\nimport { setLayout } from \"./store/layout\";\nimport { setSize } from \"./store/size\";\nimport App from \"./ui/Redesign\";\n\n// import fours from \"./data/fours\";\n// import ones from \"./data/ones\";\n// import threes from \"./data/threes\";\n// import twos from \"./data/twos\";\n// import zeros from \"./data/zeros\";\n// const props = {\n//   iterations: [\n//     ...zeros .map((item, i) => ({ title: `zeros ${i + 1}`,  data: item, output: [ 1, 0, 0, 0, 0 ] })),\n//     ...ones  .map((item, i) => ({ title: `ones ${i + 1}`,   data: item, output: [ 0, 1, 0, 0, 0 ] })),\n//     ...twos  .map((item, i) => ({ title: `twos ${i + 1}`,   data: item, output: [ 0, 0, 1, 0, 0 ] })),\n//     ...threes.map((item, i) => ({ title: `threes ${i + 1}`, data: item, output: [ 0, 0, 0, 1, 0 ] })),\n//     ...fours .map((item, i) => ({ title: `fours ${i + 1}`,  data: item, output: [ 0, 0, 0, 0, 1 ] })),\n//   ],\n//   layout: Array.from(Array(36), () => 1),\n//   size: { x: 6, y: 6, z: 1 },\n// };\n\nimport iterations from \"./data/iterations\";\nimport layout, { layoutSize } from \"./data/layout\";\n\nimport \"./index.css\";\n\nconst props = {\n  iterations,\n  layout,\n  size: layoutSize,\n};\n\nsetHardcodedIterations(props.iterations.map((iteration) => ({\n  ...iteration,\n  timestamp: +new Date(iteration.title.split(\" \")[0]),\n  valid: true,\n})));\nsetLayout(props.layout);\nsetSize(props.size);\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","export default [\n  // 20200526\n  {\n    title: \"2020-05-26 1\",\n    data: [ 3, 4, 6, 7, 9, 11, 12, 14, 15, 24, 27, 29, 31, 34, 36, 38, 39, 44, 46, 48, 49, 51, 53, 54, 57, 59, 61, 62, 63, 64, 70, 72 ],\n    george: 89,\n    maja: 104,\n  },\n  // {\n  //   title: \"2020-05-26 2\",\n  //   data: [ 3, 4, 6, 7, 9, 11, 12, 13, 15, 24, 27, 29, 32, 35, 36, 38, 39, 44, 45, 48, 49, 52, 53, 54, 57, 59, 62, 63, 65, 70, 72 ],\n  //   boogie: 98,\n  //   maja: 87,\n  // },\n  // 20200527\n  {\n    title: \"2020-05-27 1\",\n    data: [ 1, 3, 4, 5, 7, 9,  11, 12, 13, 15, 19, 24, 28, 29, 32, 35, 36, 40, 41, 46, 48, 49, 51, 54, 57, 59, 61, 62, 68, 70, 72 ],\n    maja: 93,\n    george: 80,\n    // george_boogie: 85, // ?\n    // boogie: 90,\n  },\n  {\n    title: \"2020-05-27 2\",\n    data: [ 1, 3, 4, 5, 8, 10, 11, 12, 13, 15, 19, 24, 28, 29, 35, 38, 40, 41, 43, 46, 48, 50, 51, 55, 56, 59, 61, 62, 68, 70, 72 ],\n    maja: 90,\n    george: 82,\n    // george_boogie: 90, // ?\n    // boogie: 98,\n  },\n  // 20200601\n  // {\n  //   title: \"2020-06-01 1\",\n  //   data: [ 3, 4, 5, 7, 10, 13, 14, 15, 17, 19, 24, 28, 30, 32, 35, 38, 40, 41, 43, 46, 48, 50, 52, 54, 57, 59, 60, 62, 65, 68, 70, 72 ],\n  //   maja: 90,\n  //   boogie: 127,\n  // },\n  // {\n  //   title: \"2020-06-01 2\",\n  //   data: [ 4, 5, 10, 13, 14, 15, 16, 19, 24, 28, 30, 32, 34, 37, 38, 40, 41, 43, 47, 48, 50, 51, 54, 57, 59, 60, 61, 62, 64, 68, 70, 72 ],\n  //   maja: 96,\n  //   boogie: 93,\n  // },\n  // 20200602\n  {\n    title: \"2020-06-02 1\",\n    data: [ 3, 4, 5, 7, 9,  12, 13, 15, 17, 19, 24, 26, 30, 31, 34, 36, 38, 40, 43, 46, 48, 50, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 93,\n    george: 92, // georgy?\n  },\n  {\n    title: \"2020-06-02 2\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 16, 17, 19, 26, 27, 29, 31, 34, 36, 40, 43, 48, 49, 52, 55, 57, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 97,\n    george: 142, // georgy?\n  },\n  {\n    title: \"2020-06-02 3\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 13, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 40, 43, 46, 48, 49, 50, 54, 57, 59, 61, 62, 68, 70, 71, 72 ],\n    maja: 92,\n    mala: 81,\n  },\n  {\n    title: \"2020-06-02 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 41, 43, 46, 48, 49, 52, 54, 57, 59, 60, 61, 68, 70, 71, 72 ],\n    maja: 86,\n    mala: 88,\n  },\n  // 20200603\n  {\n    title: \"2020-06-03 1\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 15, 16, 20, 26, 28, 29, 30, 32, 36, 39, 41, 43, 46, 48, 49, 52, 54, 56, 59, 60, 61, 63, 69, 70, 71 ],\n    maja: 95,\n    mala: 154,\n  },\n  {\n    title: \"2020-06-03 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 13, 14, 17, 20, 25, 28, 29, 31, 33, 36, 37, 41, 43, 46, 48, 49, 52, 56, 57, 59, 62, 63, 64, 65, 70, 71 ],\n    maja: 99,\n    mala: 87,\n  },\n  {\n    title: \"2020-06-03 3\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 38, 41, 43, 46, 48, 49, 52, 55, 57, 59, 60, 61, 63, 70, 71, 72 ],\n    maja: 98,\n    george: 96,\n  },\n  {\n    title: \"2020-06-03 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 40, 41, 43, 46, 47, 48, 49, 52, 55, 57, 59, 61, 62, 63, 70, 71, 72 ],\n    maja: 93,\n    george: 119,\n  },\n  // {\n  //   title: \"2020-06-03 5\",\n  //   data: [ 3, 4, 5, 8, 10, 11, 13, 15, 17, 20, 25, 26, 30, 32, 34, 36, 38, 41, 43, 44, 46, 47, 48, 50, 52, 55, 57, 59, 60, 61, 63, 66, 71, 72 ],\n  //   maja: 101,\n  //   boogie: 75,\n  // },\n  {\n    title: \"2020-06-03 6\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 20, 25, 26, 29, 31, 34, 36, 38, 41, 45, 46, 48, 49, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 92,\n    ada: 69,\n  },\n  // 20200604\n  {\n    title: \"2020-06-04 1\",\n    data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 20, 24, 25, 27, 29, 30, 32, 33, 39, 43, 44, 48, 49, 50, 51, 56, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 92,\n    ada: 96,\n  },\n  {\n    title: \"2020-06-04 2\",\n    data: [ 3, 4, 5, 8, 9, 11, 13, 15, 17, 19, 24, 25, 29, 32, 34, 38, 40, 41, 43, 46, 47, 48, 49, 52, 53, 57, 60, 61, 64, 68, 71, 73 ],\n    maja: 87,\n    george: 93,\n  },\n  // {\n  //   title: \"2020-06-04 3\",\n  //   data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 19, 24, 26, 29, 32, 34, 38, 40, 41, 44, 46, 48, 50, 52, 55, 57, 59, 62, 65, 68, 71, 72, 73 ],\n  //   maja: 96,\n  //   boogie: 184,\n  // },\n  {\n    title: \"2020-06-04 4\",\n    data: [ 3, 4, 5, 7, 8, 11, 13, 15, 17, 20, 24, 27, 29, 30, 34, 38, 40, 41, 45, 46, 48, 51, 52, 54, 57, 59, 61, 63, 64, 70, 71, 73 ],\n    maja: 97,\n    ada: 98,\n  },\n  // 20200605\n  // {\n  //   title: \"2020-06-05 1\",\n  //   data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 20, 24, 27, 29, 31, 34, 38, 40, 41, 43, 44, 48, 51, 52, 54, 57, 62, 63, 70, 71, 72, 73 ],\n  //   maja: 89,\n  //   boogie: 108,\n  // },\n  // {\n  //   title: \"2020-06-05 2\",\n  //   data: [ 3, 4, 5, 7, 9,  11, 12, 14, 15, 16, 24, 27, 29, 31, 34, 38, 40, 41, 43, 45, 48, 49, 51, 54, 56, 60, 63, 69, 70, 71, 73 ],\n  //   maja: 97,\n  //   boogie: 85,\n  // },\n  {\n    title: \"2020-06-05 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 25, 27, 29, 31, 34, 37, 40, 41, 43, 48, 49, 52, 55, 57, 59, 62, 65, 68, 69, 71, 73 ],\n    maja: 93,\n    george: 124,\n  },\n  {\n    title: \"2020-06-05 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 14, 16, 19, 26, 27, 29, 31, 34, 36, 40, 41, 46, 48, 51, 52, 55, 57, 59, 61, 62, 64, 65, 68, 71 ],\n    maja: 86,\n    george: 150,\n  },\n  {\n    title: \"2020-06-05 5\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 13, 15, 20, 26, 27, 31, 32, 34, 36, 39, 41, 44, 46, 51, 52, 54, 56, 59, 61, 62, 63, 65, 69, 71 ],\n    maja: 95,\n    ada: 90,\n  },\n  // 20200608\n  // {\n  //   title: \"2020-06-08 1\",\n  //   data: [ 3, 4, 5 ],\n  //   maja: 88,\n  //   george: 83,\n  // },\n  {\n    title: \"2020-06-08 2\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 27, 31, 32, 34, 36, 38, 41, 43, 48, 49, 52, 55, 57, 59, 61, 62, 63, 64, 66, 69 ],\n    maja: 90,\n    george: 117,\n  },\n  {\n    title: \"2020-06-08 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 26, 31, 32, 34, 36, 38, 41, 43, 48, 49, 51, 55, 57, 59, 61, 62, 63, 64, 66, 69, 70 ],\n    maja: 97,\n    mala: 98,\n  },\n  {\n    title: \"2020-06-08 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 12, 16, 17, 20, 24, 25, 31, 33, 34, 36, 38, 41, 46, 48, 49, 52, 55, 57, 59, 60, 63, 64, 65, 66, 70 ],\n    maja: 105,\n    mala: 133,\n  },\n  // {\n  //   title: \"2020-06-08 5\",\n  //   data: [ 3, 4, 5, 9, 10, 11, 13, 16, 17, 20, 25, 27, 30, 33, 34, 37, 38, 41, 45, 48, 50, 51, 55, 57, 59, 60, 63, 65, 66, 70, 72 ],\n  //   maja: 107,\n  //   boogie: 88,\n  // },\n  // {\n  //   title: \"2020-06-08 6\",\n  //   data: [ 3, 4, 5, 8, 10, 11, 13, 14, 16, 21, 25, 27, 30, 33, 34, 36, 37, 38, 43, 48, 51, 52, 55, 56, 59, 62, 63, 65, 70, 71, 72 ],\n  //   maja: 105,\n  //   boogie: 129,\n  // },\n  // 20200609\n  // {\n  //   title: \"2020-06-09 1\",\n  //   data: [ 3, 4, 5, 8, 10, 11, 12, 14, 15, 16, 19, 21, 25, 28, 30, 31, 35, 37, 39, 40, 43, 48, 51, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n  //   maja: 82,\n  //   mala: 0,\n  // },\n  {\n    title: \"2020-06-09 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 12, 14, 16, 19, 24, 28, 29, 30, 35, 39, 40, 41, 45, 48, 50, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n    maja: 89,\n    george: 153,\n  },\n  // {\n  //   title: \"2020-06-09 3\",\n  //   data: [ 3, 4, 5, 7, 10, 11, 13, 14, 16, 19, 25, 26, 30, 33, 35, 37, 40, 41, 45, 48, 50, 51, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n  //   maja: 109,\n  //   boogie: 94,\n  // },\n  // 20200611\n  {\n    title: \"2020-06-11 1\",\n    data: [ 1, 3, 5, 7, 10, 11, 13, 15, 16, 20, 24, 25, 30, 32, 35, 36, 37, 39, 44, 48, 50, 51, 54, 56, 59, 60, 62, 63, 65, 70, 72 ],\n    maja: 140,\n    george: 119, // 114 / 124 AW\n  },\n  {\n    title: \"2020-06-11 2\",\n    data: [ 1, 3, 5, 7, 9,  10, 11, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 46, 48, 49, 52, 54, 56, 59, 61, 62, 63, 69, 70, 71 ],\n    maja: 97,\n    mala: 116, // 107 / 125 AW\n  },\n  // {\n  //   title: \"2020-06-11 3\",\n  //   data: [ 1, 3, 5, 7, 10, 11, 12, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 45, 48, 50, 52, 54, 56, 59, 61, 63, 64, 66, 70, 71 ],\n  //   maja: 87,\n  //   boogie: 113, // 105 / 122 AW\n  // },\n  // {\n  //   title: \"2020-06-11 4\",\n  //   data: [ 1, 3, 5, 7, 10, 12, 14, 15, 16, 20, 24, 27, 30, 33, 35, 36, 38, 39, 45, 48, 50, 51, 54, 55, 59, 61, 63, 64, 66, 70, 71 ],\n  //   maja: 117,\n  //   boogie: 87,\n  // },\n  // 20200612\n  {\n    title: \"2020-06-12 1\",\n    data: [ 1, 3, 4, 7, 10, 12, 14, 15, 16, 20, 24, 25, 30, 34, 35, 36, 37, 39, 43, 49, 50, 51, 52, 54, 57, 59, 62, 63, 69, 70, 71, 73 ],\n    maja: 106,\n    george: 106, // 113/99aw\n  },\n  {\n    title: \"2020-06-12 2\",\n    data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 37, 38, 39, 43, 44, 50, 51, 52, 54, 57, 59, 61, 62, 63, 71, 73 ],\n    maja: 125,\n    george: 125,\n  },\n  // {\n  //   title: \"2020-06-12 3\",\n  //   data: [ 1, 3, 5, 7, 9,  11, 12, 15, 16, 21, 24, 26, 30, 34, 35, 37, 39, 40, 43, 48, 49, 51, 56, 57, 59, 61, 62, 68, 69, 71, 73 ],\n  //   maja: 124,\n  //   boogie: 154,\n  // },\n  // {\n  //   title: \"2020-06-12 4\",\n  //   data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 21, 26, 27, 30, 34, 35, 37, 39, 40, 44, 48, 49, 51, 56, 57, 59, 61, 66, 68, 71, 72, 73 ],\n  //   maja: 88,\n  //   boogie: 97,\n  // },\n  // 20200615\n  {\n    title: \"2020-06-15 1\",\n    data: [ 1, 3, 5, 8, 9,  11, 13, 14, 16, 21, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 51, 55, 57, 59, 61, 66, 68, 69, 70, 71 ],\n    maja: 80,\n    george: 176, // 174/178aw\n  },\n  {\n    title: \"2020-06-15 2\",\n    data: [ 1, 3, 4, 8, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 52, 55, 56, 59, 61, 64, 66, 68, 70, 71 ],\n    maja: 84,\n    george: 140, // 147/133aw\n  },\n  // {\n  //   title: \"2020-06-15 3\",\n  //   data: [ 1, 3, 5, 9, 10, 11, 12, 14, 16, 21, 26, 28, 30, 33, 35, 38, 39, 40, 43, 44, 48, 50, 51, 55, 57, 59, 61, 66, 68, 71, 72, 73 ],\n  //   maja: 87,\n  //   boogie: 139,\n  // },\n  // {\n  //   title: \"2020-06-15 4\",\n  //   data: [ 1, 3, 5, 7, 9, 11, 12, 13, 14, 21, 26, 28, 30, 34, 35, 38, 39, 40, 43, 45, 48, 50, 51, 55, 57, 59, 61, 63, 66, 71, 72, 73 ],\n  //   maja: 70,\n  //   boogie: 126,\n  // },\n  // {\n  //   title: \"2020-06-15 5\",\n  //   data: [],\n  // },\n  // {\n  //   title: \"2020-06-15 6\",\n  //   data: [],\n  // },\n  // 20200616\n  // {\n  //   title: \"2020-06-16 1\",\n  //   data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 26, 28, 32, 34, 35, 36, 39, 41, 43, 46, 49, 50, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n  //   maja: 102,\n  //   boogie: 124, // 124 / AW\n  // },\n  // {\n  //   title: \"2020-06-16 2\",\n  //   data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 37, 39, 41, 43, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n  //   maja: 85,\n  //   boogie: 123,\n  // },\n  // {\n  //   title: \"2020-06-16 3\",\n  //   data: [],\n  // },\n  // 20200618\n  // {\n  //   title: \"2020-06-18 1\",\n  //   data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n  //   maja: 89,\n  //   boogie: 155,\n  // },\n  // {\n  //   title: \"2020-06-18 2\",\n  //   data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 30, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n  //   maja: 115,\n  //   boogie: 130,\n  // },\n  {\n    title: \"2020-06-18 3\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 25, 26, 32, 34, 35, 36, 40, 41, 43, 45, 49, 51, 52, 56, 57, 59, 60, 62, 64, 65, 68, 70 ],\n    maja: 116,\n    george: 157,\n  },\n  {\n    title: \"2020-06-18 4\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 17, 21, 25, 26, 30, 34, 35, 36, 40, 41, 43, 46, 49, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 107,\n    ada: 97,\n  },\n  {\n    title: \"2020-06-18 5\",\n    data: [ 3, 5, 9, 10, 11, 13, 16, 17, 21, 26, 27, 32, 34, 35, 36, 40, 41, 43, 44, 50, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 108,\n    ada: 120,\n  },\n  // {\n  //   title: \"2020-06-18 6\",\n  //   data: [],\n  // },\n  // 20200619\n  // {\n  //   title: \"2020-06-19 1\",\n  //   data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 24, 27, 32, 34, 35, 36, 38, 41, 43, 44, 49, 50, 52, 55, 57, 59, 60, 61, 62, 64, 65, 68 ],\n  //   maja: 73,\n  //   boogie: 66,\n  // },\n  // {\n  //   title: \"2020-06-19 2\",\n  //   data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 27, 28, 31, 32, 34, 36, 38, 41, 43, 44, 49, 50, 52, 54, 55, 59, 60, 61, 64, 65, 68, 71 ],\n  //   maja: 109,\n  //   boogie: 91,\n  // },\n  {\n    title: \"2020-06-19 3\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 30, 34, 36, 40, 41, 43, 44, 49, 50, 51, 56, 57, 59, 60, 61, 64, 65, 68, 71 ], // 20?\n    maja: 76,\n    george: 144,\n  },\n  {\n    title: \"2020-06-19 4\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 34, 35, 36, 37, 38, 43, 44, 49, 51, 52, 55, 57, 59, 60, 61, 62, 64, 68, 70 ],\n    maja: 118,\n    ada: 97,\n  },\n  // 20200622\n  {\n    title: \"2020-06-22 1\",\n    data: [ 1, 3, 4, 7, 8, 11, 12, 13, 16, 20, 27, 28, 31, 34, 35, 37, 39, 40, 44, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 89,\n    ada: 72,\n  },\n  {\n    title: \"2020-06-22 2\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 27, 28, 29, 34, 35, 37, 39, 40, 43, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 84,\n    ada: 92,\n  },\n  {\n    title: \"2020-06-22 3\",\n    data: [ 1, 3, 4, 8, 9, 11, 13, 14, 16, 20, 26, 28, 30, 34, 35, 37, 39, 40, 43, 46, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 86,\n    george: 90,\n  },\n  {\n    title: \"2020-06-22 4\",\n    data: [ 1, 2, 4, 8, 9, 11, 12, 14, 17, 20, 25, 28, 30, 33, 35, 37, 39, 40, 45, 46, 48, 51, 52, 55, 56, 59, 60, 64, 68, 70, 71, 73 ],\n    maja: 86,\n    george: 85,\n  },\n  // 20200623\n  {\n    title: \"2020-06-23 1\",\n    data: [ 1, 2, 4, 8, 10, 11, 12, 16, 17, 21, 26, 28, 29, 32, 35, 36, 39, 40, 44, 46, 49, 50, 52, 54, 56, 59, 60, 65, 66, 68, 72, 73 ],\n    maja: 81,\n    george: 167,\n  },\n  {\n    title: \"2020-06-23 2\",\n    data: [ 1, 2, 4, 7, 10, 11, 12, 16, 17, 21, 26, 28, 29, 33, 35, 36, 39, 40, 44, 46, 48, 50, 52, 54, 56, 59, 60, 65, 66, 68, 69, 73 ],\n    maja: 90,\n    george: 88,\n  },\n  {\n    title: \"2020-06-23 3\",\n    data: [ 1, 2, 5, 7, 10, 11, 12, 16, 17, 21, 26, 28, 29, 33, 35, 36, 39, 40, 44, 46, 48, 50, 52, 55, 56, 59, 60, 61, 62, 68, 69, 73 ],\n    maja: 85,\n    ada: 123,\n  },\n  {\n    title: \"2020-06-23 4\",\n    data: [ 1, 2, 4, 7, 10, 11, 12, 16, 17, 21, 24, 28, 29, 31, 35, 36, 39, 40, 44, 46, 48, 50, 52, 55, 56, 59, 60, 61, 66, 68, 72, 73 ],\n    maja: 85,\n    ada: 90,\n  },\n  // {\n  //   title: \"2020-06-23 5\",\n  //   data: [],\n  // },\n  // 20200626\n  // {\n  //   title: \"2020-06-26 1\",\n  //   data: [ 1, 2, 4, 9, 10, 11, 12, 13, 15, 20, 25, 26, 29, 33, 35, 36, 39, 40, 43, 46, 49, 50, 51, 52, 54, 57, 59, 60, 63, 64, 66, 70, 73 ],\n  //   maja: 88,\n  //   boogie: 201,\n  // },\n  // {\n  //   title: \"2020-06-26 2\",\n  //   data: [ 1, 2, 5, 9, 10, 11, 12, 13, 17, 21, 24, 25, 29, 33, 35, 36, 37, 40, 43, 46, 49, 51, 54, 57, 59, 60, 63, 64, 66, 70, 73 ],\n  //   maja: 89,\n  //   boogie: 146,\n  // },\n  {\n    title: \"2020-06-26 3\",\n    data: [ 1, 2, 5, 9, 10, 11, 12, 13, 17, 21, 24, 25, 29, 32, 35, 36, 39, 40, 45, 46, 49, 51, 52, 54, 56, 59, 60, 66, 68, 69, 70, 73 ],\n    maja: 83,\n    ada: 143,\n  },\n  {\n    title: \"2020-06-26 4\",\n    data: [ 1, 2, 4, 8, 10, 11, 14, 15, 17, 19, 25, 26, 30, 32, 34, 36, 37, 38, 45, 46, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 69, 70 ],\n    maja: 96,\n    ada: 92,\n  },\n  // 20200629\n  // {\n  //   title: \"2020-06-29 1\",\n  //   data: [ 1, 2, 4, 7, 9,  10, 11, 12, 17, 21, 24, 27, 29, 30, 34, 38, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 69, 72 ],\n  //   maja: 85, // 84/85aw\n  //   boogie: 186,\n  // },\n  // {\n  //   title: \"2020-06-29 2\",\n  //   data: [ 1, 2, 4, 7, 10, 11, 12, 13, 17, 21, 24, 27, 30, 32, 34, 36, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 70, 72 ],\n  //   maja: 81, // 81/81aw\n  //   boogie: 182,\n  // },\n  {\n    title: \"2020-06-29 3\",\n    data: [ 1, 2, 4, 8, 10, 11, 12, 13, 17, 21, 24, 27, 30, 32, 34, 36, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 65, 68, 72 ],\n    maja: 76, // 73/79aw\n    ada: 180,\n  },\n  // 20200630\n  // {\n  //   title: \"2020-06-30 1\",\n  //   data: [ 1, 2, 4, 10, 11, 12, 13, 16, 17, 21, 43, 46, 49, 51, 52, 57, 59, 60, 61, 62, 65, 68, 72 ],\n  //   maja: 82, // 83/81aw\n  //   ada: 104,\n  // },\n  {\n    title: \"2020-06-30 2\",\n    data: [ 1, 2, 4, 7,  10, 11, 12, 13, 17, 21, 24, 26, 30, 31, 34, 36, 39, 40, 44, 45, 48, 51, 52, 55, 59, 60, 62, 68, 70, 72, 73 ],\n    maja: 85, // 83/86a\n    ada: 101,\n  },\n  // {\n  //   title: \"2020-06-30 3\",\n  //   data: [ 1, 2, 5, 7,  10, 11, 12, 16, 17, 21, 24, 26, 30, 33, 34, 36, 39, 40, 43, 46, 48, 51, 52, 55, 57, 59, 60, 61, 62, 65, 68, 72 ],\n  //   maja: 78, // 77/79aw\n  //   boogie: 147,\n  // },\n  // 20200702\n  // {\n  //   title: \"2020-07-02 1\",\n  //   data: [ 1, 2, 4, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 33, 34, 36, 39, 40, 43, 46, 47, 49, 51, 55, 57, 59, 60, 61, 68, 69, 70, 71 ],\n  //   maja: 78, // 74/82aw\n  //   boogie: 192,\n  // },\n  // {\n  //   title: \"2020-07-02 2\",\n  //   data: [ 1, 2, 5, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 49, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n  //   maja: 91, // 83/98aw\n  //   boogie: 167,\n  // },\n  {\n    title: \"2020-07-02 3\",\n    data: [ 1, 2, 4, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 48, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n    maja: 90, // 87/92aw\n    ada: 167,\n  },\n  {\n    title: \"2020-07-02 4\",\n    data: [ 1, 2, 4, 9, 10, 12, 13, 15, 17, 20, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 48, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n    maja: 90, // 85/94aw\n    ada: 97,\n  },\n  // // 20200703\n  // {\n  //   title: \"2020-07-03 1\",\n  //   data: [ ],\n  //   maja: 88,\n  //   boogie: 78,\n  // },\n  // {\n  //   title: \"2020-07-03 2\",\n  //   data: [ ],\n  //   maja: 74,\n  //   boogie: 152,\n  // },\n  // {\n  //   title: \"2020-07-03 3\",\n  //   data: [ ],\n  //   maja: 74,\n  //   ada: 210,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: 87,\n  //   ada: 210,\n  // },\n  // // 202007\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n];\n","export const layoutSize = { x: 7, y: 5, z: 5 };\n\nexport default [\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 1, 0,\n  0, 1, 1, 0, 0, 1, 1,\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 0, 0, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 1, 1, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 0, 0, 1, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 0, 1, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 0, 0,\n  0, 0, 1, 1, 0, 0, 0,\n];"],"sourceRoot":""}