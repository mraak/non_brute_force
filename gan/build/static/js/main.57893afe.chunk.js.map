{"version":3,"sources":["store/entries.js","store/layout.js","data/tracks.js","store/size.js","store/graph.js","store/ids.js","utils.js","store/iterations.js","store/iterationIndex.js","store/iteration.js","store/model.js","store/training.js","ui/Guess.js","ui/Pick.js","ui/Preview.js","store/progress.js","tf/vis.js","ui/Train.js","ui/App.js","data/layout.js","index.js","data/iterations.js"],"names":["fetchEntries","createEffect","use","fetch","done","watch","a","params","result","json","entries","sort","b","timestamp","iterationTimestamp","iterations","entry","type","deviceName","name","iteration","avg","push","iterationKey","deviceKey","device","Math","round","reduce","memo","bpm","length","console","log","setLayout","createEvent","layout$","restore","horizontalTracks","verticalTracks","setSize","size$","linksGraph$","combine","layout","size","graph","Graph","allowSelfLoops","edgeKeyGenerator","undirected","source","target","attributes","multi","id","i","fromIndex","addNode","nodeEntries","x","j","toIndex","y","z","hasNode","addEdge","clusters$","linksGraph","idClusters","clusterIds","traverseNode","getNodeAttributes","process","hasEdge","nodes","clusterIds$","map","clusters","key","idClusters$","ids$","item","inside","p","w","h","mouseX","mouseY","xy","floor","generateIteration","getState","ids","id2index","Object","fromEntries","keys","index","horizontalSteps","s","e","steps","verticalSteps","pick","random","addPending","floorTiles","pending","indexOf","k","floorIndex","n","row","is","filter","iterationToLayout","join","xs","ys","setRawIterations","rawIterations$","iterations$","rawIterations","data","setIterationIndex","iterationIndex$","iteration$","iterationIndex","model$","model","tf","layers","conv2d","batchInputShape","kernelSize","filters","strides","activation","kernelInitializer","flatten","dense","units","compile","loss","metrics","optimizer","adam","setTraining","training$","classNames","ranks","guess","number","rank","response","predict","preds","argMax","argMax1","l","labels","Array","from","tfvis","perClassAccuracy","classAccuracy","container","tab","confusionMatrix","values","tickLabels","dispose","fail","error","finally","randomizeClickHandler","iterationLayout","redraw","guessClickHandler","form","max","useStore","useForm","mode","errors","formState","handleSubmit","register","useEffect","p5","W","H","bounds","dragging","setup","createCanvas","CANVAS","noLoop","textSize","textAlign","CENTER","mousePressed","mouseReleased","mouseDragged","draw","posX","posY","posZ","c","fill","rect","text","TILE_SIZE","sketch","remove","onClick","onSubmit","ref","value","disabled","isValid","isSubmitting","Cards","styled","div","Card","selectedIndex","title","WEBGL","frameRate","clear","ambientLight","rotateX","rotateY","translate","PI","plane","pop","edgeEntries","t","sp","tp","strokeWeight","stroke","line","href","JSON","stringify","setProgress","progress$","visualizeModel","modelSummary","output","train","callbacks","fitCallbacks","styles","height","fit","epochs","shuffle","onEpochEnd","args","epoch","progress","training","Nav","nav","Header","PickSection","open","Pick","PreviewSection","Preview","TrainSection","Train","GuessSection","Guess","classifyHumanHeartRate","rate","classifyDogHeartRate","rates","george","boogie","mala","ada","props","maja","george_boogie","majaOutput","dogOutput","abs","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.57893afe.chunk.js","sourcesContent":["import { createEffect } from \"effector\";\n\nexport const fetchEntries = createEffect();\nfetchEntries.use(() => fetch(\"https://heartrate.miran248.now.sh/api/entries\"));\nfetchEntries.done.watch(async({ params, result }) => {\n  const { entries } = await result.json();\n\n  const sorted = entries.sort((a, b) => a.timestamp - b.timestamp);\n\n  let iterationTimestamp = 0;\n\n  const iterations = {};\n\n  for(let entry of entries) {\n    if(entry.type === \"start\")\n      iterationTimestamp = entry.timestamp;\n    // else if(entry.type === \"end\")\n    //   iterationTimestamp = 0;\n    else if(entry.type === \"entry\") {\n      const deviceName = entry.name || \"unknown\";\n      const iteration = iterations[iterationTimestamp] = iterations[iterationTimestamp] || {};\n      const device = iteration[deviceName] = iteration[deviceName] || { entries: [], avg: 0 };\n      device.entries.push(entry);\n    }\n  }\n\n  for(let iterationKey in iterations) {\n    const iteration = iterations[iterationKey];\n\n    for(let deviceKey in iteration) {\n      const device = iteration[deviceKey];\n      device.avg = Math.round(device.entries.reduce((memo, entry) => memo + entry.bpm, 0) / device.entries.length);\n    }\n  }\n\n  console.log(\"entries\", entries);\n  console.log(\"iterations\", iterations);\n});\n\nfetchEntries();\n","import { createEvent, restore } from \"effector\";\n\nexport const setLayout = createEvent();\nexport const layout$ = restore(setLayout, null);\n","export const horizontalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  [\n    [ 1, 1, 1 ], // fixed\n\n    [ 1, 2, 3 ],\n    [ 1, 4, 5 ],\n  ],\n  // 2. floor\n  [\n    // [ 1, 0, 6 ], // empty\n\n    [ 2, 7, 10 ],\n\n    [ 4, 11, 17 ],\n\n    // [ 1, 0, 18 ], // empty\n    // [ 1, 0, 19 ],\n    // [ 1, 0, 20 ],\n    // [ 1, 0, 21 ],\n    [ 1, 19, 21 ],\n\n    // [ 1, 0, 22 ], // empty\n  ],\n  // 3. floor\n  [\n    // [ 1, 0, 23 ], // empty\n\n    [ 2, 24, 28 ],\n\n    [ 3, 29, 35 ],\n\n    [ 3, 36, 41 ],\n\n    // [ 1, 0, 42 ], // empty\n  ],\n  // 4. floor\n  [\n    // [ 2, 43, 47 ],\n    [ 2, 43, 46 ], // 47 temp empty\n\n    // [ 4, 48, 53 ],\n    [ 3, 48, 52 ], // 53 temp empty\n\n    // [ 2, 54, 58 ],\n    [ 2, 54, 57 ], // 58 temp empty\n\n    [ 1, 59, 59 ], // fixed\n  ],\n  // 5. floor\n  null,\n];\n\nexport const verticalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  null,\n  // 2. floor\n  null,\n  // 3. floor\n  null,\n  // 4. floor\n  null,\n  // 5. floor\n  [\n    [ 1, 63, 68 ],\n\n    [ 1, 64, 72 ],\n\n    [ 2, 61, 73 ],\n\n    [ 2, 60, 71 ],\n  ],\n];\n","import { createEvent, restore } from \"effector\";\n\nexport const setSize = createEvent();\nexport const size$ = restore(setSize, null);\n","import { combine } from \"effector\";\nimport Graph from \"graphology\";\n\nimport { layout$ } from \"./layout\";\nimport { size$ } from \"./size\";\n\nimport { fromIndex, toIndex } from \"../utils\";\n\n// all possible links / paths, ignoring clusters and floors\nexport const linksGraph$ = combine(layout$, size$, (layout, size) => {\n  if(layout === null || size === null)\n    return null;\n\n  const graph = new Graph({\n    allowSelfLoops: false,\n    edgeKeyGenerator: ({ undirected, source, target, attributes }) => `${source}->${target}`,\n    multi: true,\n    type: \"directed\",\n  });\n\n  let id = 0;\n  for(let i in layout) {\n    if(layout[i] === 0)\n      continue;\n\n    const attributes = {\n      ...fromIndex(size, i),\n      i,\n      id: ++id,\n    };\n\n    graph.addNode(i, attributes);\n  }\n\n  for(let [ i, a ] of graph.nodeEntries()) {\n    // right\n    if(a.x < size.x - 1) {\n      const j = toIndex(size, a.x + 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 1, y: 0, z: 0 });\n    }\n    // down\n    if(a.y < size.y - 1) {\n      const j = toIndex(size, a.x, a.y + 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: 1, z: 0 });\n    }\n    // // left\n    if(a.x > 0) {\n      const j = toIndex(size, a.x - 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: -1, y: 0, z: 0 });\n    }\n    // up\n    if(a.y > 0) {\n      const j = toIndex(size, a.x, a.y - 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: -1, z: 0 });\n    }\n\n    // next floor\n    if(a.z < size.z - 1) {\n      // right\n      if(a.x < size.x - 1) {\n        const j = toIndex(size, a.x + 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 1, y: 0, z: 1 });\n      }\n      // down\n      if(a.y < size.y - 1) {\n        const j = toIndex(size, a.x, a.y + 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: 1, z: 1 });\n      }\n      // left\n      if(a.x > 0) {\n        const j = toIndex(size, a.x - 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: -1, y: 0, z: 1 });\n      }\n      // up\n      if(a.y > 0) {\n        const j = toIndex(size, a.x, a.y - 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: -1, z: 1 });\n      }\n    }\n  }\n\n  return graph;\n});\n\n// group neighbors (on the same floor) into clusters\nconst clusters$ = combine(linksGraph$, size$, (linksGraph, size) => {\n  if(linksGraph === null || size === null)\n    return null;\n\n  let id = 0;\n  const idClusters = {};\n  const clusterIds = {};\n\n  const traverseNode = (i) => {\n    const a = linksGraph.getNodeAttributes(i);\n    // right\n    if(a.x < size.x - 1)\n      process(i, toIndex(size, a.x + 1, a.y, a.z));\n    // down\n    if(a.y < size.y - 1)\n      process(i, toIndex(size, a.x, a.y + 1, a.z));\n    // left\n    if(a.x > 0)\n      process(i, toIndex(size, a.x - 1, a.y, a.z));\n    // up\n    if(a.y > 0)\n      process(i, toIndex(size, a.x, a.y - 1, a.z));\n  };\n\n  const process = (i, j) => {\n    if(i in idClusters && j in idClusters)\n      return;\n\n    if(linksGraph.hasNode(j) && linksGraph.hasEdge(i, j)) {\n      if(!(i in idClusters)) {\n        idClusters[i] = ++id;\n        clusterIds[idClusters[i]] = [ +i ];\n      }\n\n      if(!(j in idClusters)) {\n        idClusters[j] = idClusters[i];\n        clusterIds[idClusters[j]].push(+j);\n      }\n\n      traverseNode(j);\n    }\n  };\n\n  for(let i of linksGraph.nodes())\n    traverseNode(+i);\n\n  return [ clusterIds, idClusters ];\n});\nexport const clusterIds$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ clusterIds, _ ] = clusters;\n\n  for(let key in clusterIds)\n    clusterIds[key].sort();\n\n  return clusterIds;\n});\nexport const idClusters$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ _, idClusters ] = clusters;\n\n  return idClusters;\n});\n","import { layout$ } from \"./layout\";\n\nexport const ids$ = layout$.map((layout) => {\n  if(!layout)\n    return null;\n\n  let id = 0;\n\n  return layout.map((item) => item === 0 ? 0 : ++id);\n});\n","import { horizontalTracks, verticalTracks } from \"./data/tracks\";\nimport { clusterIds$, idClusters$, linksGraph$ } from \"./store/graph\";\nimport { ids$ } from \"./store/ids\";\nimport { size$ } from \"./store/size\";\n\nexport function inside(p, [ x, y, w, h ]) {\n  return p.mouseX > x && p.mouseX < x + w && p.mouseY > y && p.mouseY < y + h;\n}\n\nexport function fromIndex(size, i) {\n  const xy = size.x * size.y;\n  const z = Math.floor(i / xy);\n\n  i -= z * xy;\n  const y = Math.floor(i / size.x);\n  const x = i - y * size.x;\n\n  return { x, y, z };\n}\nexport function toIndex(size, x, y, z) {\n  return z * size.x * size.y + y * size.x + x;\n}\n\nexport const generateIteration = (p) => {\n  const clusterIds = clusterIds$.getState();\n  const idClusters = idClusters$.getState();\n  const linksGraph = linksGraph$.getState();\n  const ids = ids$.getState();\n  const size = size$.getState();\n\n  const id2index = Object.fromEntries(Object.keys(idClusters).map((index) => [ ids[index], index ]));\n  // const edges = Array.from(linksGraph.edgeEntries());\n\n  console.log(\"clusterIds\", clusterIds);\n  console.log(\"idClusters\", idClusters);\n  // console.log(\"linksGraph\", edges.filter(([ k, ka, s ]) => s == 19)); // ids[+s] === 1));\n  console.log(\"ids\", ids);\n\n  const horizontalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x + 1, a.y, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n  const verticalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x, a.y + 1, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n\n  const pick = (steps) => steps[Math.floor(Math.random() * steps.length)];\n\n  const addPending = (i, a, floorTiles, pending) => {\n    if(a.x < 0 || a.y < 0 || a.x >= size.x || a.y >= size.y)\n      return;\n\n    const j = toIndex(size, a.x, a.y, a.z);\n    if(!linksGraph.hasEdge(i, j) || floorTiles.indexOf(ids[j]) < 0) {\n      const k = toIndex(size, a.x, a.y, a.z + 1);\n      if(linksGraph.hasEdge(i, k) && pending.indexOf(ids[k]) < 0)\n        pending.push(ids[k]);\n    }\n  };\n\n  let iteration = [];\n  let pending = [];\n\n  for(let floorIndex = 0; floorIndex < 5; ++floorIndex) {\n    const floor = horizontalTracks[floorIndex] || verticalTracks[floorIndex];\n\n    let floorTiles = [];\n\n    for(let [ n, s, e ] of floor) {\n      const steps = s === 0 ? null : horizontalTracks[floorIndex] ? horizontalSteps(s, e) : verticalSteps(s, e);\n      const row = [];\n\n      if(pending.length > 0) {\n        if(s === 0) {\n          const i = pending.indexOf(e);\n          if(i > -1)\n            row.push(e);\n          else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        } else {\n          const is = pending.filter((i) => steps.indexOf(i) > -1);\n          if(is.length > 0) {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(Math.random() < .5)\n                  id = is[Math.floor(Math.random() * is.length)];\n                else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              row.push(id);\n            }\n          } else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        }\n      } else {\n        for(let i = 0; i < n; ++i) {\n          let id = 0;\n\n          do {\n            if(s === 0) {\n              id = [ s, e ][Math.round(Math.random())];\n            } else {\n              id = pick(steps);\n            }\n          } while(row.indexOf(id) > -1);\n\n          if(id > 0)\n            row.push(id);\n        }\n      }\n\n      floorTiles = [ ...floorTiles, ...row ];\n    }\n\n    pending = [];\n\n    for(let id of floorTiles) {\n      const i = id2index[id];\n      const a = linksGraph.getNodeAttributes(i);\n\n      // right\n      addPending(i, { x: a.x + 1, y: a.y, z: a.z }, floorTiles, pending);\n      // down\n      addPending(i, { x: a.x, y: a.y + 1, z: a.z }, floorTiles, pending);\n      // // left\n      addPending(i, { x: a.x - 1, y: a.y, z: a.z }, floorTiles, pending);\n      // up\n      addPending(i, { x: a.x, y: a.y - 1, z: a.z }, floorTiles, pending);\n    }\n\n    console.log(\"pending\", pending);\n\n    iteration = [ ...iteration, ...floorTiles ];\n  }\n\n  iteration.sort((a, b) => a - b);\n\n  return iteration;\n};\n\nexport const iterationToLayout = (layout, iteration) => {\n  let id = 0;\n\n  return layout.map((item) => {\n    if(item === 0)\n      return 0;\n\n    return iteration.indexOf(++id) > -1 ? 1 : 0;\n  });\n};\n\nexport const join = (xs, ys) => xs.map((x, i) => x + ys[i]);\n","import { combine, createEvent, restore } from \"effector\";\n\nimport { layout$ } from \"./layout\";\n\nimport { join } from \"../utils\";\n\nexport const setRawIterations = createEvent();\nexport const rawIterations$ = restore(setRawIterations, null);\n\nexport const iterations$ = combine(layout$, rawIterations$, (layout, rawIterations) => {\n  if(layout === null || rawIterations === null)\n    return null;\n\n  return rawIterations.map((iteration) => ({\n    ...iteration,\n    data: join(layout, iteration.data),\n  }));\n});\n","import { createEvent, restore } from \"effector\";\n\nexport const setIterationIndex = createEvent();\nexport const iterationIndex$ = restore(setIterationIndex, 0);\n","import { combine } from \"effector\";\n\nimport { iterationIndex$ } from \"./iterationIndex\";\nimport { iterations$ } from \"./iterations\";\n\nexport const iteration$ = combine(iterationIndex$, iterations$, (iterationIndex, iterations) => {\n  if(iterationIndex < 0 || iterations === null)\n    return null;\n\n  return iterations[iterationIndex];\n});\n","import * as tf from \"@tensorflow/tfjs\";\n\nimport { size$ } from \"../store/size\";\n\nexport const model$ = size$.map((size) => {\n  if(size === null)\n    return null;\n\n  const model = tf.sequential({\n    layers: [\n      // hidden\n      // tf.layers.dense({\n      //   batchInputShape: [ null, 36 ],\n      //   units: 1024,\n      //   activation: \"sigmoid\",\n      // }),\n      // // output\n      // tf.layers.dense({\n      //   units: 2,\n      //   activation: \"softmax\",\n      // }),\n      tf.layers.conv2d({\n        batchInputShape: [ null, size.x, size.y, size.z ],\n        kernelSize: 5,\n        filters: 16,\n        strides: 2,\n        activation: \"relu\",\n        kernelInitializer: \"varianceScaling\",\n      }),\n\n      // The MaxPooling layer acts as a sort of downsampling using max values\n      // in a region instead of averaging.\n      // tf.layers.maxPooling2d({ poolSize: [2, 2], strides: [2, 2] }),\n\n      // Now we flatten the output from the 2D filters into a 1D vector to prepare\n      // it for input into our last layer. This is common practice when feeding\n      // higher dimensional data to a final classification output layer.\n      tf.layers.flatten(),\n\n      // output\n      tf.layers.dense({\n        units: 5,\n        kernelInitializer: \"varianceScaling\",\n        activation: \"softmax\",\n      }),\n    ],\n  });\n\n  model.compile({\n    // loss: tf.losses.categoricalCrossentropy,\n    loss: \"categoricalCrossentropy\",\n    metrics: [ \"accuracy\" ],\n    // loss: tf.losses.softmaxCrossEntropy,\n    // optimizer: tf.train.sgd(.2),\n    optimizer: tf.train.adam(),\n  });\n\n  return model;\n});\n","import { createEvent, restore } from \"effector\";\n\nexport const setTraining = createEvent();\nexport const training$ = restore(setTraining, false);\n","import { createEffect } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { ids$ } from \"../store/ids\";\nimport { layout$ } from \"../store/layout\";\nimport { model$ } from \"../store/model\";\nimport { size$ } from \"../store/size\";\nimport { setTraining } from \"../store/training\";\nimport { inside, fromIndex, toIndex, generateIteration, iterationToLayout, join } from \"../utils\";\n\nconst classNames = [\n  \"Zero\",\n  \"One\",\n  \"Two\",\n  \"Three\",\n  \"Four\",\n  \"Five\",\n  \"Six\",\n  \"Seven\",\n  \"Eight\",\n  \"Nine\",\n];\n\nconst ranks = [\n  [ 1, 0, 0, 0, 0 ],\n  [ 0, 1, 0, 0, 0 ],\n  [ 0, 0, 1, 0, 0 ],\n  [ 0, 0, 0, 1, 0 ],\n  [ 0, 0, 0, 0, 1 ],\n];\n\nconst guess = createEffect();\nguess.use(async({ number, rank }) => {\n  const size = size$.getState();\n\n  const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ], \"int32\");\n  // const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ]);\n  const response = model$.getState().predict(xs);\n  const preds = response.argMax(1);\n  const argMax1 = await preds.data();\n  const data = await response.data();\n\n  const l = tf.tensor([ ranks[rank] ], [ 1, 5 ]);\n  const labels = await l.argMax(1);\n\n  console.log(\"guessed\", argMax1[0], Array.from(data));\n\n  // accuracy\n  const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\n  const container = { name: \"Accuracy\", tab: \"Evaluation\" };\n  tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\n\n  // confusion\n  const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\n  // console.log(\"tfvis.show\", tfvis.show)\n  // console.log(\"tfvis.render\", tfvis.render)\n  // console.log(\"tfvis.metrics\", tfvis.metrics)\n\n  tfvis.render.confusionMatrix({ name: \"Confusion Matrix\", tab: \"Evaluation\" }, {\n    values: confusionMatrix,\n    tickLabels: classNames,\n  });\n  // tfvis.render.heatmap({ name: \"Heatmap\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n  // tfvis.render.histogram({ name: \"Histogram\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n\n  xs.dispose();\n  l.dispose();\n\n  return response;\n});\nguess.pending.watch((pending) => pending && setTraining(true));\nguess.fail.watch((error) => {\n  console.error(\"guess error\", error);\n})\nguess.finally.watch(() => setTraining(false));\n\n// const test = async() => {\n//   for(let i of trainData) {\n//     const response = await guess(i[0]);\n//     const argMax = await response.argMax(1).data();\n//     const data = await response.data();\n//\n//     const fake = Array.from(data);\n//     const realIndex = i[1];\n//     const fakeIndex = Array.from(argMax)[0];\n//\n//     console.log(realIndex === fakeIndex, realIndex, fakeIndex, i[2], fake.map((i) => i.toFixed(2)));\n//   }\n// };\n\nconst TILE_SIZE = 12;\n\nconst sketch = (size) => (p) => {\n  const ids = ids$.getState();\n\n  const W = size.x * TILE_SIZE;\n  const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n  const bounds = [ 0, 0, W, H ];\n\n  let dragging = -1;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n  };\n  p.mousePressed = () => {\n    if(inside(p, bounds)) {\n      const l = [ p.mouseX - bounds[0], p.mouseY - bounds[1] ];\n      const x = p.floor(l[0] / TILE_SIZE);\n      const z = p.floor(l[1] / (TILE_SIZE * (size.y + 1)));\n      const y = p.floor(l[1] / TILE_SIZE) - (size.y + 1) * z;\n\n      if(x < size.x && y < size.y && z < size.z) {\n        const i = toIndex(size, x, y, z);\n\n        if(layout[i] === 2)\n          dragging = layout[i] = 1;\n        else if(layout[i] === 1)\n          dragging = layout[i] = 2;\n        else\n          dragging = -1;\n\n        p.redraw();\n      }\n    } else\n      dragging = -1;\n  };\n  p.mouseReleased = () => {\n    dragging = -1;\n  };\n  p.mouseDragged = () => {\n    if(dragging < 0)\n      return;\n\n    if(inside(p, bounds)) {\n      const l = [ p.mouseX - bounds[0], p.mouseY - bounds[1] ];\n      const x = p.floor(l[0] / TILE_SIZE);\n      const z = p.floor(l[1] / (TILE_SIZE * (size.y + 1)));\n      const y = p.floor(l[1] / TILE_SIZE) - (size.y + 1) * z;\n\n      if(x < size.x && y < size.y && z < size.z) {\n        const i = toIndex(size, x, y, z);\n\n        if(layout[i] > 0)\n          layout[i] = dragging;\n\n        p.redraw();\n      }\n    }\n  }\n  p.draw = () => {\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    for(let i in layout) {\n      const { x, y, z } = fromIndex(size, i);\n\n      const posX = x * TILE_SIZE;\n      const posY = y * TILE_SIZE;\n      const posZ = z * (size.y + 1) * TILE_SIZE;\n\n      let c = 255;\n\n      if(layout[i] === 2)\n        c = 51;\n      else if(layout[i] === 1)\n        c = 204;\n\n      p.fill(c);\n      p.rect(posX, posY + posZ, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      if(ids[i] > 0)\n        p.text(ids[i], posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n    }\n  };\n};\n\nconst randomizeClickHandler = () => {\n  const l = layout$.getState();\n\n  const iteration = generateIteration(p);\n  const iterationLayout = join(l, iterationToLayout(l, iteration));\n\n  layout = iterationLayout;\n\n  p.redraw();\n};\nconst guessClickHandler = (form) => {\n  const rank = +form.rank;\n  guess({ number: layout.map((item) => Math.max(0, item - 1)), rank });\n};\n\nlet p, layout;\n\nexport default () => {\n  const size = useStore(size$);\n\n  const { errors, formState, handleSubmit, register } = useForm({\n    mode: \"onChange\",\n  });\n\n  const id = `guess-container`;\n\n  useEffect(() => {\n    layout = layout$.getState();\n\n    p = new p5(sketch(size), id);\n    p.redraw();\n\n    return p.remove;\n  }, []);\n\n  return (\n    <div>\n      <p>\n        <button onClick={randomizeClickHandler}>randomize</button>\n      </p>\n      <p id={id} />\n      <form onSubmit={handleSubmit(guessClickHandler)}>\n        <fieldset>\n          <legend>options</legend>\n          <label>\n            <h6>class</h6>\n            <select name=\"rank\" ref={register}>\n              <option value={0}>0</option>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n              <option value={4}>4</option>\n            </select>\n            {errors.rank && \"class is required\"}\n          </label>\n          <hr />\n          <input type=\"submit\" value=\"guess\" disabled={!formState.isValid || formState.isSubmitting} />\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { ids$ } from \"../store/ids\";\nimport { iterationIndex$, setIterationIndex } from \"../store/iterationIndex\";\nimport { iterations$ } from \"../store/iterations\";\nimport { size$ } from \"../store/size\";\nimport { fromIndex } from \"../utils\";\n\nconst TILE_SIZE = 12;\n// const TILE_SIZE = 24;\n\nconst sketch = (iteration, size) => (p) => {\n  const ids = ids$.getState();\n\n  const W = size.x * TILE_SIZE;\n  const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n  };\n  p.draw = () => {\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    for(let i in iteration) {\n      const { x, y, z } = fromIndex(size, i);\n\n      const posX = x * TILE_SIZE;\n      const posY = y * TILE_SIZE;\n      const posZ = z * (size.y + 1) * TILE_SIZE;\n\n      let c = 255;\n\n      if(iteration[i] === 2)\n        c = 51;\n      else if(iteration[i] === 1)\n        c = 204;\n\n      p.fill(c);\n      p.rect(posX, posY + posZ, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      if(ids[i] > 0)\n        p.text(ids[i], posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n    }\n  };\n};\n\nconst Cards = styled.div`\n  display: grid;\n  gap: 1ch;\n  grid-auto-flow: column;\n  overflow-x: auto;\n`;\n\nconst Card = ({ id, index, iteration }) => {\n  const selectedIndex = useStore(iterationIndex$);\n  const size = useStore(size$);\n\n  useEffect(() => {\n    const p = new p5(sketch(iteration.data, size), id);\n\n    return p.remove;\n  }, []);\n\n  return (\n    <button id={id}\n            onClick={() => setIterationIndex(index)}\n            disabled={selectedIndex === index}>\n      <div>{iteration.title}</div>\n    </button>\n  );\n};\n\nexport default () => {\n  const iterations = useStore(iterations$);\n\n  return (\n    <Cards>\n    {iterations.map((iteration, i) => {\n      const id = `pick-container-${i}`;\n\n      return (\n        <Card key={id}\n              id={id}\n              index={i}\n              iteration={iteration} />\n      );\n    })}\n    </Cards>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { linksGraph$ } from \"../store/graph\";\nimport { iteration$ } from \"../store/iteration\";\nimport { size$ } from \"../store/size\";\nimport { fromIndex } from \"../utils\";\n\nconst TILE_SIZE = 60;\n\nconst sketch = (iteration, size) => (p) => {\n  const W = 750;\n  const H = 468.75;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.WEBGL);\n    p.frameRate(12);\n  };\n  p.draw = () => {\n    p.clear();\n\n    // p.normalMaterial();\n    p.ambientLight(255, 255, 255);\n\n    //p.rotateX(-p.mouseY * .01);\n    p.rotateX(-.6);\n    p.rotateY(p.mouseX * .01);\n\n    p.translate(\n      -.5 * TILE_SIZE * size.x,\n      -.5 * TILE_SIZE * size.y,\n      -.5 * TILE_SIZE * size.z\n    );\n\n    for(let i in iteration) {\n      if(iteration[i] === 0)\n        continue;\n\n      const { x, y, z } = fromIndex(size, i);\n\n      p.push();\n\n      p.translate(\n        TILE_SIZE * (x + .5),\n        TILE_SIZE * (z + .5),\n        TILE_SIZE * (y + .5)\n      );\n      p.rotateX(p.PI * -.5);\n\n      if(iteration[i] === 2)\n        p.fill(51, 51, 51);\n      else if(iteration[i] === 1)\n        p.fill(153, 153, 153);\n\n      p.plane(TILE_SIZE);\n\n      // p.box(TILE_SIZE - 1, TILE_SIZE - 1, TILE_SIZE - 1);\n\n      p.pop();\n    }\n\n    const linksGraph = linksGraph$.getState();\n    for(let [ k, ka, s, t, sa, ta ] of linksGraph.edgeEntries()) {\n      const sp = fromIndex(size, +s);\n      const tp = fromIndex(size, +t);\n\n      p.push();\n\n      p.strokeWeight(2);\n      p.stroke(0, 102, 255);\n      p.line(\n        TILE_SIZE * (sp.x + .5), TILE_SIZE * (sp.z + .5), TILE_SIZE * (sp.y + .5),\n        TILE_SIZE * (tp.x + .5), TILE_SIZE * (tp.z + .5), TILE_SIZE * (tp.y + .5)\n      );\n\n      p.pop();\n    }\n  };\n};\n\nconst Card = styled.div`\n  & canvas {\n    display: block;\n    height: auto !important;\n    width: 100% !important;\n  }\n`;\n\nexport default () => {\n  const iteration = useStore(iteration$);\n  const size = useStore(size$);\n\n  const id = `preview-container`;\n\n  useEffect(() => {\n    if(iteration === null)\n      return;\n\n    const p = new p5(sketch(iteration.data, size), id);\n\n    return p.remove;\n  }, [ iteration ]);\n\n  if(iteration === null) {\n    return (\n      <div><a href=\"#pick\">pick iteration</a></div>\n    );\n  }\n\n  const text = JSON.stringify(iteration.data);\n\n  return (\n    <Card>\n      <p>\n        <code>{text}</code>\n      </p>\n      <div id={id} />\n    </Card>\n  );\n};\n","import { createEvent, restore } from \"effector\";\n\nexport const setProgress = createEvent();\nexport const progress$ = restore(setProgress, 0);\n","import * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS, NUM_OUTPUT_CLASSES } from \"./constants\";\n\nexport async function visualizeModel(model) {\n  tfvis.show.modelSummary({ name: \"Model Architecture\" }, model);\n}\n\nexport async function showExamples(data) {\n  // Create a container in the visor\n  const surface = tfvis\n    .visor()\n    .surface({ name: \"Input Data Examples\", tab: \"Input Data\" });\n\n  // Get the examples\n  // const examples = data.nextTestBatch(20);\n  // const examples = data.allTrainData();\n  const examples = data;\n  const numExamples = examples.xs.shape[0];\n\n  // Create a canvas element to render each example\n  for (let i = 0; i < numExamples; i++) {\n    const imageTensor = tf.tidy(() => {\n      // Reshape the image to 28x28 px\n      return examples.xs\n        .slice([i, 0], [1, examples.xs.shape[1]])\n        .reshape([IMAGE_WIDTH, IMAGE_HEIGHT, /*IMAGE_CHANNELS*/]);\n    });\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = IMAGE_WIDTH;\n    canvas.height = IMAGE_HEIGHT;\n    canvas.style.margin = \"4px\";\n    await tf.browser.toPixels(imageTensor, canvas);\n    surface.drawArea.appendChild(canvas);\n\n    imageTensor.dispose();\n  }\n}\n\nexport function getFitCallbacks() {\n  const metrics = [\"loss\", \"val_loss\", \"acc\", \"val_acc\"];\n  // const metrics = [\"val_loss\", \"val_acc\"];\n  const container = {\n    name: \"Model Training\",\n    tab: \"Training\",\n    styles: { height: \"800px\" }\n  };\n\n  return tfvis.show.fitCallbacks(container, metrics, {\n    callbacks: [\"onEpochEnd\"]\n  });\n}\n\nexport async function showAccuracy(\n  [preds, labels],\n  data,\n  classNames\n) {\n  const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\n  const container = { name: \"Accuracy\", tab: \"Evaluation\" };\n  tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\n}\n\nexport async function showConfusion(\n  [preds, labels],\n  data,\n  classNames\n) {\n  const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\n  // console.log(\"tfvis.show\", tfvis.show)\n  // console.log(\"tfvis.render\", tfvis.render)\n  // console.log(\"tfvis.metrics\", tfvis.metrics)\n\n  tfvis.render.confusionMatrix({ name: \"Confusion Matrix\", tab: \"Evaluation\" }, {\n    values: confusionMatrix,\n    tickLabels: classNames,\n  });\n  // tfvis.render.heatmap({ name: \"Heatmap\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n  // tfvis.render.histogram({ name: \"Histogram\", tab: \"Evaluation\" }, {\n  //   values: confusionMatrix,\n  // });\n}\n\nexport function openVis() {\n  tfvis.visor().open();\n}\n\nexport function isVisOpen() {\n  return tfvis.visor().isOpen();\n}\n","import { combine, createEffect } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nimport { rawIterations$ } from \"../store/iterations\";\nimport { model$ } from \"../store/model\";\nimport { setProgress, progress$ } from \"../store/progress\";\nimport { size$ } from \"../store/size\";\nimport { setTraining, training$ } from \"../store/training\";\nimport {\n  showExamples,\n  showAccuracy,\n  showConfusion,\n  visualizeModel,\n  getFitCallbacks,\n} from \"../tf/vis\";\nimport { join } from \"../utils\";\n\nconst EPOCH_COUNT = 50;\n\nlet xs;\nlet ys;\ncombine(rawIterations$, size$, (iterations, size) => {\n  if(iterations === null || size === null)\n    return;\n\n  if(xs)\n    xs.dispose();\n\n  if(ys)\n    ys.dispose();\n\n  const data = iterations.map((iteration) => iteration.data);\n  xs = tf.tensor(data, [ data.length, size.x, size.y, size.z ], \"int32\");\n\n  const output = iterations.map((iteration) => iteration.output);\n  ys = tf.tensor(output, [ data.length, 5 ], \"int32\");\n});\n\nconst train = createEffect();\ntrain.use(async() => {\n  const model = model$.getState();\n\n  visualizeModel(model);\n\n  const callbacks = getFitCallbacks();\n\n  const response = await model.fit(xs, ys, {\n    epochs: EPOCH_COUNT,\n    shuffle: true,\n    // validationSplit: .1,\n    callbacks: {\n      // unblocks p5.draw\n      // onBatchEnd: tf.nextFrame,\n      onEpochEnd: (...args) => {\n        const [ i, history ] = args;\n\n        const epoch = i + 1;\n\n        // console.log(`epoch ${epoch}, loss ${history.loss}`);\n\n        setProgress(epoch / EPOCH_COUNT);\n\n        return callbacks.onEpochEnd(...args);\n      },\n    },\n  });\n\n  return response;\n});\ntrain.pending.watch((pending) => pending && setTraining(true));\ntrain.fail.watch((error) => {\n  console.error(\"train error\", error);\n})\ntrain.finally.watch(() => setTraining(false));\n\nexport default () => {\n  const progress = useStore(progress$);\n  const training = useStore(training$);\n\n  return (\n    <div>\n      <p>\n        <button onClick={train}\n                disabled={training}>{training ? \"training ...\" : \"train\"}</button>\n      </p>\n      <progress value={progress}>{Math.round(progress * 100)}%</progress>\n    </div>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Draw from \"./Draw\";\n// import Generate from \"./Generate\";\nimport Guess from \"./Guess\";\nimport Pick from \"./Pick\";\nimport Preview from \"./Preview\";\nimport Train from \"./Train\";\n\nconst Nav = styled.nav`\n  & > a + a {\n    margin-left: 1ch;\n  }\n`;\n\nconst Header = () => (\n  <header>\n    <h1>nbf</h1>\n    <Nav>\n      <a href=\"#pick\">pick</a>\n      {/* <a href=\"#draw\">draw</a> */}\n      <a href=\"#preview\">preview</a>\n      <a href=\"#train\">train</a>\n      <a href=\"#guess\">guess</a>\n      {/* <a href=\"#generate\">generate</a> */}\n    </Nav>\n  </header>\n);\n\nconst PickSection = () => (\n  <details id=\"pick\" open>\n    <summary>pick iteration</summary>\n\n    <Pick />\n  </details>\n);\nconst DrawSection = () => (\n  <details id=\"draw\">\n    <summary>draw</summary>\n\n    <Draw />\n  </details>\n);\nconst PreviewSection = () => (\n  <details id=\"preview\" open>\n    <summary>3d preview</summary>\n\n    <Preview />\n  </details>\n);\nconst TrainSection = () => (\n  <details id=\"train\" open>\n    <summary>train</summary>\n\n    <Train />\n  </details>\n);\nconst GuessSection = () => (\n  <details id=\"guess\" open>\n    <summary>guess</summary>\n\n    <Guess />\n  </details>\n);\n// const GenerateSection = () => (\n//   <details id=\"generate\" open>\n//     <summary>generate</summary>\n//\n//     <Generate />\n//   </details>\n// );\n\nexport default () => (\n  <>\n    <Header />\n    <main>\n      <PickSection />\n      <hr />\n      {/* <DrawSection />\n      <hr /> */}\n      <PreviewSection />\n      <hr />\n      <TrainSection />\n      <hr />\n      <GuessSection />\n      {/* <hr />\n      <GenerateSection /> */}\n    </main>\n  </>\n);\n","export const layoutSize = { x: 7, y: 5, z: 5 };\n\nexport default [\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 1, 0,\n  0, 1, 1, 0, 0, 1, 1,\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 0, 0, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 1, 1, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 0, 0, 1, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 0, 1, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 0, 0,\n  0, 0, 1, 1, 0, 0, 0,\n];","import \"regenerator-runtime/runtime\";\nimport \"@exampledev/new.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { entriesFx } from \"./store/entries\";\nimport { setRawIterations } from \"./store/iterations\";\nimport { setLayout } from \"./store/layout\";\nimport { setSize } from \"./store/size\";\nimport App from \"./ui/App\";\n\n// import fours from \"./data/fours\";\n// import ones from \"./data/ones\";\n// import threes from \"./data/threes\";\n// import twos from \"./data/twos\";\n// import zeros from \"./data/zeros\";\n// const props = {\n//   iterations: [\n//     ...zeros .map((item, i) => ({ title: `zeros ${i + 1}`,  data: item, output: [ 1, 0, 0, 0, 0 ] })),\n//     ...ones  .map((item, i) => ({ title: `ones ${i + 1}`,   data: item, output: [ 0, 1, 0, 0, 0 ] })),\n//     ...twos  .map((item, i) => ({ title: `twos ${i + 1}`,   data: item, output: [ 0, 0, 1, 0, 0 ] })),\n//     ...threes.map((item, i) => ({ title: `threes ${i + 1}`, data: item, output: [ 0, 0, 0, 1, 0 ] })),\n//     ...fours .map((item, i) => ({ title: `fours ${i + 1}`,  data: item, output: [ 0, 0, 0, 0, 1 ] })),\n//   ],\n//   layout: Array.from(Array(36), () => 1),\n//   size: { x: 6, y: 6, z: 1 },\n// };\n\nimport iterations from \"./data/iterations\";\nimport layout, { layoutSize } from \"./data/layout\";\nimport { iterationToLayout } from \"./utils\";\nconst classifyHumanHeartRate = (rate) => {\n  if(rate < 60)\n    return [ 1, 0, 0, 0, 0 ]; // [ 0, 60 )\n\n  if(rate < 80)\n    return [ 0, 1, 0, 0, 0 ]; // [ 60, 80 )\n\n  if(rate < 100)\n    return [ 0, 0, 1, 0, 0 ]; // [ 80, 100 )\n\n  if(rate < 120)\n    return [ 0, 0, 0, 1, 0 ]; // [ 100, 120 )\n\n  return [ 0, 0, 0, 0, 1 ]; // [ 120, inf )\n};\nconst classifyDogHeartRate = (iteration) => {\n  const rates = [];\n\n  if(\"george\" in iteration)\n    rates.push(iteration.george);\n  if(\"boogie\" in iteration)\n    rates.push(iteration.boogie);\n  if(\"mala\" in iteration)\n    rates.push(iteration.mala);\n  if(\"ada\" in iteration)\n    rates.push(iteration.ada);\n\n  const rate = rates.reduce((memo, rate) => memo + rate, 0) / rates.length;\n\n  if(rate < 60)\n    return [ 1, 0, 0, 0, 0 ]; // [ 0, 60 )\n\n  if(rate < 80)\n    return [ 0, 1, 0, 0, 0 ]; // [ 60, 80 )\n\n  if(rate < 100)\n    return [ 0, 0, 1, 0, 0 ]; // [ 80, 100 )\n\n  if(rate < 120)\n    return [ 0, 0, 0, 1, 0 ]; // [ 100, 120 )\n\n  return [ 0, 0, 0, 0, 1 ]; // [ 120, inf )\n};\nconst classifyDeltaHeartRate = (rate) => {\n  if(rate < 20)\n    return [ 1, 0, 0, 0, 0 ]; // [ 0, 20 )\n\n  if(rate < 40)\n    return [ 0, 1, 0, 0, 0 ]; // [ 20, 40 )\n\n  if(rate < 60)\n    return [ 0, 0, 1, 0, 0 ]; // [ 40, 60 )\n\n  if(rate < 80)\n    return [ 0, 0, 0, 1, 0 ]; // [ 60, 80 )\n\n  return [ 0, 0, 0, 0, 1 ]; // [ 80, inf )\n};\nconst props = {\n  iterations: iterations.map((iteration) => ({\n    ...iteration,\n    data: iterationToLayout(layout, iteration.data),\n    majaOutput: classifyHumanHeartRate(iteration.maja),\n    dogOutput: classifyDogHeartRate(iteration),\n    output: classifyDeltaHeartRate(Math.abs(classifyHumanHeartRate(iteration.maja) - classifyDogHeartRate(iteration))),\n  })),\n  layout,\n  size: layoutSize,\n};\n\nsetRawIterations(props.iterations);\nsetLayout(props.layout);\nsetSize(props.size);\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","export default [\n  // 20200526\n  {\n    title: \"2020-05-26 1\",\n    data: [ 3, 4, 6, 7, 9, 11, 12, 14, 15, 24, 27, 29, 31, 34, 36, 38, 39, 44, 46, 48, 49, 51, 53, 54, 57, 59, 61, 62, 63, 64, 70, 72 ],\n    george: 89,\n    maja: 104,\n  },\n  {\n    title: \"2020-05-26 2\",\n    data: [ 3, 4, 6, 7, 9, 11, 12, 13, 15, 24, 27, 29, 32, 35, 36, 38, 39, 44, 45, 48, 49, 52, 53, 54, 57, 59, 62, 63, 65, 70, 72 ],\n    boogie: 98,\n    maja: 87,\n  },\n  // 20200527\n  {\n    title: \"2020-05-27 1\",\n    data: [ 1, 3, 4, 5, 7, 9,  11, 12, 13, 15, 19, 24, 28, 29, 32, 35, 36, 40, 41, 46, 48, 49, 51, 54, 57, 59, 61, 62, 68, 70, 72 ],\n    maja: 93,\n    george: 80,\n    george_boogie: 85, // ?\n    boogie: 90,\n  },\n  {\n    title: \"2020-05-27 2\",\n    data: [ 1, 3, 4, 5, 8, 10, 11, 12, 13, 15, 19, 24, 28, 29, 35, 38, 40, 41, 43, 46, 48, 50, 51, 55, 56, 59, 61, 62, 68, 70, 72 ],\n    maja: 90,\n    george: 82,\n    george_boogie: 90, // ?\n    boogie: 98,\n  },\n  // 20200601\n  {\n    title: \"2020-06-01 1\",\n    data: [ 3, 4, 5, 7, 10, 13, 14, 15, 17, 19, 24, 28, 30, 32, 35, 38, 40, 41, 43, 46, 48, 50, 52, 54, 57, 59, 60, 62, 65, 68, 70, 72 ],\n    maja: 90,\n    boogie: 127,\n  },\n  {\n    title: \"2020-06-01 2\",\n    data: [ 4, 5, 10, 13, 14, 15, 16, 19, 24, 28, 30, 32, 34, 37, 38, 40, 41, 43, 47, 48, 50, 51, 54, 57, 59, 60, 61, 62, 64, 68, 70, 72 ],\n    maja: 96,\n    boogie: 93,\n  },\n  // 20200602\n  {\n    title: \"2020-06-02 1\",\n    data: [ 3, 4, 5, 7, 9,  12, 13, 15, 17, 19, 24, 26, 30, 31, 34, 36, 38, 40, 43, 46, 48, 50, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 93,\n    george: 92, // georgy?\n  },\n  {\n    title: \"2020-06-02 2\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 16, 17, 19, 26, 27, 29, 31, 34, 36, 40, 43, 48, 49, 52, 55, 57, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 97,\n    george: 142, // georgy?\n  },\n  {\n    title: \"2020-06-02 3\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 13, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 40, 43, 46, 48, 49, 50, 54, 57, 59, 61, 62, 68, 70, 71, 72 ],\n    maja: 92,\n    mala: 81,\n  },\n  {\n    title: \"2020-06-02 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 41, 43, 46, 48, 49, 52, 54, 57, 59, 60, 61, 68, 70, 71, 72 ],\n    maja: 86,\n    mala: 88,\n  },\n  // 20200603\n  {\n    title: \"2020-06-03 1\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 15, 16, 20, 26, 28, 29, 30, 32, 36, 39, 41, 43, 46, 48, 49, 52, 54, 56, 59, 60, 61, 63, 69, 70, 71 ],\n    maja: 95,\n    mala: 154,\n  },\n  {\n    title: \"2020-06-03 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 13, 14, 17, 20, 25, 28, 29, 31, 33, 36, 37, 41, 43, 46, 48, 49, 52, 56, 57, 59, 62, 63, 64, 65, 70, 71 ],\n    maja: 99,\n    mala: 87,\n  },\n  {\n    title: \"2020-06-03 3\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 38, 41, 43, 46, 48, 49, 52, 55, 57, 59, 60, 61, 63, 70, 71, 72 ],\n    maja: 98,\n    george: 96,\n  },\n  {\n    title: \"2020-06-03 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 40, 41, 43, 46, 47, 48, 49, 52, 55, 57, 59, 61, 62, 63, 70, 71, 72 ],\n    maja: 93,\n    george: 119,\n  },\n  {\n    title: \"2020-06-03 5\",\n    data: [ 3, 4, 5, 8, 10, 11, 13, 15, 17, 20, 25, 26, 30, 32, 34, 36, 38, 41, 43, 44, 46, 47, 48, 50, 52, 55, 57, 59, 60, 61, 63, 66, 71, 72 ],\n    maja: 101,\n    boogie: 75,\n  },\n  {\n    title: \"2020-06-03 6\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 20, 25, 26, 29, 31, 34, 36, 38, 41, 45, 46, 48, 49, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 92,\n    ada: 69,\n  },\n  // 20200604\n  {\n    title: \"2020-06-04 1\",\n    data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 20, 24, 25, 27, 29, 30, 32, 33, 39, 43, 44, 48, 49, 50, 51, 56, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 92,\n    ada: 96,\n  },\n  {\n    title: \"2020-06-04 2\",\n    data: [ 3, 4, 5, 8, 9, 11, 13, 15, 17, 19, 24, 25, 29, 32, 34, 38, 40, 41, 43, 46, 47, 48, 49, 52, 53, 57, 60, 61, 64, 68, 71, 73 ],\n    maja: 87,\n    george: 93,\n  },\n  {\n    title: \"2020-06-04 3\",\n    data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 19, 24, 26, 29, 32, 34, 38, 40, 41, 44, 46, 48, 50, 52, 55, 57, 59, 62, 65, 68, 71, 72, 73 ],\n    maja: 96,\n    boogie: 184,\n  },\n  {\n    title: \"2020-06-04 4\",\n    data: [ 3, 4, 5, 7, 8, 11, 13, 15, 17, 20, 24, 27, 29, 30, 34, 38, 40, 41, 45, 46, 48, 51, 52, 54, 57, 59, 61, 63, 64, 70, 71, 73 ],\n    maja: 97,\n    ada: 98,\n  },\n  // 20200605\n  {\n    title: \"2020-06-05 1\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 20, 24, 27, 29, 31, 34, 38, 40, 41, 43, 44, 48, 51, 52, 54, 57, 62, 63, 70, 71, 72, 73 ],\n    maja: 89,\n    boogie: 108,\n  },\n  {\n    title: \"2020-06-05 2\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 14, 15, 16, 24, 27, 29, 31, 34, 38, 40, 41, 43, 45, 48, 49, 51, 54, 56, 60, 63, 69, 70, 71, 73 ],\n    maja: 97,\n    boogie: 85,\n  },\n  {\n    title: \"2020-06-05 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 25, 27, 29, 31, 34, 37, 40, 41, 43, 48, 49, 52, 55, 57, 59, 62, 65, 68, 69, 71, 73 ],\n    maja: 93,\n    george: 124,\n  },\n  {\n    title: \"2020-06-05 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 14, 16, 19, 26, 27, 29, 31, 34, 36, 40, 41, 46, 48, 51, 52, 55, 57, 59, 61, 62, 64, 65, 68, 71 ],\n    maja: 86,\n    george: 150,\n  },\n  {\n    title: \"2020-06-05 5\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 13, 15, 20, 26, 27, 31, 32, 34, 36, 39, 41, 44, 46, 51, 52, 54, 56, 59, 61, 62, 63, 65, 69, 71 ],\n    maja: 95,\n    ada: 90,\n  },\n  // 20200608\n  {\n    title: \"2020-06-08 1\",\n    data: [ 3, 4, 5 ],\n    maja: 88,\n    george: 83,\n  },\n  {\n    title: \"2020-06-08 2\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 27, 31, 32, 34, 36, 38, 41, 43, 48, 49, 52, 55, 57, 59, 61, 62, 63, 64, 66, 69 ],\n    maja: 90,\n    george: 117,\n  },\n  {\n    title: \"2020-06-08 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 26, 31, 32, 34, 36, 38, 41, 43, 48, 49, 51, 55, 57, 59, 61, 62, 63, 64, 66, 69, 70 ],\n    maja: 97,\n    mala: 98,\n  },\n  {\n    title: \"2020-06-08 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 12, 16, 17, 20, 24, 25, 31, 33, 34, 36, 38, 41, 46, 48, 49, 52, 55, 57, 59, 60, 63, 64, 65, 66, 70 ],\n    maja: 105,\n    mala: 133,\n  },\n  {\n    title: \"2020-06-08 5\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 16, 17, 20, 25, 27, 30, 33, 34, 37, 38, 41, 45, 48, 50, 51, 55, 57, 59, 60, 63, 65, 66, 70, 72 ],\n    maja: 107,\n    boogie: 88,\n  },\n  {\n    title: \"2020-06-08 6\",\n    data: [ 3, 4, 5, 8, 10, 11, 13, 14, 16, 21, 25, 27, 30, 33, 34, 36, 37, 38, 43, 48, 51, 52, 55, 56, 59, 62, 63, 65, 70, 71, 72 ],\n    maja: 105,\n    boogie: 129,\n  },\n  // 20200609\n  {\n    title: \"2020-06-09 1\",\n    data: [ 3, 4, 5, 8, 10, 11, 12, 14, 15, 16, 19, 21, 25, 28, 30, 31, 35, 37, 39, 40, 43, 48, 51, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n    maja: 82,\n    mala: 0,\n  },\n  {\n    title: \"2020-06-09 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 12, 14, 16, 19, 24, 28, 29, 30, 35, 39, 40, 41, 45, 48, 50, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n    maja: 89,\n    george: 153,\n  },\n  {\n    title: \"2020-06-09 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 13, 14, 16, 19, 25, 26, 30, 33, 35, 37, 40, 41, 45, 48, 50, 51, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n    maja: 109,\n    boogie: 94,\n  },\n  // 20200611\n  {\n    title: \"2020-06-11 1\",\n    data: [ 1, 3, 5, 7, 10, 11, 13, 15, 16, 20, 24, 25, 30, 32, 35, 36, 37, 39, 44, 48, 50, 51, 54, 56, 59, 60, 62, 63, 65, 70, 72 ],\n    maja: 140,\n    george: 119, // 114 / 124 AW\n  },\n  {\n    title: \"2020-06-11 2\",\n    data: [ 1, 3, 5, 7, 9,  10, 11, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 46, 48, 49, 52, 54, 56, 59, 61, 62, 63, 69, 70, 71 ],\n    maja: 97,\n    mala: 116, // 107 / 125 AW\n  },\n  {\n    title: \"2020-06-11 3\",\n    data: [ 1, 3, 5, 7, 10, 11, 12, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 45, 48, 50, 52, 54, 56, 59, 61, 63, 64, 66, 70, 71 ],\n    maja: 87,\n    boogie: 113, // 105 / 122 AW\n  },\n  {\n    title: \"2020-06-11 4\",\n    data: [ 1, 3, 5, 7, 10, 12, 14, 15, 16, 20, 24, 27, 30, 33, 35, 36, 38, 39, 45, 48, 50, 51, 54, 55, 59, 61, 63, 64, 66, 70, 71 ],\n    maja: 117,\n    boogie: 87,\n  },\n  // 20200612\n  {\n    title: \"2020-06-12 1\",\n    data: [ 1, 3, 4, 7, 10, 12, 14, 15, 16, 20, 24, 25, 30, 34, 35, 36, 37, 39, 43, 49, 50, 51, 52, 54, 57, 59, 62, 63, 69, 70, 71, 73 ],\n    maja: 106,\n    george: 106, // 113/99aw\n  },\n  {\n    title: \"2020-06-12 2\",\n    data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 37, 38, 39, 43, 44, 50, 51, 52, 54, 57, 59, 61, 62, 63, 71, 73 ],\n    maja: 125,\n    george: 125,\n  },\n  {\n    title: \"2020-06-12 3\",\n    data: [ 1, 3, 5, 7, 9,  11, 12, 15, 16, 21, 24, 26, 30, 34, 35, 37, 39, 40, 43, 48, 49, 51, 56, 57, 59, 61, 62, 68, 69, 71, 73 ],\n    maja: 124,\n    boogie: 154,\n  },\n  {\n    title: \"2020-06-12 4\",\n    data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 21, 26, 27, 30, 34, 35, 37, 39, 40, 44, 48, 49, 51, 56, 57, 59, 61, 66, 68, 71, 72, 73 ],\n    maja: 88,\n    boogie: 97,\n  },\n  // 20200615\n  {\n    title: \"2020-06-15 1\",\n    data: [ 1, 3, 5, 8, 9,  11, 13, 14, 16, 21, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 51, 55, 57, 59, 61, 66, 68, 69, 70, 71 ],\n    maja: 80,\n    george: 176, // 174/178aw\n  },\n  {\n    title: \"2020-06-15 2\",\n    data: [ 1, 3, 4, 8, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 52, 55, 56, 59, 61, 64, 66, 68, 70, 71 ],\n    maja: 84,\n    george: 140, // 147/133aw\n  },\n  {\n    title: \"2020-06-15 3\",\n    data: [ 1, 3, 5, 9, 10, 11, 12, 14, 16, 21, 26, 28, 30, 33, 35, 38, 39, 40, 43, 44, 48, 50, 51, 55, 57, 59, 61, 66, 68, 71, 72, 73 ],\n    maja: 87,\n    boogie: 139,\n  },\n  {\n    title: \"2020-06-15 4\",\n    data: [ 1, 3, 5, 7, 9, 11, 12, 13, 14, 21, 26, 28, 30, 34, 35, 38, 39, 40, 43, 45, 48, 50, 51, 55, 57, 59, 61, 63, 66, 71, 72, 73 ],\n    maja: 70,\n    boogie: 126,\n  },\n  // {\n  //   title: \"2020-06-15 5\",\n  //   data: [],\n  // },\n  // {\n  //   title: \"2020-06-15 6\",\n  //   data: [],\n  // },\n  // 20200616\n  {\n    title: \"2020-06-16 1\",\n    data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 26, 28, 32, 34, 35, 36, 39, 41, 43, 46, 49, 50, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n    maja: 102,\n    boogie: 124, // 124 / AW\n  },\n  {\n    title: \"2020-06-16 2\",\n    data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 37, 39, 41, 43, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n    maja: 85,\n    boogie: 123,\n  },\n  // {\n  //   title: \"2020-06-16 3\",\n  //   data: [],\n  // },\n  // 20200618\n  {\n    title: \"2020-06-18 1\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n    maja: 89,\n    boogie: 155,\n  },\n  {\n    title: \"2020-06-18 2\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 30, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n    maja: 115,\n    boogie: 130,\n  },\n  {\n    title: \"2020-06-18 3\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 25, 26, 32, 34, 35, 36, 40, 41, 43, 45, 49, 51, 52, 56, 57, 59, 60, 62, 64, 65, 68, 70 ],\n    maja: 116,\n    george: 157,\n  },\n  {\n    title: \"2020-06-18 4\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 17, 21, 25, 26, 30, 34, 35, 36, 40, 41, 43, 46, 49, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 107,\n    ada: 97,\n  },\n  {\n    title: \"2020-06-18 5\",\n    data: [ 3, 5, 9, 10, 11, 13, 16, 17, 21, 26, 27, 32, 34, 35, 36, 40, 41, 43, 44, 50, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 108,\n    ada: 120,\n  },\n  // {\n  //   title: \"2020-06-18 6\",\n  //   data: [],\n  // },\n  // 20200619\n  {\n    title: \"2020-06-19 1\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 24, 27, 32, 34, 35, 36, 38, 41, 43, 44, 49, 50, 52, 55, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 73,\n    boogie: 66,\n  },\n  {\n    title: \"2020-06-19 2\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 27, 28, 31, 32, 34, 36, 38, 41, 43, 44, 49, 50, 52, 54, 55, 59, 60, 61, 64, 65, 68, 71 ],\n    maja: 109,\n    boogie: 91,\n  },\n  {\n    title: \"2020-06-19 3\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 30, 34, 36, 40, 41, 43, 44, 49, 50, 51, 56, 57, 59, 60, 61, 64, 65, 68, 71 ], // 20?\n    maja: 76,\n    george: 144,\n  },\n  {\n    title: \"2020-06-19 4\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 34, 35, 36, 37, 38, 43, 44, 49, 51, 52, 55, 57, 59, 60, 61, 62, 64, 68, 70 ],\n    maja: 118,\n    ada: 97,\n  },\n  // 20200622\n  {\n    title: \"2020-06-22 1\",\n    data: [ 1, 3, 4, 7, 8, 11, 12, 13, 16, 20, 27, 28, 31, 34, 35, 37, 39, 40, 44, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 89,\n    ada: 72,\n  },\n  {\n    title: \"2020-06-22 2\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 27, 28, 29, 34, 35, 37, 39, 40, 43, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 84,\n    ada: 92,\n  },\n  {\n    title: \"2020-06-22 3\",\n    data: [ 1, 3, 4, 8, 9, 11, 13, 14, 16, 20, 26, 28, 30, 34, 35, 37, 39, 40, 43, 46, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 86,\n    george: 90,\n  },\n  {\n    title: \"2020-06-22 4\",\n    data: [ 1, 2, 4, 8, 9, 11, 12, 14, 17, 20, 25, 28, 30, 33, 35, 37, 39, 40, 45, 46, 48, 51, 52, 55, 56, 59, 60, 64, 68, 70, 71, 73 ],\n    maja: 86,\n    george: 85,\n  },\n];\n"],"sourceRoot":""}