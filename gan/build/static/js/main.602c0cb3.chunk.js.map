{"version":3,"sources":["store/aggregates.js","store/layout.js","store/training.js","data/tracks.js","store/size.js","store/graph.js","store/ids.js","utils.js","store/iterations.js","ui/components.js","ui/colors.js","ui/Header.js","formatters.js","ui/pages/Archive.js","store/iterationIndex.js","store/iteration.js","ui/Heartrate.js","ui/Sidebar.js","store/phase.js","ui/pages/Phase1.js","store/model.js","store/progress.js","ui/Generator.js","ui/Train.js","ui/pages/Phase2.js","ui/pages/Phase3.js","ui/Preview.js","ui/pages/Phase4.js","ui/pages/Main.js","ui/pages/Map.js","ui/Redesign.js","index.js","data/iterations.js","data/layout.js"],"names":["setAggregates","createEvent","aggregates$","restore","fetchAggregates","createEffect","use","fetch","done","watch","a","params","result","json","aggregates","setTimeout","setLayout","layout$","setTraining","training$","horizontalTracks","verticalTracks","setSize","size$","linksGraph$","combine","layout","size","graph","Graph","allowSelfLoops","edgeKeyGenerator","undirected","source","target","attributes","multi","type","id","i","fromIndex","addNode","nodeEntries","x","j","toIndex","y","z","hasNode","addEdge","clusters$","linksGraph","idClusters","clusterIds","traverseNode","getNodeAttributes","process","hasEdge","push","nodes","clusterIds$","map","clusters","key","sort","idClusters$","ids$","item","xy","Math","floor","generateIteration","p","getState","ids","id2index","Object","fromEntries","keys","index","horizontalSteps","s","e","steps","verticalSteps","pick","random","length","addPending","floorTiles","pending","indexOf","k","iteration","floorIndex","n","row","round","is","filter","b","iterationToLayout","join","xs","ys","setHardcodedIterations","hardcodedIterations$","fetchIterations","then","response","finally","fetchedIterations$","hardcodedIterations","fetchedIterationsResponse","currentAggregate","fetchedIterations","iterations","all","valid","timestamp","aggregate","iterationLayout","data","nextAaggregate","find","Date","start","rate","maja","dog","majaAvgBpm","dogAvgBpm","majaBpms","dogBpms","undefined","devices","bpm","entries","rates","george","boogie","mala","ada","NaN","reduce","memo","heartRateDog","extractBpms","delta","abs","actualRank","Number","isFinite","trainable","isNaN","output","Array","from","_","combined","setIterations","iterations$","Image","styled","img","Navigation","div","NavItem","NavLink","Title","h3","Label","Value","human","Panel","Table","Button","button","HR","to","exact","formatBpm","formatRank","rank","saveIteration","diff","payload","_id","console","log","method","headers","body","JSON","stringify","HorizontalPreview","value","useStore","ref","useRef","useEffect","current","p5","W","H","setup","createCanvas","CANVAS","noLoop","textSize","textAlign","CENTER","draw","pos","posX","posY","c","fill","rect","text","TILE_SIZE","sketch","remove","Styles","Grid","rankColor","d3","interpolator","domain","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","renderRank","targetRank","style","backgroundColor","format","useState","setValid","useMemo","Header","accessor","Cell","original","checked","disabled","onChange","date","expectedRank","trainableData","setIterationIndex","iterationIndex$","iteration$","iterationIndex","previousIteration$","Heart","ecg","options","adDuration","vdDuration","vrDuration","this","beatDuration","nextBeat","nextBeatIn","voltage","addValue","time","randomGaussian","sin","setVoltage","noise","splice","drawBPM","getBpm","updateBPM","updateTimeToNextBeat","atriaDepolarization","ventricleDepolarization","ventricleRepolarization","draw_i","ECG","color","graphZero","values","maxValuesHistory","maximumX","alpha","stroke","line","circle","v","pop","updateDate","updateBloodPressure","updateVentilation","updateTemperature","updateHemoglobin","training","bpmValid","heart","WEBGL","colorMode","RGB","angleMode","DEGREES","translate","beat","plotValues","updateInfo","Container","majaBpm","dogBpm","bpms","end","Heartrate","gridColumn","alignItems","fontSize","setPhase","phase$","previousMaja","previousDog","width","height","margin","top","right","bottom","left","strokeDasharray","yAxisId","dataKey","connectNulls","isAnimationActive","tickFormatter","unit","orientation","labelFormatter","formatter","model$","model","tf","layers","conv2d","batchInputShape","kernelSize","filters","strides","activation","kernelInitializer","flatten","dense","units","compile","loss","metrics","optimizer","adam","setProgress","progress$","setAttempts","attempts$","setRank","rank$","now","title","toISOString","ranks","ranges","animationCompleted","l","tries","progress","loop","animationCompletedPromise","Promise","resolve","reject","number","max","predict","preds","argMax","argMax1","dispose","fail","error","previousRank","layoutCount","progressIndex","posZ","OUTPUT_TILE_SIZE","LEFT","redraw","getAccumulator","accumulators","callback","metric","validIterations","setTrainStats","trainStats$","train","historyOpts","fit","epochs","shuffle","callbacks","onEpochEnd","args","callbackName","xLabel","metricLogs","presentMetrics","accumulator","onClick","stats","tfvis","history","attempts","Generator","frameRate","clear","ambientLight","rotateX","rotateY","mouseX","PI","plane","edgeEntries","t","sp","tp","strokeWeight","href","Preview","Train","Section","section","PhaseTitle","phase","areas","gap","Phase","as","Main","main","Sidebar","Phase4","Phase3","Phase2","Phase1","src","basename","path","Archive","Map","props","split","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.602c0cb3.chunk.js","sourcesContent":["import { createEffect, createEvent, restore } from \"effector\";\n\nconst setAggregates = createEvent();\nexport const aggregates$ = restore(setAggregates, null);\n\nconst fetchAggregates = createEffect();\nfetchAggregates.use(() => fetch(\"https://heartrate.miran248.now.sh/api/aggregates\"));\nfetchAggregates.done.watch(async({ params, result }) => {\n  const { aggregates } = await result.json();\n\n  setAggregates(aggregates);\n\n  setTimeout(() => fetchAggregates(), 30000);\n});\n\nfetchAggregates();\n","import { createEvent, restore } from \"effector\";\n\nexport const setLayout = createEvent();\nexport const layout$ = restore(setLayout, null);\n","import { createEvent, restore } from \"effector\";\n\nexport const setTraining = createEvent();\nexport const training$ = restore(setTraining, false);\n","export const horizontalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  [\n    [ 1, 1, 1 ], // fixed\n\n    [ 1, 2, 3 ],\n    [ 1, 4, 5 ],\n  ],\n  // 2. floor\n  [\n    // [ 1, 0, 6 ], // empty\n\n    [ 2, 7, 10 ],\n\n    [ 4, 11, 17 ],\n\n    // [ 1, 0, 18 ], // empty\n    // [ 1, 0, 19 ],\n    // [ 1, 0, 20 ],\n    // [ 1, 0, 21 ],\n    [ 1, 19, 21 ],\n\n    // [ 1, 0, 22 ], // empty\n  ],\n  // 3. floor\n  [\n    // [ 1, 0, 23 ], // empty\n\n    [ 2, 24, 28 ],\n\n    [ 3, 29, 35 ],\n\n    [ 3, 36, 41 ],\n\n    // [ 1, 0, 42 ], // empty\n  ],\n  // 4. floor\n  [\n    // [ 2, 43, 47 ],\n    [ 2, 43, 46 ], // 47 temp empty\n\n    // [ 4, 48, 53 ],\n    [ 3, 48, 52 ], // 53 temp empty\n\n    // [ 2, 54, 58 ],\n    [ 2, 54, 57 ], // 58 temp empty\n\n    [ 1, 59, 59 ], // fixed\n  ],\n  // 5. floor\n  null,\n];\n\nexport const verticalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  null,\n  // 2. floor\n  null,\n  // 3. floor\n  null,\n  // 4. floor\n  null,\n  // 5. floor\n  [\n    [ 1, 63, 68 ],\n\n    [ 1, 64, 72 ],\n\n    [ 2, 61, 73 ],\n\n    [ 2, 60, 71 ],\n  ],\n];\n","import { createEvent, restore } from \"effector\";\n\nexport const setSize = createEvent();\nexport const size$ = restore(setSize, null);\n","import { combine } from \"effector\";\nimport Graph from \"graphology\";\n\nimport { layout$ } from \"./layout\";\nimport { size$ } from \"./size\";\n\nimport { fromIndex, toIndex } from \"../utils\";\n\n// all possible links / paths, ignoring clusters and floors\nexport const linksGraph$ = combine(layout$, size$, (layout, size) => {\n  if(layout === null || size === null)\n    return null;\n\n  const graph = new Graph({\n    allowSelfLoops: false,\n    edgeKeyGenerator: ({ undirected, source, target, attributes }) => `${source}->${target}`,\n    multi: true,\n    type: \"directed\",\n  });\n\n  let id = 0;\n  for(let i in layout) {\n    if(layout[i] === 0)\n      continue;\n\n    const attributes = {\n      ...fromIndex(size, i),\n      i,\n      id: ++id,\n    };\n\n    graph.addNode(i, attributes);\n  }\n\n  for(let [ i, a ] of graph.nodeEntries()) {\n    // right\n    if(a.x < size.x - 1) {\n      const j = toIndex(size, a.x + 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 1, y: 0, z: 0 });\n    }\n    // down\n    if(a.y < size.y - 1) {\n      const j = toIndex(size, a.x, a.y + 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: 1, z: 0 });\n    }\n    // // left\n    if(a.x > 0) {\n      const j = toIndex(size, a.x - 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: -1, y: 0, z: 0 });\n    }\n    // up\n    if(a.y > 0) {\n      const j = toIndex(size, a.x, a.y - 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: -1, z: 0 });\n    }\n\n    // next floor\n    if(a.z < size.z - 1) {\n      // right\n      if(a.x < size.x - 1) {\n        const j = toIndex(size, a.x + 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 1, y: 0, z: 1 });\n      }\n      // down\n      if(a.y < size.y - 1) {\n        const j = toIndex(size, a.x, a.y + 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: 1, z: 1 });\n      }\n      // left\n      if(a.x > 0) {\n        const j = toIndex(size, a.x - 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: -1, y: 0, z: 1 });\n      }\n      // up\n      if(a.y > 0) {\n        const j = toIndex(size, a.x, a.y - 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: -1, z: 1 });\n      }\n    }\n  }\n\n  return graph;\n});\n\n// group neighbors (on the same floor) into clusters\nconst clusters$ = combine(linksGraph$, size$, (linksGraph, size) => {\n  if(linksGraph === null || size === null)\n    return null;\n\n  let id = 0;\n  const idClusters = {};\n  const clusterIds = {};\n\n  const traverseNode = (i) => {\n    const a = linksGraph.getNodeAttributes(i);\n    // right\n    if(a.x < size.x - 1)\n      process(i, toIndex(size, a.x + 1, a.y, a.z));\n    // down\n    if(a.y < size.y - 1)\n      process(i, toIndex(size, a.x, a.y + 1, a.z));\n    // left\n    if(a.x > 0)\n      process(i, toIndex(size, a.x - 1, a.y, a.z));\n    // up\n    if(a.y > 0)\n      process(i, toIndex(size, a.x, a.y - 1, a.z));\n  };\n\n  const process = (i, j) => {\n    if(i in idClusters && j in idClusters)\n      return;\n\n    if(linksGraph.hasNode(j) && linksGraph.hasEdge(i, j)) {\n      if(!(i in idClusters)) {\n        idClusters[i] = ++id;\n        clusterIds[idClusters[i]] = [ +i ];\n      }\n\n      if(!(j in idClusters)) {\n        idClusters[j] = idClusters[i];\n        clusterIds[idClusters[j]].push(+j);\n      }\n\n      traverseNode(j);\n    }\n  };\n\n  for(let i of linksGraph.nodes())\n    traverseNode(+i);\n\n  return [ clusterIds, idClusters ];\n});\nexport const clusterIds$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ clusterIds, _ ] = clusters;\n\n  for(let key in clusterIds)\n    clusterIds[key].sort();\n\n  return clusterIds;\n});\nexport const idClusters$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ _, idClusters ] = clusters;\n\n  return idClusters;\n});\n","import { layout$ } from \"./layout\";\n\nexport const ids$ = layout$.map((layout) => {\n  if(!layout)\n    return null;\n\n  let id = 0;\n\n  return layout.map((item) => item === 0 ? 0 : ++id);\n});\n","import { horizontalTracks, verticalTracks } from \"./data/tracks\";\nimport { clusterIds$, idClusters$, linksGraph$ } from \"./store/graph\";\nimport { ids$ } from \"./store/ids\";\nimport { size$ } from \"./store/size\";\n\nexport function inside(p, [ x, y, w, h ]) {\n  return p.mouseX > x && p.mouseX < x + w && p.mouseY > y && p.mouseY < y + h;\n}\n\nexport function fromIndex(size, i) {\n  const xy = size.x * size.y;\n  const z = Math.floor(i / xy);\n\n  i -= z * xy;\n  const y = Math.floor(i / size.x);\n  const x = i - y * size.x;\n\n  return { x, y, z };\n}\nexport function toIndex(size, x, y, z) {\n  return z * size.x * size.y + y * size.x + x;\n}\n\nexport const generateIteration = (p) => {\n  const clusterIds = clusterIds$.getState();\n  const idClusters = idClusters$.getState();\n  const linksGraph = linksGraph$.getState();\n  const ids = ids$.getState();\n  const size = size$.getState();\n\n  const id2index = Object.fromEntries(Object.keys(idClusters).map((index) => [ ids[index], index ]));\n  // const edges = Array.from(linksGraph.edgeEntries());\n\n  // console.log(\"clusterIds\", clusterIds);\n  // console.log(\"idClusters\", idClusters);\n  // // console.log(\"linksGraph\", edges.filter(([ k, ka, s ]) => s == 19)); // ids[+s] === 1));\n  // console.log(\"ids\", ids);\n\n  const horizontalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x + 1, a.y, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n  const verticalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x, a.y + 1, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n\n  const pick = (steps) => steps[Math.floor(Math.random() * steps.length)];\n\n  const addPending = (i, a, floorTiles, pending) => {\n    if(a.x < 0 || a.y < 0 || a.x >= size.x || a.y >= size.y)\n      return;\n\n    const j = toIndex(size, a.x, a.y, a.z);\n    if(!linksGraph.hasEdge(i, j) || floorTiles.indexOf(ids[j]) < 0) {\n      const k = toIndex(size, a.x, a.y, a.z + 1);\n      if(linksGraph.hasEdge(i, k) && pending.indexOf(ids[k]) < 0)\n        pending.push(ids[k]);\n    }\n  };\n\n  let iteration = [];\n  let pending = [];\n\n  for(let floorIndex = 0; floorIndex < 5; ++floorIndex) {\n    const floor = horizontalTracks[floorIndex] || verticalTracks[floorIndex];\n\n    let floorTiles = [];\n\n    for(let [ n, s, e ] of floor) {\n      const steps = s === 0 ? null : horizontalTracks[floorIndex] ? horizontalSteps(s, e) : verticalSteps(s, e);\n      const row = [];\n\n      if(pending.length > 0) {\n        if(s === 0) {\n          const i = pending.indexOf(e);\n          if(i > -1)\n            row.push(e);\n          else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        } else {\n          const is = pending.filter((i) => steps.indexOf(i) > -1);\n          if(is.length > 0) {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(Math.random() < .5)\n                  id = is[Math.floor(Math.random() * is.length)];\n                else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              row.push(id);\n            }\n          } else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        }\n      } else {\n        for(let i = 0; i < n; ++i) {\n          let id = 0;\n\n          do {\n            if(s === 0) {\n              id = [ s, e ][Math.round(Math.random())];\n            } else {\n              id = pick(steps);\n            }\n          } while(row.indexOf(id) > -1);\n\n          if(id > 0)\n            row.push(id);\n        }\n      }\n\n      floorTiles = [ ...floorTiles, ...row ];\n    }\n\n    pending = [];\n\n    for(let id of floorTiles) {\n      const i = id2index[id];\n      const a = linksGraph.getNodeAttributes(i);\n\n      // right\n      addPending(i, { x: a.x + 1, y: a.y, z: a.z }, floorTiles, pending);\n      // down\n      addPending(i, { x: a.x, y: a.y + 1, z: a.z }, floorTiles, pending);\n      // // left\n      addPending(i, { x: a.x - 1, y: a.y, z: a.z }, floorTiles, pending);\n      // up\n      addPending(i, { x: a.x, y: a.y - 1, z: a.z }, floorTiles, pending);\n    }\n\n    // console.log(\"pending\", pending);\n\n    iteration = [ ...iteration, ...floorTiles ];\n  }\n\n  iteration.sort((a, b) => a - b);\n\n  return iteration;\n};\n\nexport const iterationToLayout = (layout, iteration) => {\n  let id = 0;\n\n  return layout.map((item) => {\n    if(item === 0)\n      return 0;\n\n    return iteration.indexOf(++id) > -1 ? 1 : 0;\n  });\n};\n\nexport const join = (xs, ys) => xs.map((x, i) => x + ys[i]);\n","import { combine, createEffect, createEvent, restore } from \"effector\";\n\nimport { aggregates$ } from \"./aggregates\";\nimport { layout$ } from \"./layout\";\nimport { setTraining } from \"./training\";\n\nimport { iterationToLayout, join } from \"../utils\";\n\nconst heartRateDog = (iteration) => {\n  const rates = [];\n\n  if(\"dog\" in iteration)\n    rates.push(iteration.dog);\n  if(\"george\" in iteration)\n    rates.push(iteration.george);\n  if(\"boogie\" in iteration)\n    rates.push(iteration.boogie);\n  if(\"mala\" in iteration)\n    rates.push(iteration.mala);\n  if(\"ada\" in iteration)\n    rates.push(iteration.ada);\n\n  const n = rates.length;\n\n  if(n === 0)\n    return NaN;\n\n  return rates.reduce((memo, rate) => memo + rate, 0) / n;\n};\n// TODO: Move to utils\nconst heartRateDeltaRank = (rate) => {\n  if(rate < 5)\n    return 0; // [ 0, 5 )\n\n  if(rate < 10)\n    return 1; // [ 5, 10 )\n\n  if(rate < 20)\n    return 2; // [ 10, 20 )\n\n  if(rate < 40)\n    return 3; // [ 20, 40 )\n\n  return 4; // [ 40, inf )\n};\n\n// TODO: Fix me!\nconst extractBpms = (iteration, aggregate) => {\n  let maja, dog;\n  let majaAvgBpm, dogAvgBpm;\n  let majaBpms = null, dogBpms = null;\n\n  if(aggregate !== undefined && \"_id\" in iteration) {\n    const { devices } = aggregate;\n\n    maja = devices[\"Maja’s iPhone\"];\n    dog = devices[\"Ada’s iPhone\"];\n\n    if(maja && dog) {\n      maja = maja[Object.keys(maja)[0]];\n      dog = dog[Object.keys(dog)[0]];\n    } else if(maja) {\n      const keys = Object.keys(maja);\n\n      if(keys.length >= 2) {\n        const s = maja;\n        maja = s[keys[0]];\n        dog = s[keys[1]];\n      }\n    } else if(dog) {\n      const keys = Object.keys(dog);\n\n      if(keys.length >= 2) {\n        const s = dog;\n        maja = s[keys[0]];\n        dog = s[keys[1]];\n      }\n    }\n\n    majaAvgBpm = maja.bpm;\n    dogAvgBpm = dog.bpm;\n    majaBpms = maja.entries;\n    dogBpms = dog.entries;\n  } else {\n    majaAvgBpm = iteration.maja;\n    dogAvgBpm = heartRateDog(iteration);\n  }\n\n  return [ majaAvgBpm, dogAvgBpm, majaBpms, dogBpms ];\n};\n\nexport const setHardcodedIterations = createEvent();\nexport const hardcodedIterations$ = restore(setHardcodedIterations, null);\n\nexport const fetchIterations = createEffect();\nfetchIterations.use(\n  () => fetch(\"https://heartrate.miran248.now.sh/api/iterations\").then(\n    (response) => response.json()\n  )\n);\nfetchIterations.finally.watch(() => {\n  setTraining(false);\n});\nfetchIterations();\n\nconst fetchedIterations$ = restore(fetchIterations.done, null);\n\ncombine(layout$, hardcodedIterations$, fetchedIterations$, aggregates$, (layout, hardcodedIterations, fetchedIterationsResponse, aggregates) => {\n  if(layout === null || hardcodedIterations === null || fetchedIterationsResponse === null || aggregates === null)\n    return;\n\n  const { result: { iterations: fetchedIterations } } = fetchedIterationsResponse;\n  \n  const all = [\n    ...hardcodedIterations,\n    ...fetchedIterations.map((iteration) => ({\n      ...iteration,\n      valid: \"valid\" in iteration ? iteration.valid : true,\n    })),\n  ];\n\n  all.sort((a, b) => a.timestamp - b.timestamp);\n\n  let currentAggregate;\n    \n  const iterations = all.map(\n    (iteration) => {\n      const iterationLayout = iterationToLayout(layout, iteration.data);\n\n      let aggregate;\n      if(iteration.valid) {\n        const nextAaggregate = aggregates.find(\n          (aggregate) => +new Date(aggregate.start) >= iteration.timestamp\n        );\n\n        if(currentAggregate !== nextAaggregate) {\n          aggregate = currentAggregate = nextAaggregate;\n        }\n      }\n      // iteration.aggregate = aggregate;\n\n      const [ majaAvgBpm, dogAvgBpm, majaBpms, dogBpms ] = extractBpms(iteration, aggregate);\n\n      // const payload = {\n      //   _id: iteration._id,\n      //   title: iteration.title,\n      //   data: iteration.data,\n      //   expectedRank: iteration.expectedRank,\n      //   timestamp: iteration.timestamp,\n      //   iterationKey: iteration.iterationKey,\n      //   // majaAvgBpm,\n      //   // dogAvgBpm,\n      //   aggregate: iteration.aggregate,\n      // };\n\n      // await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify(payload),\n      // });\n\n      const delta = Math.abs(majaAvgBpm - dogAvgBpm);\n      const actualRank = Number.isFinite(delta) ? heartRateDeltaRank(delta) : NaN;\n      const trainable = iteration.valid && isNaN(actualRank) === false;\n      const output = trainable\n        ? Array.from(Array(5), (_, i) => i === actualRank ? 1 : 0)\n        : null;\n\n      const result = {\n        ...iteration,\n        actualRank,\n        combined: join(layout, iterationLayout),\n        delta,\n        dog: dogAvgBpm,\n        dogBpms,\n        layout: iterationLayout,\n        maja: majaAvgBpm,\n        majaBpms,\n        output,\n        trainable,\n      };\n\n      // console.log(iteration, result)\n      \n      return result;\n    }\n  );\n\n  iterations.sort((a, b) => b.timestamp - a.timestamp);\n\n  setIterations(iterations);\n});\n\nconst setIterations = createEvent();\nexport const iterations$ = restore(setIterations, null);\n","import {\n  NavLink\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport * as colors from \"./colors\";\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n`;\n\n\nexport const Navigation = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-auto-rows: 69px;\n  grid-gap: 21.5px;\n  grid-template-columns: repeat(3, 419px);\n  padding-left: 17px;\n  padding-right: 17px;\n`;\nexport const NavItem = styled(NavLink)`\n  border-bottom: 5px solid ${colors.navigation};\n  color: ${colors.navigation};\n  display: grid;\n  font-size: 25px;\n  place-items: center;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  &.active {\n    border-bottom: 5px solid ${colors.label};\n    color: ${colors.label};\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${colors.title};\n  display: grid !important;\n  font-size: 25px;\n  // height: 45px;\n  margin: 0;\n  padding: 17px;\n  place-items: center;\n  text-decoration: none;\n  text-transform: uppercase;\n`;\n\nexport const Label = styled.div`\n  align-items: flex-end;\n  color: ${colors.label};\n  display: flex !important;\n  font-size: 25px;\n  line-height: 19px;\n  justify-content: flex-start;\n  text-transform: uppercase;\n`;\nexport const Value = styled.div`\n  align-items: flex-end;\n  color: ${({ human }) => human ? colors.valueHuman : colors.valueAnimal};\n  display: flex !important;\n  font-size: 50px;\n  line-height: 37px;\n  justify-content: flex-end;\n  text-transform: uppercase;\n`;\n\nexport const Panel = styled.div`\n  border: 2px solid ${colors.border};\n  border-radius: 4px;\n  padding-bottom: 17px;\n`;\n\nexport const Table = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  // grid-auto-rows: minmax(51px, 1fr);\n  grid-gap: 17px;\n  grid-template-columns: 2fr 3fr 1fr;\n  padding-left: 17px;\n  padding-right: 17px;\n  padding-top: 17px;\n`;\n\nexport const Button = styled.button`\n  background-color: ${colors.border};\n  border: 2px solid ${colors.navigation};\n  border-radius: 4px;\n  color: ${colors.label};\n  font-size: 25px;\n  padding: 17px;\n  text-transform: uppercase;\n`;\n\nexport const HR = styled.div`\n  border-top: 2px solid ${colors.border};\n`;\n","export const background = \"#0E111F\";\nexport const border = \"#1F222F\";\nexport const label = \"#9F9FA4\";\nexport const navigation = \"#198CB7\";\nexport const chartAnimal = \"#44C1EF\";\nexport const chartHuman = \"#45988E\";\nexport const valueAnimal = \"#E8A38E\";\nexport const valueHuman = \"#ED6E3D\";\nexport const title = \"#FFFFFF\";\n","import React from \"react\";\n\nimport { Navigation, NavItem } from \"./components\";\n\nexport default () => (\n  <header>\n    <Navigation>\n      <NavItem to=\"/\" exact>main</NavItem>\n      <NavItem to=\"/archive\" exact>archive</NavItem>\n      <NavItem to=\"/map\" exact>map</NavItem>\n    </Navigation>\n  </header>\n);\n","import { format } from \"date-fns\";\n\nexport const formatBpm = (bpm) => Number.isFinite(bpm) ? Math.round(bpm) : \"NA\";\nexport const formatRank = (rank) => Number.isFinite(rank) ? rank : \"NA\";\nexport const formatDate = (date) => format(date, \"yyyy-MM-dd HH:mm:ss\");\n","import * as d3 from \"d3\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { Fragment, useEffect, useMemo, useRef, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { ids$ } from \"../../store/ids\";\nimport { fetchIterations, iterations$ } from \"../../store/iterations\";\nimport { size$ } from \"../../store/size\";\nimport { fromIndex } from \"../../utils\";\n\nimport { Panel } from \"../components\";\n\nconst saveIteration = async(id, diff) => {\n  const payload = {\n    _id: id,\n    ...diff,\n  };\n\n  console.log(\"saveIteration\", payload);\n\n  await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  });\n\n  fetchIterations();\n};\n\nconst TILE_SIZE = 12;\nconst sketch = (iteration, size) => (p) => {\n  const ids = ids$.getState();\n\n  // horizontal\n  const W = ((size.x + 1) * size.z - 1) * TILE_SIZE;\n  const H = size.y * TILE_SIZE;\n\n  // vertical\n  // const W = size.x * TILE_SIZE;\n  // const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n  };\n  p.draw = () => {\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    for(let i in iteration) {\n      const pos = fromIndex(size, i);\n\n      // horizontal\n      const posX = pos.x * TILE_SIZE;\n      const posY = pos.y * TILE_SIZE;\n      const posZ = pos.z * (size.x + 1) * TILE_SIZE;\n\n      const x = posX + posZ;\n      const y = posY;\n\n      // vertical\n      // const posX = p.x * TILE_SIZE;\n      // const posY = p.y * TILE_SIZE;\n      // const posZ = p.z * (size.y + 1) * TILE_SIZE;\n\n      // const x = posX;\n      // const y = posY + posZ;\n\n      let c = 255;\n\n      if(iteration[i] === 2)\n        c = 51;\n      else if(iteration[i] === 1)\n        c = 204;\n\n      p.fill(c);\n      p.rect(x, y, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, x + TILE_SIZE * .5, y + TILE_SIZE * .5);\n      if(ids[i] > 0)\n        p.text(ids[i], x + TILE_SIZE * .5, y + TILE_SIZE * .5);\n    }\n  };\n};\nconst HorizontalPreview = ({ value: layout }) => {\n  const size = useStore(size$);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null)\n      return;\n\n    const p = new p5(sketch(layout, size), ref.current);\n\n    return p.remove;\n  }, [ ref.current ]);\n\n  return (\n    <div ref={ref} />\n  );\n};\n\nconst Styles = styled.div`\n  display: grid;\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nconst Grid = styled.div`\n  // border: 1px solid #000000;\n  color: #000000;\n  display: grid;\n  grid-auto-columns: 8ch;\n  grid-auto-flow: column;\n  grid-gap: 1ch;\n  grid-template-rows: repeat(5, 8ch);\n  overflow-x: auto;\n\n  * {\n    border: 1px solid #000000;\n    display: grid;\n    place-items: center;\n  }\n`;\n\nvar rankColor = d3.scaleSequential()\n      .interpolator(d3.scaleOrdinal(d3.schemePastel1))\n      .domain([ 0, 4 ]);\n\nconst Table = ({ columns, data }) => {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nconst renderRank = (targetRank, { actualRank, timestamp }) => actualRank === targetRank\n  ? (<div style={{ backgroundColor: rankColor(actualRank) }}>{format(timestamp, \"MM/dd\")}<br />{format(timestamp, \"HH:mm\")}</div>)\n  : (<div />);\nexport default () => {\n  const iterations = useStore(iterations$);\n\n  const [ valid, setValid ] = useState(false);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"valid\",\n        accessor: \"valid\",\n        Cell: ({ row: { original }, value }) => (\n          <input type=\"checkbox\"\n                 checked={value}\n                 disabled={!(\"_id\" in original)}\n                 onChange={() => saveIteration(original._id, { valid: !value })}\n                 />\n        ),\n      },\n      {\n        Header: \"date\",\n        accessor: ({ timestamp }) => formatDate(timestamp),\n      },\n      {\n        Header: \"layout\",\n        accessor: \"combined\",\n        Cell: HorizontalPreview,\n      },\n      {\n        Header: \"maja bpm\",\n        accessor: ({ maja }) => formatBpm(maja),\n      },\n      {\n        Header: \"dog bpm\",\n        accessor: ({ dog }) => formatBpm(dog),\n      },\n      {\n        Header: \"delta bpm\",\n        accessor: ({ delta }) => formatBpm(delta),\n      },\n      {\n        Header: \"class\",\n        accessor: ({ actualRank }) => formatRank(actualRank),\n      },\n      {\n        Header: \"match\",\n        accessor: ({ expectedRank, actualRank }) => expectedRank === actualRank,\n        Cell: ({ value }) => (\n          <input type=\"checkbox\"\n                 checked={value}\n                 disabled />\n        ),\n      },\n      {\n        Header: \"trainable\",\n        accessor: \"trainable\",\n        Cell: ({ value }) => (\n          <input type=\"checkbox\"\n                 checked={value}\n                 disabled />\n        ),\n      },\n    ],\n    []\n  );\n\n  const data = iterations && iterations.filter(\n    (iteration) => valid === false || iteration.valid\n  ) || [];\n\n  const trainableData = iterations && iterations.filter(\n    (iteration) => iteration.trainable\n  ) || [];\n  trainableData.sort(\n    (a, b) => a.timestamp - b.timestamp\n  );\n\n  return (\n    <Styles>\n      {/* <Panel> */}\n        <Grid>\n          <b>4</b>\n          <b>3</b>\n          <b>2</b>\n          <b>1</b>\n          <b>0</b>\n          {trainableData.map(\n            (iteration, i) => (\n              <Fragment key={i}>\n                {renderRank(4, iteration)}\n                {renderRank(3, iteration)}\n                {renderRank(2, iteration)}\n                {renderRank(1, iteration)}\n                {renderRank(0, iteration)}\n              </Fragment>\n            )\n          )}\n        </Grid>\n      {/* </Panel> */}\n      {/* <HeatMap data={trainableData} /> */}\n\n      {/* <Panel> */}\n        <label><input type=\"checkbox\" checked={valid} onChange={() => setValid(!valid)} /> valid only</label>\n        <Table columns={columns} data={data} />\n      {/* </Panel> */}\n    </Styles>\n  );\n};\n","import { createEvent, restore } from \"effector\";\n\nexport const setIterationIndex = createEvent();\nexport const iterationIndex$ = restore(setIterationIndex, 0);\n","import { combine } from \"effector\";\n\nimport { iterationIndex$ } from \"./iterationIndex\";\nimport { iterations$ } from \"./iterations\";\n\nexport const iteration$ = combine(iterationIndex$, iterations$, (iterationIndex, iterations) => {\n  if(iterationIndex < 0 || iterations === null)\n    return null;\n\n  // return iterations[iterationIndex];\n  return iterations.filter(\n    (iteration) => iteration.valid\n  )[iterationIndex] || null;\n});\n\nexport const previousIteration$ = combine(iterationIndex$, iterations$, (iterationIndex, iterations) => {\n  if(iterationIndex < 0 || iterations === null)\n    return null;\n\n  // return iterations[iterationIndex];\n  return iterations.filter(\n    (iteration) => iteration.valid\n  )[iterationIndex + 1] || null;\n});\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useMemo, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../formatters\";\nimport { training$ } from \"../store/training\";\n\nimport * as colors from \"./colors\";\n\n/**\n * A Heart object will beat, and generate voltage values according to the time\n * the beat started\n *\n * \"Duration\" values are really pixels. 1 pixel represents 1/60 of a second.\n */\nclass Heart {\n  /**\n   * Creates an instance of Heart\n   * @param {number} adDuration Duration in pixels of the atria depolarization\n   * @param {number} vdDuration Duration in pixels of the ventricle depolarization\n   * @param {number} vrDuration Duration in pixels of the ventricle repolarization\n   *\n   * @property {number} this.beatDuration Duration in pixels of the whole beat\n   * @property {number} this.nextBeat Time between last beat, and next beat\n   * @property {number} this.nextBeatIn Time remaining for next beat\n   * @property {number[]} this.bpm Time between two particular beats\n   * @property {number} this.voltage Current voltage value. No units used.\n   */\n  constructor(p, ecg, options, adDuration, vdDuration, vrDuration) {\n    this.p = p;\n    this.ecg = ecg;\n    this.options = options;\n    this.adDuration = adDuration;\n    this.vdDuration = vdDuration;\n    this.vrDuration = vrDuration;\n\n    this.beatDuration = adDuration + vdDuration + vrDuration;\n\n    this.nextBeat = 1;\n    this.nextBeatIn = 1;\n    this.bpm = [];\n    this.voltage = 0;\n  }\n\n  /**\n   * Assign the heart a new voltage value, and report that value to the ECG\n   * the heart is connected to.\n   * @param {number} voltage\n   */\n  setVoltage(voltage) {\n    this.voltage = voltage;\n    this.ecg.addValue({ y: this.voltage });\n  }\n\n  /**\n   * Generates the voltage values corresponding to the atria depolarization process.\n   * This is the process that generates the first part of the curve of every beat.\n   *\n   * @param {number} time Time in pixels since the atria depolarization process started\n   */\n  atriaDepolarization(time) {\n    const p = this.p;\n    \n    // This process is not close to what reality does, but here it is generated using a\n    // sin function where only the positive values remain, making a bump followed by a\n    // flat section\n    let y = p.randomGaussian(5, 1) * p.sin(time * (360 / this.adDuration));\n\n    // To compensate for the y-axis inverted direction, return -y when y is over 0\n    y = y > 0 ? -y : 0.2 * (1 - y);\n\n    // Update the voltage to whatever value was calculated\n    this.setVoltage(y + p.noise(time));\n  }\n\n  /**\n   * Generates the voltage values corresponding to the ventricle depolarization process.\n   * This is the process that generates the spiky part of the curve of every beat.\n   *\n   * @param {number} time Time in pixels since the ventricle depolarization process started\n   */\n  ventricleDepolarization(time) {\n    const p = this.p;\n    \n    let y;\n    // In the first third, the curve has a spike going down\n    if(time <= this.vdDuration / 3)\n      y = (p.randomGaussian(8, 2) * (this.vdDuration - time)) / 6;\n    // In the second third, the curve has a big spike going up\n    else if(time < (2 * this.vdDuration) / 3) {\n      // Start producing a sound, going from 0 to 0.5 volume in 0.01 seconds\n      // osc.amp(0.5, 0.01);\n      y = (p.randomGaussian(70, 2) * p.abs(1.5 - (this.vdDuration - time))) / 3;\n      y = -y;\n    }\n\n    // In the last third, the curve has another spike (bigger than the first one) going down\n    else {\n      y = (p.randomGaussian(20, 2) * (this.vdDuration - time)) / 3;\n      // Stop the sound, going from 0.5 to 0 volume in 0.01 secs\n      // osc.amp(0, 0.01);\n    }\n\n    // Update the voltage to whatever value was calculated\n    this.setVoltage(y);\n  }\n\n  /**\n   * Generates the voltage values corresponding to the ventricle repolarization process.\n   * This is the process that generates the last part of the curve of every beat.\n   *\n   * @param {number} time Time in pixels since the ventricle repolarization process started\n   */\n  ventricleRepolarization(time) {\n    const p = this.p;\n    \n    // This process is not close to what reality does, but here it is generated using a\n    // sin function where only the positive values remain, but displaced half a turn to\n    // make a flat section followed by a bump\n    let y = p.randomGaussian(8, 2) * p.sin(180 + time * (360 / this.vrDuration));\n\n    // To compensate for the y-axis inverted direction, return -y when y is over 0\n    y = y < 0 ? 0.2 * (1 - y) : -y;\n\n    // Update the voltage to whatever value was calculated\n    this.setVoltage(y + p.noise(time));\n  }\n\n  updateBPM() {\n    const p = this.p;\n    \n    // bpm = 3600 / pixel-distance\n    // this.bpm = 3600 / this.nextBeat;\n    this.bpm.push(3600 / this.nextBeat);\n\n    // To make rapid frequency changes meaningful, get the average bpm using only the\n    // last 5 values of time, not all of them. So dispose the oldest one when the list\n    // length is over 5.\n    if(this.bpm.length > 5) this.bpm.splice(0, 1);\n    this.ecg.drawBPM(p.round(this.bpm.reduce((p, c) => p + c, 0) / this.bpm.length));\n    // this.ecg.drawBPM(p.round(this.bpm));\n  }\n  /**\n   * Decrease this.nextBeatIn to simulate the pass of time.\n   * If necessary, create a new this.nextBeat value\n   */\n  updateTimeToNextBeat() {\n    // This indicates that the next beat will begin in the next iteration\n    if(this.nextBeatIn-- <= 0) {\n      // const p = this.p;\n    \n      // Then calculate a new \"remaining time\" for the next beat.\n      // Use the x coordinates of the mouse position to modify the heart frequency\n      // this.nextBeat = p.abs(p.ceil(p.randomGaussian((900 - p.mouseX) / 10, 3)));\n      // this.nextBeat = this.nextBeatIn + 3600 / 200;\n      this.nextBeat = this.nextBeatIn + 3600 / this.options.getBpm();\n\n      // It the pixel time between beat and beat is less than 18, force it to be\n      // 18. This value makes to a bpm of 200.\n      // if(this.nextBeat < 18) this.nextBeat = 18;\n\n      // Get new bpm values using the last this.nextBeat\n      this.updateBPM();\n\n      // Reset the remaining time to the new calculated time\n      this.nextBeatIn = this.nextBeat;\n    }\n  }\n\n  /**\n   * Get voltage values for every second of the beat, even at rest (no-beating time\n   * after the ventricle repolarization finished, and before the next atria depolarization)\n   * @param {*} time Time in pixels after the atria depolarization started\n   */\n  beat(time) {\n    // Update the time left for the start of the next beat\n    this.updateTimeToNextBeat();\n\n    // If according to time, beat is in the atria depolarization process, call that function\n    if(time <= this.adDuration) {\n      this.atriaDepolarization(time);\n      return;\n    }\n\n    // If according to time, beat is in the ventricle depolarization process, call that function\n    // Update the time so the value sent is relative to the start of the ventricle\n    // depolarization process\n    time -= this.adDuration;\n    if(time <= this.vdDuration) {\n      this.ventricleDepolarization(time);\n      return;\n    }\n\n    // If according to time, beat is in the ventricle repolarization process, call that function\n    // Update the time so the value sent is relative to the start of the ventricle\n    // repolarization process\n    time -= this.vdDuration;\n    if(time <= this.vrDuration) {\n      this.ventricleRepolarization(time);\n      return;\n    }\n\n    const p = this.p;\n    \n    // If function reached this point, it's not in any of the beat processes, and it's resting.\n    // Add a noisy voltage value\n    this.setVoltage(0 + p.noise(p.draw_i * 0.5) * 5);\n  }\n}\n\n/**\n *  ECG will receive, process, and draw the health information\n */\nclass ECG {\n  /**\n   * @param {Object} graphZero  Coordinates of the {0, 0} value of the graph\n   * @param {Object[]} values   Array of {x, y} objects. x plots time, y plots voltage\n   * @param {number} maxValuesHistory   Maximum number of values before wiping oldest one\n   */\n  constructor(p, color, graphZero, values, maxValuesHistory) {\n    this.p = p;\n    this.color = color;\n    this.graphZero = graphZero;\n    this.values = values;\n    this.maxValuesHistory = maxValuesHistory;\n    this.maximumX = maxValuesHistory;\n  }\n\n  /**\n   * Add a new voltage value to the values array. If it exceeds the maximum number of\n   * values allowed to store, remove the oldest one before.\n   * @param {Object} value {x, y} object. x represents time, y represents voltage\n   */\n  addValue(value) {\n    // If no x (time) value is received, assume it is the sucessor of the last value\n    // in the values array. If the new x exceeds the maximum allowed, make x = 0\n    if(this.values.length >= this.maxValuesHistory) this.values.splice(0, 1);\n    if(value.x === undefined) {\n      value.x = (this.values[this.values.length - 1].x + 1) % this.maximumX;\n    }\n    this.values.push(value);\n  }\n\n  /**\n   * Draw lines joining every voltage value throughout time in the screen\n   */\n  plotValues() {\n    const p = this.p;\n    \n    p.push();\n\n    const c = this.color;\n\n    for(let i = 1; i < this.values.length; i++) {\n      // If the previous value has a X coordinate higher than the current one,\n      // don't draw it, to avoid lines crossing from end to start of the ECG plot area.\n      if(this.values[i - 1].x > this.values[i].x) continue;\n\n      // Older values are drawn with a lower alpha\n      let alpha = i / this.values.length;\n\n      // Set the color of the drawing\n      p.stroke(c, alpha);\n      p.fill(c, alpha);\n\n      // Line from previous value to current value\n      p.line(\n        this.graphZero.x + this.values[i - 1].x,\n        this.graphZero.y + this.values[i - 1].y,\n        this.graphZero.x + this.values[i].x,\n        this.graphZero.y + this.values[i].y\n      );\n\n      // For the last 5 values, draw a circle with a radius going in function to\n      // its index. This to make the leading line thicker\n      if(i + 5 > this.values.length) {\n        p.circle(\n          this.graphZero.x + this.values[i].x,\n          this.graphZero.y + this.values[i].y,\n          this.values.length / i * 4\n        );\n      }\n    }\n\n    const v = this.values[this.values.length - 1];\n\n    // Set the color of the drawing\n    p.stroke(c);\n\n    // Vertical line\n    p.line(\n      this.graphZero.x + v.x,\n      0,\n      this.graphZero.x + v.x,\n      150\n    );\n\n    p.pop();\n  }\n\n  //// The following methods update the values represented as html elements\n\n  updateInfo() {\n    const p = this.p;\n    \n    this.updateDate();\n    if(p.draw_i % 50 === 0) {\n      this.updateBloodPressure();\n      this.updateVentilation();\n      this.updateTemperature();\n      this.updateHemoglobin();\n    }\n  }\n\n  updateHemoglobin() {\n    const p = this.p;\n    \n    // document.getElementById(\"hemoglobin-value\").innerHTML = p.randomGaussian(14, .1).toFixed(1)\n\n  }\n  updateTemperature() {\n    const p = this.p;\n    \n    // document.getElementById(\"temperature-value\").innerHTML = p.randomGaussian(98.6, .1).toFixed(1)\n\n  }\n  updateVentilation() {\n    const p = this.p;\n    \n    // document.getElementById(\"minute-ventilation-value\").innerHTML = p.randomGaussian(6, .5).toFixed(2)\n  }\n\n  updateBloodPressure() {\n    const p = this.p;\n    \n    // document.getElementById(\"pressure-value\").innerHTML = \"\" + p.round(p.randomGaussian(130, 1)) + \"/\" + p.round(p.randomGaussian(90, 1));\n  }\n\n  updateDate() {\n    let date = new Date;\n    // document.getElementById(\"date-value\").innerHTML = formatDate(date);\n  }\n\n  /**\n   * Update the html content of the span containing the bpm info\n   * @param {number} bpm\n   */\n  drawBPM(bpm) {\n    // document.getElementById(\"heart-rate-value\").innerHTML = bpm;\n  }\n}\n\nconst sketch = (options) => (p) => {\n  // Taken from https://codepen.io/davidomarf/pen/ydyzaa\n  // Keep track of the times draw() has been called\n  p.draw_i = 0;\n\n  // p5.sound variables\n  // let osc;\n\n  const W = 300;\n  const H = 150;\n\n  // Initialize the ecg\n  // let ecg = new ECG(p, { x: 0, y: 110 }, [{ x: 0, y: 0 }], 600);\n  let ecg = new ECG(p, p.color(options.color), { x: 0, y: 110 }, [{ x: 0, y: 0 }], W);\n\n  // Initialize a heart\n  let heart = new Heart(p, ecg, options, 12, 8, 12);\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.WEBGL);\n    // p.frameRate(12);\n\n    // Set the color mode to allow calling RGBA without converting to string\n    p.colorMode(p.RGB, 255, 255, 255, 1);\n\n    // Work with degrees instead of Radians (sin function used inside Heart Class)\n    p.angleMode(p.DEGREES);\n\n    // Set the frequency the ecg will emit every heartbeat.\n    // osc = new p5.Oscillator();\n    // osc.setType(\"sine\");\n    // osc.freq(445);\n    // osc.amp(0);\n    // osc.start();\n  };\n  p.draw = () => {\n    p.translate(-W * .5, -H * .5);\n\n    // Keep track of the number of times draw has been called\n    ++p.draw_i;\n\n    // Hide previous ECG line by drawing a background\n    /**\n     *  Draw a rectangle of size (canvas.width - 1, canvas.height - 1)  with dark background\n     * and a brilliant green border.\n     *\n     * The -1 is to allow the border to be seen in the final page.\n     */\n    p.push();\n    p.fill(colors.background);\n    // p.stroke(121, 239, 150, 1);\n    // p.rect(0, 0, W - 1, H - 1);\n    p.rect(0, 0, W, H);\n    p.pop();\n\n    // Get the new voltage values for the ECG from the heart\n    heart.beat(heart.nextBeat - heart.nextBeatIn);\n\n    // Draw the line of voltage values over time in the ECG screen\n    ecg.plotValues();\n\n    // Update the information values of the ECG\n    ecg.updateInfo();\n  };\n};\n\nexport default ({ bpm, color }) => {\n  const training = useStore(training$);\n\n  const ref = useRef(null);\n  const bpmValid = useMemo(() => training === false && Number.isFinite(bpm), [ training, bpm ]);\n  const options = useMemo(() => ({\n    color,\n    getBpm: () => bpm,\n  }), []);\n\n  useEffect(() => {\n    if(ref.current === null || bpmValid === false)\n      return;\n\n    const p = new p5(sketch(options), ref.current);\n\n    return p.remove;\n  }, [ ref.current, bpmValid ]);\n\n  return (\n    <div ref={ref} />\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../formatters\";\nimport { iteration$ } from \"../store/iteration\";\nimport { training$ } from \"../store/training\";\n\nimport * as colors from \"./colors\";\nimport { HR, Label, Panel, Table, Title, Value } from \"./components\";\nimport Heartrate from \"./Heartrate\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  // grid-auto-rows: 69px;\n  grid-gap: 15px;\n  grid-template-columns: repeat(2, 330px);\n  padding-left: 17px;\n  padding-right: 17px;\n  // width: 771px;\n`;\n\nexport default () => {\n  const training = useStore(training$);\n  const iteration = useStore(iteration$);\n  \n  if(training) {\n    return (\n      <div>training model</div>\n    );\n  }\n  \n  if(iteration === null) {\n    return (\n      <div>loading iteration</div>\n    );\n  }\n\n  const majaBpm = formatBpm(iteration.maja);\n  const dogBpm = formatBpm(iteration.dog);\n\n  const majaBpms = (iteration.majaBpms || []).map(({ bpm, date }) => ({ maja: bpm, date: +new Date(date) }));\n  const dogBpms = (iteration.dogBpms || []).map(({ bpm, date }) => ({ dog: bpm, date: +new Date(date) }));\n\n  const bpms = [\n    ...majaBpms,\n    ...dogBpms,\n  ].sort(\n    (a, b) => b.date - a.date\n  );\n\n  const start = format(iteration.timestamp, \"HH:mm:ss\");\n  const end = bpms.length === 0 ? \"NA\" : format(bpms[0].date, \"HH:mm:ss\");\n\n  return (\n    <Container>\n      <Panel>\n        <Title>human</Title>\n        <HR />\n        <Heartrate bpm={majaBpm} color={colors.valueHuman} />\n        <Table>\n          <Label>heart</Label><Value human>{majaBpm}</Value><Label>bpm</Label>\n          <HR style={{ gridColumn: \"span 3\" }} />\n          <Label>resp</Label><Value human>86</Value><Label>bpm</Label>\n          <Label>temp</Label><Value human>36.5</Value><Label>&deg;c</Label>\n          <HR style={{ gridColumn: \"span 3\" }} />\n          <Label style={{ alignItems: \"center\" }}>start</Label><Value human style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{start}</Value>\n          <HR style={{ gridColumn: \"span 3\" }} />\n          <Label style={{ alignItems: \"center\" }}>end</Label><Value human style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{end}</Value>\n        </Table>\n      </Panel>\n      <Panel>\n        <Title>animal</Title>\n        <HR />\n        <Heartrate bpm={dogBpm} color={colors.valueAnimal} />\n        <Table>\n          <Label>heart</Label><Value>{dogBpm}</Value><Label>bpm</Label>\n          <HR style={{ gridColumn: \"span 3\" }} />\n          <Label>resp</Label><Value>92</Value><Label>bpm</Label>\n          <Label>temp</Label><Value>34.8</Value><Label>&deg;c</Label>\n          <HR style={{ gridColumn: \"span 3\" }} />\n          <Label style={{ alignItems: \"center\" }}>start</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{start}</Value>\n          <HR style={{ gridColumn: \"span 3\" }} />\n          <Label style={{ alignItems: \"center\" }}>end</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{end}</Value>\n        </Table>\n      </Panel>\n    </Container>\n  );\n};\n","import { createEvent, restore } from \"effector\";\n\nexport const setPhase = createEvent();\nexport const phase$ = restore(setPhase, 4);\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} from \"recharts\";\n\nimport { HR, Label, Table, Value } from \"../components\";\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { previousIteration$ } from \"../../store/iteration\";\n\nimport { format } from \"date-fns\";\n\nexport default () => {\n  const iteration = useStore(previousIteration$);\n  \n  if(iteration === null) {\n    return (\n      <div>loading previous iteration</div>\n    );\n  }\n\n  const majaBpms = (iteration.majaBpms || []).map(({ bpm, date }) => ({ maja: bpm, date: +new Date(date) }));\n  const dogBpms = (iteration.dogBpms || []).map(({ bpm, date }) => ({ dog: bpm, date: +new Date(date) }));\n\n  const bpms = [\n    ...majaBpms,\n    ...dogBpms,\n  ].sort(\n    (a, b) => a.date - b.date\n  );\n\n  let previousMaja = null, previousDog = null;\n  const data = bpms.map((item) => {\n    const maja = item.maja || previousMaja;\n    const dog = item.dog || previousDog;\n\n    previousMaja = maja;\n    previousDog = dog;\n\n    return {\n      ...item,\n      maja,\n      dog,\n      delta: maja === null || dog === null ? null : Math.abs(maja - dog),\n    };\n  });\n\n  return (\n    <>\n      <Table>\n        <Label style={{ alignItems: \"center\" }}>class</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{formatRank(iteration.actualRank)}</Value>\n        <HR style={{ gridColumn: \"span 3\" }} />\n      </Table>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart data={data} margin={{ top: 40, right: 40, bottom: 5, left: 0 }}>\n          <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n          <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"maja\" stroke=\"#FF6600\" connectNulls isAnimationActive={false} />\n          <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"dog\" stroke=\"#0066FF\" connectNulls isAnimationActive={false} />\n          <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"delta\" stroke=\"#333333\" connectNulls isAnimationActive={false} />\n          <XAxis dataKey=\"date\" tickFormatter={(date) => format(date, \"HH:mm:ss\")} isAnimationActive={false} />\n          <YAxis yAxisId=\"left\" type=\"number\" unit=\"bpm\" isAnimationActive={false} />\n          <YAxis yAxisId=\"right\" type=\"number\" unit=\"bpm\" orientation=\"right\" isAnimationActive={false} />\n          <Legend isAnimationActive={false} />\n          <Tooltip labelFormatter={(date) => format(date, \"HH:mm:ss\")} formatter={(value) => `${value}bpm`} isAnimationActive={false} />\n        </LineChart>\n      </ResponsiveContainer>\n      <Table>\n        <HR style={{ gridColumn: \"span 3\" }} />\n        <Label style={{ alignItems: \"center\" }}>avg human bpm</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{formatBpm(iteration.maja)}</Value>\n        <HR style={{ gridColumn: \"span 3\" }} />\n        <Label style={{ alignItems: \"center\" }}>avg animal bpm</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{formatBpm(iteration.dog)}</Value>\n        <HR style={{ gridColumn: \"span 3\" }} />\n        <Label style={{ alignItems: \"center\" }}>avg delta bpm</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{formatBpm(iteration.delta)}</Value>\n      </Table>\n    </>\n  );\n};\n","import * as tf from \"@tensorflow/tfjs\";\n\nimport { size$ } from \"../store/size\";\n\nexport const model$ = size$.map((size) => {\n  if(size === null)\n    return null;\n\n  const model = tf.sequential({\n    layers: [\n      // hidden\n      // tf.layers.dense({\n      //   batchInputShape: [ null, 36 ],\n      //   units: 1024,\n      //   activation: \"sigmoid\",\n      // }),\n      // // output\n      // tf.layers.dense({\n      //   units: 2,\n      //   activation: \"softmax\",\n      // }),\n      tf.layers.conv2d({\n        batchInputShape: [ null, size.x, size.y, size.z ],\n        kernelSize: 5,\n        filters: 16,\n        strides: 2,\n        activation: \"relu\",\n        kernelInitializer: \"varianceScaling\",\n      }),\n\n      // The MaxPooling layer acts as a sort of downsampling using max values\n      // in a region instead of averaging.\n      // tf.layers.maxPooling2d({ poolSize: [2, 2], strides: [2, 2] }),\n\n      // Now we flatten the output from the 2D filters into a 1D vector to prepare\n      // it for input into our last layer. This is common practice when feeding\n      // higher dimensional data to a final classification output layer.\n      tf.layers.flatten(),\n\n      // output\n      tf.layers.dense({\n        units: 5,\n        kernelInitializer: \"varianceScaling\",\n        activation: \"softmax\",\n      }),\n    ],\n  });\n\n  model.compile({\n    // loss: tf.losses.categoricalCrossentropy,\n    loss: \"categoricalCrossentropy\",\n    metrics: [ \"accuracy\" ],\n    // loss: tf.losses.softmaxCrossEntropy,\n    // optimizer: tf.train.sgd(.2),\n    optimizer: tf.train.adam(),\n  });\n\n  return model;\n});\n","import { createEvent, restore } from \"effector\";\n\nexport const setProgress = createEvent();\nexport const progress$ = restore(setProgress, 0);\n","import { createEvent, createEffect, restore } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useRef } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n// import * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { ids$ } from \"../store/ids\";\nimport { iteration$ } from \"../store/iteration\";\nimport { fetchIterations } from \"../store/iterations\";\nimport { layout$ } from \"../store/layout\";\nimport { model$ } from \"../store/model\";\nimport { setPhase } from \"../store/phase\";\nimport { size$ } from \"../store/size\";\nimport { setTraining } from \"../store/training\";\nimport { inside, fromIndex, toIndex, generateIteration, iterationToLayout, join } from \"../utils\";\n\nconst setAttempts = createEvent();\nexport const attempts$ = restore(setAttempts, 0);\n\nconst setRank = createEvent();\nexport const rank$ = restore(setRank, 0);\n\nconst saveIteration = async(iteration, rank) => {\n  const now = new Date;\n  const timestamp = +now;\n  \n  const payload = {\n    _id: `${timestamp}`,\n    title: now.toISOString(),\n    data: iteration,\n    expectedRank: rank,\n    // iterationKey: entries$.getState().current,\n    timestamp,\n  };\n\n  console.log(\"saveIteration\", payload);\n\n  await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  });\n\n  fetchIterations();\n};\n\nconst classNames = [\n  \"Zero\",\n  \"One\",\n  \"Two\",\n  \"Three\",\n  \"Four\",\n  \"Five\",\n  \"Six\",\n  \"Seven\",\n  \"Eight\",\n  \"Nine\",\n];\n\nconst ranks = [\n  [ 1, 0, 0, 0, 0 ],\n  [ 0, 1, 0, 0, 0 ],\n  [ 0, 0, 1, 0, 0 ],\n  [ 0, 0, 0, 1, 0 ],\n  [ 0, 0, 0, 0, 1 ],\n];\n\nconst ranges = [\n  \"[ 0, 5 )\",\n  \"[ 5, 10 )\",\n  \"[ 10, 20 )\",\n  \"[ 20, 40 )\",\n  \"[ 40, inf )\",\n];\n\nlet animationCompleted = null;\nexport const find = createEffect();\nfind.use(async({ rank }) => {\n  // const element = document.getElementById(\"phase-3\");\n  setTimeout(() => {\n    setPhase(3);\n    // window.scrollTo({\n    //   behavior: element ? \"smooth\" : \"auto\",\n    //   top: element ? element.offsetTop : 0,\n    // });\n  }, 100);\n\n  const size = size$.getState();\n  const l = layout$.getState();\n\n  let argMax1;\n  let response;\n  let iteration;\n\n  let tries = 0;\n\n  do {\n    ++tries;\n\n    setAttempts(tries);\n\n    iteration = generateIteration(p);\n    const iterationLayout = join(l, iterationToLayout(l, iteration));\n\n    layout = iterationLayout;\n\n    // p.redraw();\n    progress = 0;\n    p.loop();\n\n    const animationCompletedPromise = new Promise((resolve, reject) => animationCompleted = resolve);\n\n    const number = layout.map((item) => Math.max(0, item - 1));\n\n    const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ], \"int32\");\n    // const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ]);\n    response = model$.getState().predict(xs);\n    const preds = response.argMax(1);\n    argMax1 = await preds.data();\n    const data = await response.data();\n\n    const ys = tf.tensor([ ranks[rank] ], [ 1, 5 ]);\n    const labels = await ys.argMax(1);\n\n    setRank(argMax1[0]);\n\n    console.log(`${tries}. found`, argMax1[0]); // , Array.from(data));\n\n    // accuracy\n    // const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\n    // const container = { name: \"Accuracy\", tab: \"Evaluation\" };\n    // tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\n\n    // confusion\n    // const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\n    // console.log(\"tfvis.show\", tfvis.show)\n    // console.log(\"tfvis.render\", tfvis.render)\n    // console.log(\"tfvis.metrics\", tfvis.metrics)\n\n    // tfvis.render.confusionMatrix({ name: \"Confusion Matrix\", tab: \"Evaluation\" }, {\n    //   values: confusionMatrix,\n    //   tickLabels: classNames,\n    // });\n    // tfvis.render.heatmap({ name: \"Heatmap\", tab: \"Evaluation\" }, {\n    //   values: confusionMatrix,\n    // });\n    // tfvis.render.histogram({ name: \"Histogram\", tab: \"Evaluation\" }, {\n    //   values: confusionMatrix,\n    // });\n\n    xs.dispose();\n    ys.dispose();\n\n    p.loop();\n    \n    await animationCompletedPromise;\n  } while(argMax1[0] !== rank);\n\n  // \"https://heartrate.miran248.now.sh/api/iteration\"\n\n  console.log(\"found rank\", rank, \"in\", tries, \"tries\");\n\n  await saveIteration(iteration, rank);\n\n  return response;\n});\nfind.pending.watch((pending) => pending && setTraining(true));\nfind.fail.watch((error) => {\n  console.error(\"find error\", error);\n})\nfind.finally.watch(() => {\n  // const element = document.getElementById(\"phase-4\");\n  setTimeout(() => {\n    setPhase(4);\n    // setTraining(false);\n    // window.scrollTo({\n    //   behavior: element ? \"smooth\" : \"auto\",\n    //   top: element ? element.offsetTop : 0,\n    // });\n  }, 100);\n});\n\nconst TILE_SIZE = 12;\n\nconst sketch = (size) => (p) => {\n  const ids = ids$.getState();\n\n  const W = 800;\n  const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n\n  const hiddenOffsetX = 20 * TILE_SIZE;\n  const hiddenOffsetY = 2 * TILE_SIZE;\n\n  const outputOffsetX = 40 * TILE_SIZE;\n  const outputOffsetY = 2.5 * TILE_SIZE;\n\n  const OUTPUT_TILE_SIZE = 4 * TILE_SIZE;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n  };\n  p.draw = () => {\n    const layoutCount = layout.length;\n    const progressIndex = Math.floor(progress * layoutCount);\n\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n    for(let i = 0; i < layoutCount; ++i) {\n      const { x, y, z } = fromIndex(size, i);\n\n      const posX = x * TILE_SIZE;\n      const posY = y * TILE_SIZE;\n      const posZ = z * (size.y + 1) * TILE_SIZE;\n\n      let c = 255;\n\n      if(layout[i] === 2)\n        c = 51;\n      else if(layout[i] === 1)\n        c = 204;\n\n      if(i === progressIndex)\n        p.fill(255, 102, 0);\n      else\n        p.fill(c);\n      \n      p.rect(posX, posY + posZ, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      if(ids[i] > 0) {\n        p.text(ids[i], posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      }\n    }\n\n    for(let i = 0; i < layoutCount; ++i) {\n      const { x, y, z } = fromIndex(size, i);\n\n      const posX = hiddenOffsetX + x * TILE_SIZE;\n      const posY = hiddenOffsetY + y * TILE_SIZE;\n      const posZ = z * size.y * TILE_SIZE;\n\n      let c = 255;\n\n      if(layout[i] === 2)\n        c = 51;\n      else if(layout[i] === 1)\n        c = 204;\n\n      if(i === progressIndex)\n        p.fill(255, 102, 0);\n      else\n        p.fill(c);\n      \n      p.rect(posX, posY + posZ, TILE_SIZE, TILE_SIZE);\n\n      p.fill(255 - c);\n      // p.text(i, posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      if(ids[i] > 0) {\n        p.text(ids[i], posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      }\n    }\n\n    p.textSize(OUTPUT_TILE_SIZE * .5);\n    for(let i = 0; i < 5; ++i) {\n      // const { x, y, z } = fromIndex(size, i);\n      \n      const posX = outputOffsetX;\n      const posY = outputOffsetY + i * (OUTPUT_TILE_SIZE + TILE_SIZE);\n\n      if(previousRank > -1 && i === previousRank)\n        p.fill(255, 102, 0);\n      else\n        p.fill(255);\n\n      p.rect(posX, posY, OUTPUT_TILE_SIZE, OUTPUT_TILE_SIZE);\n\n      p.fill(159, 159, 164);\n      p.textAlign(p.CENTER, p.CENTER);\n      p.text(i, posX + OUTPUT_TILE_SIZE * .5, posY + OUTPUT_TILE_SIZE * .5);\n      p.textAlign(p.LEFT, p.CENTER);\n      p.text(`${ranges[i]} bpm delta`, posX + OUTPUT_TILE_SIZE * 1.2, posY + OUTPUT_TILE_SIZE * .5);\n    }\n\n    // progress = (progress + .01) % 1;\n    if(progress < 1) {\n      progress += .01;\n\n      if(progress >= 1)\n        previousRank = rank$.getState();\n    } else if(animationCompleted !== null) {\n      p.noLoop();\n      animationCompleted();\n      animationCompleted = null;\n    }\n  };\n};\n\nlet p, layout;\nlet progress = 1.1;\nlet previousRank = -1;\n\nexport default () => {\n  const size = useStore(size$);\n  const iteration = useStore(iteration$);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null || iteration === null)\n      return;\n\n    layout = iteration.combined;\n    \n    setRank(previousRank = iteration.actualRank || iteration.expectedRank);\n\n    p = new p5(sketch(size), ref.current);\n    p.redraw();\n\n    return p.remove;\n  }, [ ref.current, iteration ]);\n\n  return (\n    <div ref={ref} />\n  );\n};\n","import { combine, createEffect, createEvent, restore } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nimport { iterations$ } from \"../store/iterations\";\nimport { model$ } from \"../store/model\";\nimport { setPhase } from \"../store/phase\";\nimport { setProgress, progress$ } from \"../store/progress\";\nimport { size$ } from \"../store/size\";\nimport { setTraining, training$ } from \"../store/training\";\n// import {\n//   showExamples,\n//   showAccuracy,\n//   showConfusion,\n//   visualizeModel,\n//   getFitCallbacks,\n// } from \"../tf/vis\";\n\nimport { Button } from \"./components\";\nimport { find } from \"./Generator\";\n\nconst EPOCH_COUNT = 250;\n\nlet xs;\nlet ys;\ncombine(iterations$, size$, (iterations, size) => {\n  if(iterations === null || size === null)\n    return;\n\n  if(xs)\n    xs.dispose();\n\n  if(ys)\n    ys.dispose();\n\n  const validIterations = iterations.filter((iteration) => iteration.trainable);\n\n  const data = validIterations.map((iteration) => iteration.layout);\n  xs = tf.tensor(data, [ data.length, size.x, size.y, size.z ], \"int32\");\n\n  const output = validIterations.map((iteration) => iteration.output);\n  ys = tf.tensor(output, [ data.length, 5 ], \"int32\");\n});\n\nfunction getAccumulator(accumulators, callback, metric) {\n  if(accumulators[callback] == null) {\n    accumulators[callback] = {};\n  }\n  if(accumulators[callback][metric] == null) {\n    accumulators[callback][metric] = [];\n  }\n  return accumulators[callback][metric];\n}\n\nconst setTrainStats = createEvent();\nexport const trainStats$ = restore(setTrainStats, null);\n\nconst train = createEffect();\ntrain.use(async() => {\n  // const element1 = document.getElementById(\"phase-1\");\n  setPhase(1);\n\n  // const element2 = document.getElementById(\"phase-2\");\n  setTimeout(() => {\n    setPhase(2);\n    // window.scrollTo({\n    //   behavior: element2 ? \"smooth\" : \"auto\",\n    //   top: element2 ? element2.offsetTop : 0,\n    // });\n  }, 10000);\n\n  // await new Promise((resolve, reject) => setTimeout(resolve, 100));\n\n  const model = model$.getState();\n\n  // visualizeModel(model);\n\n  // const callbacks = getFitCallbacks(parent);\n\n  const metrics = [ \"loss\", \"val_loss\", \"acc\", \"val_acc\" ];\n  const accumulators = {};\n  const historyOpts = {};\n  // const drawArea = getDrawArea(container);\n  const response = await model.fit(xs, ys, {\n    epochs: EPOCH_COUNT,\n    shuffle: true,\n    // validationSplit: .1,\n    callbacks: {\n      // unblocks p5.draw\n      // onBatchEnd: tf.nextFrame,\n      onEpochEnd: async(...args) => {\n        const [ i, log ] = args;\n\n        const epoch = i + 1;\n\n        // console.log(`epoch ${epoch}, loss ${log.loss}`);\n\n        setProgress(epoch / EPOCH_COUNT);\n\n        // return callbacks.onEpochEnd(...args);\n\n        // -- inlined and modified callbacks.onEpochEnd\n\n        const callbackName = \"onEpochEnd\";\n\n        // Set a nicer x axis name where possible\n        historyOpts.xLabel = \"Epoch\";\n  \n        // Because of how the _ (iteration) numbers are given in the layers api\n        // we have to store each metric for each callback in different arrays else\n        // we cannot get accurate \"global\" batch numbers for onBatchEnd.\n  \n        // However at render time we want to be able to combine metrics for a\n        // given callback. So here we make a nested list of metrics, the first\n        // level are arrays for each callback, the second level contains arrays\n        // (of logs) for each metric within that callback.\n  \n        const metricLogs = [];\n        const presentMetrics = [];\n        for(const metric of metrics) {\n          // not all logs have all kinds of metrics.\n          if(log[metric] != null) {\n            presentMetrics.push(metric);\n  \n            const accumulator = getAccumulator(accumulators, callbackName, metric);\n            accumulator.push({ [metric]: log[metric] });\n            metricLogs.push(accumulator);\n          }\n        }\n  \n        // const subContainer = subSurface(drawArea, callbackName, { title: callbackName });\n        // history(subContainer, metricLogs, presentMetrics, historyOpts);\n\n        setTrainStats({ metricLogs, presentMetrics, historyOpts });\n\n        await tf.nextFrame();\n      },\n    },\n  });\n\n  return response;\n});\ntrain.pending.watch((pending) => pending && setTraining(true));\ntrain.fail.watch((error) => {\n  console.error(\"train error\", error);\n})\ntrain.finally.watch(() => {\n  // setTraining(false);\n\n  find({ rank: 0 });\n});\n\nexport default () => {\n  const progress = useStore(progress$);\n  const training = useStore(training$);\n\n  return (\n    <div>\n      <p style={{ textAlign: \"center\" }}>\n        <Button onClick={train}\n                disabled={training}>{training ? \"training ...\" : \"start new\"}</Button>\n      </p>\n      {/* <progress value={progress}>{Math.round(progress * 100)}%</progress> */}\n    </div>\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { useStore } from \"effector-react\";\nimport React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { iteration$ } from \"../../store/iteration\";\n\nimport { Image } from \"../components\";\nimport { trainStats$ } from \"../Train\";\n\nconst Container = styled.div`\n  * {\n    border: none;\n    margin: 0;\n  }\n`;\n\n// const phase2ContentAreas = `\n//   accGraph lossGraph\n//   accDescription lossDescription\n// `;\nexport default () => {\n  const stats = useStore(trainStats$);\n\n  const ref = useRef(null);\n\n  console.log(\"stats\", stats);\n\n  // const subContainer = subSurface(drawArea, callbackName, { title: callbackName });\n  // tfvis.show.history(subContainer, metricLogs, presentMetrics, historyOpts);\n\n  useEffect(() => {\n    if(ref.current === null || stats === null)\n      return;\n\n    const { metricLogs, presentMetrics, historyOpts } = stats;\n\n    tfvis.show.history(ref.current, metricLogs, presentMetrics, historyOpts);\n  }, [ ref.current, stats ]);\n\n  return (\n    <Container ref={ref} />\n    // <Composition areas={phase2ContentAreas} gap={10}>\n    //   {({ AccGraph, LossGraph, AccDescription, LossDescription }) => (\n    //     <>\n    //       <AccGraph>\n    //         <Container ref={ref} />\n    //       </AccGraph>\n    //       <LossGraph>\n    //         <Image src=\"loss-graph.png\" />\n    //       </LossGraph>\n    //       <AccDescription as=\"h4\">accuracy</AccDescription>\n    //       <LossDescription as=\"h4\">loss</LossDescription>\n    //     </>\n    //   )}\n    // </Composition>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { HR, Label, Table, Value } from \"../components\";\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { iteration$ } from \"../../store/iteration\";\n\nimport { Image } from \"../components\";\nimport Generator, { attempts$, rank$ } from \"../Generator\";\n\n// input hidden output\nexport default () => {\n  const attempts = useStore(attempts$);\n  const rank = useStore(rank$);\n\n  return (\n    <>\n      <Generator />\n      <Table>\n        <HR style={{ gridColumn: \"span 3\" }} />\n        <Label style={{ alignItems: \"center\" }}>attempt</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{attempts}</Value>\n        <HR style={{ gridColumn: \"span 3\" }} />\n        <Label style={{ alignItems: \"center\" }}>class</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{rank}</Value>\n      </Table>\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useRef } from \"react\";\n\nimport { linksGraph$ } from \"../store/graph\";\nimport { iteration$ } from \"../store/iteration\";\nimport { size$ } from \"../store/size\";\nimport { fromIndex } from \"../utils\";\n\nconst TILE_SIZE = 60;\n\nconst sketch = (iteration, size) => (p) => {\n  const W = 750;\n  // const W = 400;\n  const H = W * 10 / 16;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.WEBGL);\n    p.frameRate(12);\n  };\n  p.draw = () => {\n    p.clear();\n\n    // p.normalMaterial();\n    p.ambientLight(255, 255, 255);\n\n    //p.rotateX(-p.mouseY * .01);\n    p.rotateX(-.6);\n    p.rotateY(p.mouseX * .01);\n\n    p.translate(\n      -.5 * TILE_SIZE * size.x,\n      -.5 * TILE_SIZE * size.y,\n      -.5 * TILE_SIZE * size.z\n    );\n\n    for(let i in iteration) {\n      if(iteration[i] === 0)\n        continue;\n\n      const { x, y, z } = fromIndex(size, i);\n\n      p.push();\n\n      p.translate(\n        TILE_SIZE * (x + .5),\n        TILE_SIZE * (z + .5),\n        TILE_SIZE * (y + .5)\n      );\n      p.rotateX(p.PI * -.5);\n\n      if(iteration[i] === 2)\n        p.fill(51, 51, 51);\n      else if(iteration[i] === 1)\n        p.fill(153, 153, 153);\n\n      p.plane(TILE_SIZE);\n\n      // p.box(TILE_SIZE - 1, TILE_SIZE - 1, TILE_SIZE - 1);\n\n      p.pop();\n    }\n\n    const linksGraph = linksGraph$.getState();\n    for(let [ k, ka, s, t, sa, ta ] of linksGraph.edgeEntries()) {\n      const sp = fromIndex(size, +s);\n      const tp = fromIndex(size, +t);\n\n      p.push();\n\n      p.strokeWeight(2);\n      p.stroke(0, 102, 255);\n      p.line(\n        TILE_SIZE * (sp.x + .5), TILE_SIZE * (sp.z + .5), TILE_SIZE * (sp.y + .5),\n        TILE_SIZE * (tp.x + .5), TILE_SIZE * (tp.z + .5), TILE_SIZE * (tp.y + .5)\n      );\n\n      p.pop();\n    }\n  };\n};\n\nexport default () => {\n  const iteration = useStore(iteration$);\n  const size = useStore(size$);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null || iteration === null)\n      return;\n\n    const p = new p5(sketch(iteration.combined, size), ref.current);\n\n    return p.remove;\n  }, [ ref.current, iteration ]);\n\n  if(iteration === null) {\n    return (\n      <div><a href=\"#pick\">pick iteration</a></div>\n    );\n  }\n\n  return (\n    <div ref={ref} />\n  );\n};\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { iteration$ } from \"../../store/iteration\";\n\nimport { HR, Label, Table, Value } from \"../components\";\nimport Preview from \"../Preview\";\nimport Train from \"../Train\";\n\nexport default () => {\n  const iteration = useStore(iteration$);\n  \n  if(iteration === null) {\n    return (\n      <div>loading 3d preview</div>\n    );\n  }\n\n  return (\n    <>\n      <Preview />\n      <Train />\n      <Table>\n        <HR style={{ gridColumn: \"span 3\" }} />\n        <Label style={{ alignItems: \"center\" }}>status</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>in progress</Value>\n        <HR style={{ gridColumn: \"span 3\" }} />\n        <Label style={{ alignItems: \"center\" }}>expected class</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{formatRank(iteration.expectedRank)}</Value>\n        <HR style={{ gridColumn: \"span 3\" }} />\n        <Label style={{ alignItems: \"center\" }}>actual class</Label><Value style={{ fontSize: \"25px\", gridColumn: \"span 2\" }}>{formatRank(iteration.actualRank)}</Value>\n      </Table>\n    </>\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Sidebar from \"../Sidebar\";\nimport { HR, Panel, Title } from \"../components\";\nimport { phase$ } from \"../../store/phase\";\n\nimport Phase1 from \"./Phase1\";\nimport Phase2 from \"./Phase2\";\nimport Phase3 from \"./Phase3\";\nimport Phase4 from \"./Phase4\";\n\nconst Section = styled.section`\n  min-height: 100vh;\n`;\n\nconst phaseTitle = `\n  phase title\n`;\nconst PhaseTitle = ({ phase, title }) => (\n  <Composition areas={phaseTitle} gap={10}>\n    {(c) => (\n      <>\n        <c.Phase as={Title}>phase {phase}:</c.Phase>\n        <c.Title as={Title}>{title}</c.Title>\n      </>\n    )}\n  </Composition>\n);\n\nconst Container = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 15px;\n  grid-template-columns: repeat(2, 1fr);\n  padding-left: 17px;\n  padding-right: 17px;\n`;\nconst Main = styled.main`\n  \n`;\n\nexport default () => {\n  const phase = useStore(phase$);\n\n  return (\n    <Container>\n      <aside>\n        <Sidebar />\n      </aside>\n      <Main>\n      {phase > 3 && (\n        <Section id=\"phase-4\">\n          <Panel>\n            <PhaseTitle phase={4} title=\"new iteration layout\" />\n            <HR />\n            <Phase4 />\n          </Panel>\n        </Section>\n      )}\n      {phase > 2 && (\n        <Section id=\"phase-3\">\n          <Panel>\n            <PhaseTitle phase={3} title=\"generating new layout\" />\n            <HR />\n            <Phase3 />\n          </Panel>\n        </Section>\n      )}\n      {phase > 1 && (\n        <Section id=\"phase-2\">\n          <Panel>\n            <PhaseTitle phase={2} title=\"training model w/ cnn\" />\n            <HR />\n            <Phase2 />\n          </Panel>\n        </Section>\n      )}\n      {phase > 0 && (\n        <Section id=\"phase-1\">\n          <Panel>\n            <PhaseTitle phase={1} title=\"previous iteration\" />\n            <HR />\n            <Phase1 />\n          </Panel>\n        </Section>\n      )}\n      </Main>\n    </Container>\n  );\n};\n","import React from \"react\";\n\nimport { Image } from \"../components\";\n\nexport default () => {\n  return (\n    <Image src=\"map-layout.png\" />\n  );\n};\n","import React from \"react\";\nimport {\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport Archive from \"./pages/Archive\";\nimport Main from \"./pages/Main\";\nimport Map from \"./pages/Map\";\n\nconst root = \"/non-brute-force-ui\";\n\nexport default () => (\n  <Router basename={root}>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact>\n        <Main />\n      </Route>\n      <Route path=\"/archive\" exact>\n        <Archive />\n      </Route>\n      <Route path=\"/map\" exact>\n        <Map />\n      </Route>\n      <Route path=\"*\">\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  </Router>\n);\n","import \"regenerator-runtime/runtime\";\n// import \"@exampledev/new.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { setHardcodedIterations } from \"./store/iterations\";\nimport { setLayout } from \"./store/layout\";\nimport { setSize } from \"./store/size\";\nimport App from \"./ui/Redesign\";\n\n// import fours from \"./data/fours\";\n// import ones from \"./data/ones\";\n// import threes from \"./data/threes\";\n// import twos from \"./data/twos\";\n// import zeros from \"./data/zeros\";\n// const props = {\n//   iterations: [\n//     ...zeros .map((item, i) => ({ title: `zeros ${i + 1}`,  data: item, output: [ 1, 0, 0, 0, 0 ] })),\n//     ...ones  .map((item, i) => ({ title: `ones ${i + 1}`,   data: item, output: [ 0, 1, 0, 0, 0 ] })),\n//     ...twos  .map((item, i) => ({ title: `twos ${i + 1}`,   data: item, output: [ 0, 0, 1, 0, 0 ] })),\n//     ...threes.map((item, i) => ({ title: `threes ${i + 1}`, data: item, output: [ 0, 0, 0, 1, 0 ] })),\n//     ...fours .map((item, i) => ({ title: `fours ${i + 1}`,  data: item, output: [ 0, 0, 0, 0, 1 ] })),\n//   ],\n//   layout: Array.from(Array(36), () => 1),\n//   size: { x: 6, y: 6, z: 1 },\n// };\n\nimport iterations from \"./data/iterations\";\nimport layout, { layoutSize } from \"./data/layout\";\n\nimport \"./index.css\";\n\nconst props = {\n  iterations,\n  layout,\n  size: layoutSize,\n};\n\nsetHardcodedIterations(props.iterations.map((iteration) => ({\n  ...iteration,\n  timestamp: +new Date(iteration.title.split(\" \")[0]),\n  valid: true,\n})));\nsetLayout(props.layout);\nsetSize(props.size);\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","export default [\n  // 20200526\n  {\n    title: \"2020-05-26 1\",\n    data: [ 3, 4, 6, 7, 9, 11, 12, 14, 15, 24, 27, 29, 31, 34, 36, 38, 39, 44, 46, 48, 49, 51, 53, 54, 57, 59, 61, 62, 63, 64, 70, 72 ],\n    george: 89,\n    maja: 104,\n  },\n  // {\n  //   title: \"2020-05-26 2\",\n  //   data: [ 3, 4, 6, 7, 9, 11, 12, 13, 15, 24, 27, 29, 32, 35, 36, 38, 39, 44, 45, 48, 49, 52, 53, 54, 57, 59, 62, 63, 65, 70, 72 ],\n  //   boogie: 98,\n  //   maja: 87,\n  // },\n  // 20200527\n  {\n    title: \"2020-05-27 1\",\n    data: [ 1, 3, 4, 5, 7, 9,  11, 12, 13, 15, 19, 24, 28, 29, 32, 35, 36, 40, 41, 46, 48, 49, 51, 54, 57, 59, 61, 62, 68, 70, 72 ],\n    maja: 93,\n    george: 80,\n    // george_boogie: 85, // ?\n    // boogie: 90,\n  },\n  {\n    title: \"2020-05-27 2\",\n    data: [ 1, 3, 4, 5, 8, 10, 11, 12, 13, 15, 19, 24, 28, 29, 35, 38, 40, 41, 43, 46, 48, 50, 51, 55, 56, 59, 61, 62, 68, 70, 72 ],\n    maja: 90,\n    george: 82,\n    // george_boogie: 90, // ?\n    // boogie: 98,\n  },\n  // 20200601\n  // {\n  //   title: \"2020-06-01 1\",\n  //   data: [ 3, 4, 5, 7, 10, 13, 14, 15, 17, 19, 24, 28, 30, 32, 35, 38, 40, 41, 43, 46, 48, 50, 52, 54, 57, 59, 60, 62, 65, 68, 70, 72 ],\n  //   maja: 90,\n  //   boogie: 127,\n  // },\n  // {\n  //   title: \"2020-06-01 2\",\n  //   data: [ 4, 5, 10, 13, 14, 15, 16, 19, 24, 28, 30, 32, 34, 37, 38, 40, 41, 43, 47, 48, 50, 51, 54, 57, 59, 60, 61, 62, 64, 68, 70, 72 ],\n  //   maja: 96,\n  //   boogie: 93,\n  // },\n  // 20200602\n  {\n    title: \"2020-06-02 1\",\n    data: [ 3, 4, 5, 7, 9,  12, 13, 15, 17, 19, 24, 26, 30, 31, 34, 36, 38, 40, 43, 46, 48, 50, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 93,\n    george: 92, // georgy?\n  },\n  {\n    title: \"2020-06-02 2\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 16, 17, 19, 26, 27, 29, 31, 34, 36, 40, 43, 48, 49, 52, 55, 57, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 97,\n    george: 142, // georgy?\n  },\n  {\n    title: \"2020-06-02 3\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 13, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 40, 43, 46, 48, 49, 50, 54, 57, 59, 61, 62, 68, 70, 71, 72 ],\n    maja: 92,\n    mala: 81,\n  },\n  {\n    title: \"2020-06-02 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 41, 43, 46, 48, 49, 52, 54, 57, 59, 60, 61, 68, 70, 71, 72 ],\n    maja: 86,\n    mala: 88,\n  },\n  // 20200603\n  {\n    title: \"2020-06-03 1\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 15, 16, 20, 26, 28, 29, 30, 32, 36, 39, 41, 43, 46, 48, 49, 52, 54, 56, 59, 60, 61, 63, 69, 70, 71 ],\n    maja: 95,\n    mala: 154,\n  },\n  {\n    title: \"2020-06-03 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 13, 14, 17, 20, 25, 28, 29, 31, 33, 36, 37, 41, 43, 46, 48, 49, 52, 56, 57, 59, 62, 63, 64, 65, 70, 71 ],\n    maja: 99,\n    mala: 87,\n  },\n  {\n    title: \"2020-06-03 3\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 38, 41, 43, 46, 48, 49, 52, 55, 57, 59, 60, 61, 63, 70, 71, 72 ],\n    maja: 98,\n    george: 96,\n  },\n  {\n    title: \"2020-06-03 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 40, 41, 43, 46, 47, 48, 49, 52, 55, 57, 59, 61, 62, 63, 70, 71, 72 ],\n    maja: 93,\n    george: 119,\n  },\n  // {\n  //   title: \"2020-06-03 5\",\n  //   data: [ 3, 4, 5, 8, 10, 11, 13, 15, 17, 20, 25, 26, 30, 32, 34, 36, 38, 41, 43, 44, 46, 47, 48, 50, 52, 55, 57, 59, 60, 61, 63, 66, 71, 72 ],\n  //   maja: 101,\n  //   boogie: 75,\n  // },\n  {\n    title: \"2020-06-03 6\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 20, 25, 26, 29, 31, 34, 36, 38, 41, 45, 46, 48, 49, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 92,\n    ada: 69,\n  },\n  // 20200604\n  {\n    title: \"2020-06-04 1\",\n    data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 20, 24, 25, 27, 29, 30, 32, 33, 39, 43, 44, 48, 49, 50, 51, 56, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 92,\n    ada: 96,\n  },\n  {\n    title: \"2020-06-04 2\",\n    data: [ 3, 4, 5, 8, 9, 11, 13, 15, 17, 19, 24, 25, 29, 32, 34, 38, 40, 41, 43, 46, 47, 48, 49, 52, 53, 57, 60, 61, 64, 68, 71, 73 ],\n    maja: 87,\n    george: 93,\n  },\n  // {\n  //   title: \"2020-06-04 3\",\n  //   data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 19, 24, 26, 29, 32, 34, 38, 40, 41, 44, 46, 48, 50, 52, 55, 57, 59, 62, 65, 68, 71, 72, 73 ],\n  //   maja: 96,\n  //   boogie: 184,\n  // },\n  {\n    title: \"2020-06-04 4\",\n    data: [ 3, 4, 5, 7, 8, 11, 13, 15, 17, 20, 24, 27, 29, 30, 34, 38, 40, 41, 45, 46, 48, 51, 52, 54, 57, 59, 61, 63, 64, 70, 71, 73 ],\n    maja: 97,\n    ada: 98,\n  },\n  // 20200605\n  // {\n  //   title: \"2020-06-05 1\",\n  //   data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 20, 24, 27, 29, 31, 34, 38, 40, 41, 43, 44, 48, 51, 52, 54, 57, 62, 63, 70, 71, 72, 73 ],\n  //   maja: 89,\n  //   boogie: 108,\n  // },\n  // {\n  //   title: \"2020-06-05 2\",\n  //   data: [ 3, 4, 5, 7, 9,  11, 12, 14, 15, 16, 24, 27, 29, 31, 34, 38, 40, 41, 43, 45, 48, 49, 51, 54, 56, 60, 63, 69, 70, 71, 73 ],\n  //   maja: 97,\n  //   boogie: 85,\n  // },\n  {\n    title: \"2020-06-05 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 25, 27, 29, 31, 34, 37, 40, 41, 43, 48, 49, 52, 55, 57, 59, 62, 65, 68, 69, 71, 73 ],\n    maja: 93,\n    george: 124,\n  },\n  {\n    title: \"2020-06-05 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 14, 16, 19, 26, 27, 29, 31, 34, 36, 40, 41, 46, 48, 51, 52, 55, 57, 59, 61, 62, 64, 65, 68, 71 ],\n    maja: 86,\n    george: 150,\n  },\n  {\n    title: \"2020-06-05 5\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 13, 15, 20, 26, 27, 31, 32, 34, 36, 39, 41, 44, 46, 51, 52, 54, 56, 59, 61, 62, 63, 65, 69, 71 ],\n    maja: 95,\n    ada: 90,\n  },\n  // 20200608\n  // {\n  //   title: \"2020-06-08 1\",\n  //   data: [ 3, 4, 5 ],\n  //   maja: 88,\n  //   george: 83,\n  // },\n  {\n    title: \"2020-06-08 2\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 27, 31, 32, 34, 36, 38, 41, 43, 48, 49, 52, 55, 57, 59, 61, 62, 63, 64, 66, 69 ],\n    maja: 90,\n    george: 117,\n  },\n  {\n    title: \"2020-06-08 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 26, 31, 32, 34, 36, 38, 41, 43, 48, 49, 51, 55, 57, 59, 61, 62, 63, 64, 66, 69, 70 ],\n    maja: 97,\n    mala: 98,\n  },\n  {\n    title: \"2020-06-08 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 12, 16, 17, 20, 24, 25, 31, 33, 34, 36, 38, 41, 46, 48, 49, 52, 55, 57, 59, 60, 63, 64, 65, 66, 70 ],\n    maja: 105,\n    mala: 133,\n  },\n  // {\n  //   title: \"2020-06-08 5\",\n  //   data: [ 3, 4, 5, 9, 10, 11, 13, 16, 17, 20, 25, 27, 30, 33, 34, 37, 38, 41, 45, 48, 50, 51, 55, 57, 59, 60, 63, 65, 66, 70, 72 ],\n  //   maja: 107,\n  //   boogie: 88,\n  // },\n  // {\n  //   title: \"2020-06-08 6\",\n  //   data: [ 3, 4, 5, 8, 10, 11, 13, 14, 16, 21, 25, 27, 30, 33, 34, 36, 37, 38, 43, 48, 51, 52, 55, 56, 59, 62, 63, 65, 70, 71, 72 ],\n  //   maja: 105,\n  //   boogie: 129,\n  // },\n  // 20200609\n  // {\n  //   title: \"2020-06-09 1\",\n  //   data: [ 3, 4, 5, 8, 10, 11, 12, 14, 15, 16, 19, 21, 25, 28, 30, 31, 35, 37, 39, 40, 43, 48, 51, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n  //   maja: 82,\n  //   mala: 0,\n  // },\n  {\n    title: \"2020-06-09 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 12, 14, 16, 19, 24, 28, 29, 30, 35, 39, 40, 41, 45, 48, 50, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n    maja: 89,\n    george: 153,\n  },\n  // {\n  //   title: \"2020-06-09 3\",\n  //   data: [ 3, 4, 5, 7, 10, 11, 13, 14, 16, 19, 25, 26, 30, 33, 35, 37, 40, 41, 45, 48, 50, 51, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n  //   maja: 109,\n  //   boogie: 94,\n  // },\n  // 20200611\n  {\n    title: \"2020-06-11 1\",\n    data: [ 1, 3, 5, 7, 10, 11, 13, 15, 16, 20, 24, 25, 30, 32, 35, 36, 37, 39, 44, 48, 50, 51, 54, 56, 59, 60, 62, 63, 65, 70, 72 ],\n    maja: 140,\n    george: 119, // 114 / 124 AW\n  },\n  {\n    title: \"2020-06-11 2\",\n    data: [ 1, 3, 5, 7, 9,  10, 11, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 46, 48, 49, 52, 54, 56, 59, 61, 62, 63, 69, 70, 71 ],\n    maja: 97,\n    mala: 116, // 107 / 125 AW\n  },\n  // {\n  //   title: \"2020-06-11 3\",\n  //   data: [ 1, 3, 5, 7, 10, 11, 12, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 45, 48, 50, 52, 54, 56, 59, 61, 63, 64, 66, 70, 71 ],\n  //   maja: 87,\n  //   boogie: 113, // 105 / 122 AW\n  // },\n  // {\n  //   title: \"2020-06-11 4\",\n  //   data: [ 1, 3, 5, 7, 10, 12, 14, 15, 16, 20, 24, 27, 30, 33, 35, 36, 38, 39, 45, 48, 50, 51, 54, 55, 59, 61, 63, 64, 66, 70, 71 ],\n  //   maja: 117,\n  //   boogie: 87,\n  // },\n  // 20200612\n  {\n    title: \"2020-06-12 1\",\n    data: [ 1, 3, 4, 7, 10, 12, 14, 15, 16, 20, 24, 25, 30, 34, 35, 36, 37, 39, 43, 49, 50, 51, 52, 54, 57, 59, 62, 63, 69, 70, 71, 73 ],\n    maja: 106,\n    george: 106, // 113/99aw\n  },\n  {\n    title: \"2020-06-12 2\",\n    data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 37, 38, 39, 43, 44, 50, 51, 52, 54, 57, 59, 61, 62, 63, 71, 73 ],\n    maja: 125,\n    george: 125,\n  },\n  // {\n  //   title: \"2020-06-12 3\",\n  //   data: [ 1, 3, 5, 7, 9,  11, 12, 15, 16, 21, 24, 26, 30, 34, 35, 37, 39, 40, 43, 48, 49, 51, 56, 57, 59, 61, 62, 68, 69, 71, 73 ],\n  //   maja: 124,\n  //   boogie: 154,\n  // },\n  // {\n  //   title: \"2020-06-12 4\",\n  //   data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 21, 26, 27, 30, 34, 35, 37, 39, 40, 44, 48, 49, 51, 56, 57, 59, 61, 66, 68, 71, 72, 73 ],\n  //   maja: 88,\n  //   boogie: 97,\n  // },\n  // 20200615\n  {\n    title: \"2020-06-15 1\",\n    data: [ 1, 3, 5, 8, 9,  11, 13, 14, 16, 21, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 51, 55, 57, 59, 61, 66, 68, 69, 70, 71 ],\n    maja: 80,\n    george: 176, // 174/178aw\n  },\n  {\n    title: \"2020-06-15 2\",\n    data: [ 1, 3, 4, 8, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 52, 55, 56, 59, 61, 64, 66, 68, 70, 71 ],\n    maja: 84,\n    george: 140, // 147/133aw\n  },\n  // {\n  //   title: \"2020-06-15 3\",\n  //   data: [ 1, 3, 5, 9, 10, 11, 12, 14, 16, 21, 26, 28, 30, 33, 35, 38, 39, 40, 43, 44, 48, 50, 51, 55, 57, 59, 61, 66, 68, 71, 72, 73 ],\n  //   maja: 87,\n  //   boogie: 139,\n  // },\n  // {\n  //   title: \"2020-06-15 4\",\n  //   data: [ 1, 3, 5, 7, 9, 11, 12, 13, 14, 21, 26, 28, 30, 34, 35, 38, 39, 40, 43, 45, 48, 50, 51, 55, 57, 59, 61, 63, 66, 71, 72, 73 ],\n  //   maja: 70,\n  //   boogie: 126,\n  // },\n  // {\n  //   title: \"2020-06-15 5\",\n  //   data: [],\n  // },\n  // {\n  //   title: \"2020-06-15 6\",\n  //   data: [],\n  // },\n  // 20200616\n  // {\n  //   title: \"2020-06-16 1\",\n  //   data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 26, 28, 32, 34, 35, 36, 39, 41, 43, 46, 49, 50, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n  //   maja: 102,\n  //   boogie: 124, // 124 / AW\n  // },\n  // {\n  //   title: \"2020-06-16 2\",\n  //   data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 37, 39, 41, 43, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n  //   maja: 85,\n  //   boogie: 123,\n  // },\n  // {\n  //   title: \"2020-06-16 3\",\n  //   data: [],\n  // },\n  // 20200618\n  // {\n  //   title: \"2020-06-18 1\",\n  //   data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n  //   maja: 89,\n  //   boogie: 155,\n  // },\n  // {\n  //   title: \"2020-06-18 2\",\n  //   data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 30, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n  //   maja: 115,\n  //   boogie: 130,\n  // },\n  {\n    title: \"2020-06-18 3\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 25, 26, 32, 34, 35, 36, 40, 41, 43, 45, 49, 51, 52, 56, 57, 59, 60, 62, 64, 65, 68, 70 ],\n    maja: 116,\n    george: 157,\n  },\n  {\n    title: \"2020-06-18 4\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 17, 21, 25, 26, 30, 34, 35, 36, 40, 41, 43, 46, 49, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 107,\n    ada: 97,\n  },\n  {\n    title: \"2020-06-18 5\",\n    data: [ 3, 5, 9, 10, 11, 13, 16, 17, 21, 26, 27, 32, 34, 35, 36, 40, 41, 43, 44, 50, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 108,\n    ada: 120,\n  },\n  // {\n  //   title: \"2020-06-18 6\",\n  //   data: [],\n  // },\n  // 20200619\n  // {\n  //   title: \"2020-06-19 1\",\n  //   data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 24, 27, 32, 34, 35, 36, 38, 41, 43, 44, 49, 50, 52, 55, 57, 59, 60, 61, 62, 64, 65, 68 ],\n  //   maja: 73,\n  //   boogie: 66,\n  // },\n  // {\n  //   title: \"2020-06-19 2\",\n  //   data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 27, 28, 31, 32, 34, 36, 38, 41, 43, 44, 49, 50, 52, 54, 55, 59, 60, 61, 64, 65, 68, 71 ],\n  //   maja: 109,\n  //   boogie: 91,\n  // },\n  {\n    title: \"2020-06-19 3\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 30, 34, 36, 40, 41, 43, 44, 49, 50, 51, 56, 57, 59, 60, 61, 64, 65, 68, 71 ], // 20?\n    maja: 76,\n    george: 144,\n  },\n  {\n    title: \"2020-06-19 4\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 34, 35, 36, 37, 38, 43, 44, 49, 51, 52, 55, 57, 59, 60, 61, 62, 64, 68, 70 ],\n    maja: 118,\n    ada: 97,\n  },\n  // 20200622\n  {\n    title: \"2020-06-22 1\",\n    data: [ 1, 3, 4, 7, 8, 11, 12, 13, 16, 20, 27, 28, 31, 34, 35, 37, 39, 40, 44, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 89,\n    ada: 72,\n  },\n  {\n    title: \"2020-06-22 2\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 27, 28, 29, 34, 35, 37, 39, 40, 43, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 84,\n    ada: 92,\n  },\n  {\n    title: \"2020-06-22 3\",\n    data: [ 1, 3, 4, 8, 9, 11, 13, 14, 16, 20, 26, 28, 30, 34, 35, 37, 39, 40, 43, 46, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 86,\n    george: 90,\n  },\n  {\n    title: \"2020-06-22 4\",\n    data: [ 1, 2, 4, 8, 9, 11, 12, 14, 17, 20, 25, 28, 30, 33, 35, 37, 39, 40, 45, 46, 48, 51, 52, 55, 56, 59, 60, 64, 68, 70, 71, 73 ],\n    maja: 86,\n    george: 85,\n  },\n  // 20200623\n  {\n    title: \"2020-06-23 1\",\n    data: [ 1, 2, 4, 8, 10, 11, 12, 16, 17, 21, 26, 28, 29, 32, 35, 36, 39, 40, 44, 46, 49, 50, 52, 54, 56, 59, 60, 65, 66, 68, 72, 73 ],\n    maja: 81,\n    george: 167,\n  },\n  {\n    title: \"2020-06-23 2\",\n    data: [ 1, 2, 4, 7, 10, 11, 12, 16, 17, 21, 26, 28, 29, 33, 35, 36, 39, 40, 44, 46, 48, 50, 52, 54, 56, 59, 60, 65, 66, 68, 69, 73 ],\n    maja: 90,\n    george: 88,\n  },\n  {\n    title: \"2020-06-23 3\",\n    data: [ 1, 2, 5, 7, 10, 11, 12, 16, 17, 21, 26, 28, 29, 33, 35, 36, 39, 40, 44, 46, 48, 50, 52, 55, 56, 59, 60, 61, 62, 68, 69, 73 ],\n    maja: 85,\n    ada: 123,\n  },\n  {\n    title: \"2020-06-23 4\",\n    data: [ 1, 2, 4, 7, 10, 11, 12, 16, 17, 21, 24, 28, 29, 31, 35, 36, 39, 40, 44, 46, 48, 50, 52, 55, 56, 59, 60, 61, 66, 68, 72, 73 ],\n    maja: 85,\n    ada: 90,\n  },\n  // {\n  //   title: \"2020-06-23 5\",\n  //   data: [],\n  // },\n  // 20200626\n  // {\n  //   title: \"2020-06-26 1\",\n  //   data: [ 1, 2, 4, 9, 10, 11, 12, 13, 15, 20, 25, 26, 29, 33, 35, 36, 39, 40, 43, 46, 49, 50, 51, 52, 54, 57, 59, 60, 63, 64, 66, 70, 73 ],\n  //   maja: 88,\n  //   boogie: 201,\n  // },\n  // {\n  //   title: \"2020-06-26 2\",\n  //   data: [ 1, 2, 5, 9, 10, 11, 12, 13, 17, 21, 24, 25, 29, 33, 35, 36, 37, 40, 43, 46, 49, 51, 54, 57, 59, 60, 63, 64, 66, 70, 73 ],\n  //   maja: 89,\n  //   boogie: 146,\n  // },\n  {\n    title: \"2020-06-26 3\",\n    data: [ 1, 2, 5, 9, 10, 11, 12, 13, 17, 21, 24, 25, 29, 32, 35, 36, 39, 40, 45, 46, 49, 51, 52, 54, 56, 59, 60, 66, 68, 69, 70, 73 ],\n    maja: 83,\n    ada: 143,\n  },\n  {\n    title: \"2020-06-26 4\",\n    data: [ 1, 2, 4, 8, 10, 11, 14, 15, 17, 19, 25, 26, 30, 32, 34, 36, 37, 38, 45, 46, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 69, 70 ],\n    maja: 96,\n    ada: 92,\n  },\n  // 20200629\n  // {\n  //   title: \"2020-06-29 1\",\n  //   data: [ 1, 2, 4, 7, 9,  10, 11, 12, 17, 21, 24, 27, 29, 30, 34, 38, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 69, 72 ],\n  //   maja: 85, // 84/85aw\n  //   boogie: 186,\n  // },\n  // {\n  //   title: \"2020-06-29 2\",\n  //   data: [ 1, 2, 4, 7, 10, 11, 12, 13, 17, 21, 24, 27, 30, 32, 34, 36, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 70, 72 ],\n  //   maja: 81, // 81/81aw\n  //   boogie: 182,\n  // },\n  {\n    title: \"2020-06-29 3\",\n    data: [ 1, 2, 4, 8, 10, 11, 12, 13, 17, 21, 24, 27, 30, 32, 34, 36, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 65, 68, 72 ],\n    maja: 76, // 73/79aw\n    ada: 180,\n  },\n  // 20200630\n  // {\n  //   title: \"2020-06-30 1\",\n  //   data: [ 1, 2, 4, 10, 11, 12, 13, 16, 17, 21, 43, 46, 49, 51, 52, 57, 59, 60, 61, 62, 65, 68, 72 ],\n  //   maja: 82, // 83/81aw\n  //   ada: 104,\n  // },\n  {\n    title: \"2020-06-30 2\",\n    data: [ 1, 2, 4, 7,  10, 11, 12, 13, 17, 21, 24, 26, 30, 31, 34, 36, 39, 40, 44, 45, 48, 51, 52, 55, 59, 60, 62, 68, 70, 72, 73 ],\n    maja: 85, // 83/86a\n    ada: 101,\n  },\n  // {\n  //   title: \"2020-06-30 3\",\n  //   data: [ 1, 2, 5, 7,  10, 11, 12, 16, 17, 21, 24, 26, 30, 33, 34, 36, 39, 40, 43, 46, 48, 51, 52, 55, 57, 59, 60, 61, 62, 65, 68, 72 ],\n  //   maja: 78, // 77/79aw\n  //   boogie: 147,\n  // },\n  // 20200702\n  // {\n  //   title: \"2020-07-02 1\",\n  //   data: [ 1, 2, 4, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 33, 34, 36, 39, 40, 43, 46, 47, 49, 51, 55, 57, 59, 60, 61, 68, 69, 70, 71 ],\n  //   maja: 78, // 74/82aw\n  //   boogie: 192,\n  // },\n  // {\n  //   title: \"2020-07-02 2\",\n  //   data: [ 1, 2, 5, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 49, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n  //   maja: 91, // 83/98aw\n  //   boogie: 167,\n  // },\n  {\n    title: \"2020-07-02 3\",\n    data: [ 1, 2, 4, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 48, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n    maja: 90, // 87/92aw\n    ada: 167,\n  },\n  {\n    title: \"2020-07-02 4\",\n    data: [ 1, 2, 4, 9, 10, 12, 13, 15, 17, 20, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 48, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n    maja: 90, // 85/94aw\n    ada: 97,\n  },\n  // // 20200703\n  // {\n  //   title: \"2020-07-03 1\",\n  //   data: [ ],\n  //   maja: 88,\n  //   boogie: 78,\n  // },\n  // {\n  //   title: \"2020-07-03 2\",\n  //   data: [ ],\n  //   maja: 74,\n  //   boogie: 152,\n  // },\n  // {\n  //   title: \"2020-07-03 3\",\n  //   data: [ ],\n  //   maja: 74,\n  //   ada: 210,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: 87,\n  //   ada: 210,\n  // },\n  // // 202007\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n];\n","export const layoutSize = { x: 7, y: 5, z: 5 };\n\nexport default [\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 1, 0,\n  0, 1, 1, 0, 0, 1, 1,\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 0, 0, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 1, 1, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 0, 0, 1, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 0, 1, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 0, 0,\n  0, 0, 1, 1, 0, 0, 0,\n];"],"sourceRoot":""}