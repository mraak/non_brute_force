{"version":3,"sources":["store/layout.js","data/tracks.js","store/size.js","store/graph.js","store/ids.js","utils.js","store/training.js","store/iterations.js","ui/colors.js","ui/components.js","ui/Header.js","formatters.js","ui/HorizontalPreview.js","ui/pages/Archive.js","ui/Heartrate.js","ui/Sidebar.js","store/phase.js","ui/pages/Phase1.js","store/model.js","store/progress.js","ui/Generator.js","ui/Train.js","ui/pages/Phase2.js","ui/pages/Phase3.js","ui/Preview.js","ui/pages/Phase4.js","ui/pages/Main.js","ui/pages/Map.js","ui/Redesign.js","index.js","data/iterations.js","data/layout.js"],"names":["setLayout","createEvent","layout$","restore","horizontalTracks","verticalTracks","setSize","size$","linksGraph$","combine","layout","size","graph","Graph","allowSelfLoops","edgeKeyGenerator","undirected","source","target","attributes","multi","type","id","i","fromIndex","addNode","nodeEntries","a","x","j","toIndex","y","z","hasNode","addEdge","clusters$","linksGraph","idClusters","clusterIds","traverseNode","getNodeAttributes","process","hasEdge","push","nodes","clusterIds$","map","clusters","key","sort","idClusters$","ids$","item","xy","Math","floor","generateIteration","p","getState","ids","id2index","Object","fromEntries","keys","index","horizontalSteps","s","e","steps","verticalSteps","pick","random","length","addPending","floorTiles","pending","indexOf","k","iteration","floorIndex","n","row","round","is","filter","b","iterationToLayout","join","xs","ys","setTraining","training$","setHardcodedIterations","hardcodedIterations$","setFetchedCurrentIteration","fetchedCurrentIteration$","currentIterationTimeout","fetchCurrentIteration","createEffect","use","clearTimeout","fetch","then","response","json","done","watch","params","result","finally","setTimeout","fetchedCurrentIteration","iterationLayout","data","aggregate","human","animal","combined","setCurrentIteration","currentIteration$","setFetchedPreviousIteration","fetchedPreviousIteration$","previousIterationTimeout","fetchPreviousIteration","fetchedPreviousIteration","setPreviousIteration","previousIteration$","setFetchedIterations","fetchedIterations$","iterationTimeout","fetchIterations","hardcodedIterations","fetchedIterations","all","timestamp","iterations","entries","bpm","maja","rates","dog","george","boogie","mala","ada","reduce","memo","rate","heartRateDog","valid","delta","abs","actualRank","Number","isFinite","trainable","output","Array","from","_","ended","stop","setIterations","iterations$","training","refresh","border","label","styled","img","Navigation","header","NavItem","NavLink","colors","Title","h3","Label","div","Value","BigValue","Center","Panel","Table","Apart","small","Chart","Button","button","HR","to","exact","formatBpm","formatRank","rank","useStore","ref","useRef","useEffect","current","p5","W","H","noneColor","color","fillColor","textColor","setup","createCanvas","CANVAS","noLoop","textSize","textAlign","CENTER","stroke","draw","pos","posX","posY","c","fill","rect","text","TILE_SIZE","sketch","remove","saveIteration","diff","payload","_id","console","log","method","headers","body","JSON","stringify","Container","Grid","rankColor","d3","interpolator","domain","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","renderRank","targetRank","style","backgroundColor","format","useState","setValid","useMemo","Header","accessor","Cell","original","value","checked","disabled","onChange","date","HorizontalPreview","expectedRank","trainableData","as","Heart","ecg","options","adDuration","vdDuration","vrDuration","this","beatDuration","nextBeat","nextBeatIn","voltage","addValue","time","randomGaussian","sin","setVoltage","noise","splice","drawBPM","updateBPM","updateTimeToNextBeat","atriaDepolarization","ventricleDepolarization","ventricleRepolarization","draw_i","ECG","graphZero","values","maxValuesHistory","maximumX","undefined","alpha","line","circle","v","pop","updateDate","updateBloodPressure","updateVentilation","updateTemperature","updateHemoglobin","Date","heart","WEBGL","colorMode","RGB","angleMode","DEGREES","translate","noStroke","beat","plotValues","updateInfo","prototype","noiseSeed","scale","min","max","setRespHuman","respHuman$","setRespAnimal","respAnimal$","setTempHuman","tempHuman$","setTempAnimal","tempAnimal$","setInterval","aside","respHuman","respAnimal","tempHuman","tempAnimal","gridColumn","humanBpm","animalBpm","humanEntries","animalEntries","humanStart","humanStop","animalStart","animalStop","paddingBottom","paddingLeft","paddingRight","paddingTop","src","display","height","Heartrate","toFixed","setPhase","phase$","previousMaja","previousDog","width","margin","top","right","bottom","left","strokeDasharray","yAxisId","dataKey","dot","connectNulls","isAnimationActive","unit","labelFormatter","formatter","model$","model","tf","layers","conv2d","batchInputShape","kernelSize","filters","strides","activation","kernelInitializer","flatten","dense","units","compile","loss","metrics","optimizer","adam","setProgress","setAttempts","attempts$","setRank","rank$","now","title","toISOString","attempts","ranges","animationCompleted","find","l","tries","pendingRank","currentRank","number","predict","preds","argMax","argMax1","progress","animationCompletedPromise","Promise","resolve","reject","loop","redraw","fail","error","rectColor","layoutCount","progressIndex","posZ","HIDDEN_WIDTH","HIDDEN_HEIGHT","OUTPUT_WIDTH","getAccumulator","accumulators","callback","metric","validIterations","setTrainStats","trainStats$","train","historyOpts","xLabel","fit","epochs","shuffle","callbacks","onEpochEnd","args","callbackName","metricLogs","presentMetrics","accumulator","onClick","stats","tfvis","history","padding","Generator","frameRate","clear","ambientLight","rotateX","rotateY","mouseX","PI","plane","edgeEntries","t","sp","tp","strokeWeight","href","Preview","Train","PhaseTitle","phase","areas","gap","Phase","Main","main","Sidebar","Phase4","Phase3","Phase2","Phase1","root","document","getElementById","resize","content","getBoundingClientRect","scaleX","scaleY","transform","window","addEventListener","basename","path","Archive","Map","props","split","ReactDOM"],"mappings":"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","file":"static/js/main.8bef5c61.chunk.js","sourcesContent":["import { createEvent, restore } from \"effector\";\n\nexport const setLayout = createEvent();\nexport const layout$ = restore(setLayout, null);\n","export const horizontalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  [\n    [ 1, 1, 1 ], // fixed\n\n    [ 1, 2, 3 ],\n    [ 1, 4, 5 ],\n  ],\n  // 2. floor\n  [\n    // [ 1, 0, 6 ], // empty\n\n    [ 2, 7, 10 ],\n\n    [ 4, 11, 17 ],\n\n    // [ 1, 0, 18 ], // empty\n    // [ 1, 0, 19 ],\n    // [ 1, 0, 20 ],\n    // [ 1, 0, 21 ],\n    [ 1, 19, 21 ],\n\n    // [ 1, 0, 22 ], // empty\n  ],\n  // 3. floor\n  [\n    // [ 1, 0, 23 ], // empty\n\n    [ 2, 24, 28 ],\n\n    [ 3, 29, 35 ],\n\n    [ 3, 36, 41 ],\n\n    // [ 1, 0, 42 ], // empty\n  ],\n  // 4. floor\n  [\n    // [ 2, 43, 47 ],\n    [ 2, 43, 46 ], // 47 temp empty\n\n    // [ 4, 48, 53 ],\n    [ 3, 48, 52 ], // 53 temp empty\n\n    // [ 2, 54, 58 ],\n    [ 2, 54, 57 ], // 58 temp empty\n\n    [ 1, 59, 59 ], // fixed\n  ],\n  // 5. floor\n  null,\n];\n\nexport const verticalTracks = [\n  // [ total track count, start tile id, end tile id ]\n  // tile ids start with 1. 0 means a track is removable\n\n  // 1. floor\n  null,\n  // 2. floor\n  null,\n  // 3. floor\n  null,\n  // 4. floor\n  null,\n  // 5. floor\n  [\n    [ 1, 63, 68 ],\n\n    [ 1, 64, 72 ],\n\n    [ 2, 61, 73 ],\n\n    [ 2, 60, 71 ],\n  ],\n];\n","import { createEvent, restore } from \"effector\";\n\nexport const setSize = createEvent();\nexport const size$ = restore(setSize, null);\n","import { combine } from \"effector\";\nimport Graph from \"graphology\";\n\nimport { layout$ } from \"./layout\";\nimport { size$ } from \"./size\";\n\nimport { fromIndex, toIndex } from \"../utils\";\n\n// all possible links / paths, ignoring clusters and floors\nexport const linksGraph$ = combine(layout$, size$, (layout, size) => {\n  if(layout === null || size === null)\n    return null;\n\n  const graph = new Graph({\n    allowSelfLoops: false,\n    edgeKeyGenerator: ({ undirected, source, target, attributes }) => `${source}->${target}`,\n    multi: true,\n    type: \"directed\",\n  });\n\n  let id = 0;\n  for(let i in layout) {\n    if(layout[i] === 0)\n      continue;\n\n    const attributes = {\n      ...fromIndex(size, i),\n      i,\n      id: ++id,\n    };\n\n    graph.addNode(i, attributes);\n  }\n\n  for(let [ i, a ] of graph.nodeEntries()) {\n    // right\n    if(a.x < size.x - 1) {\n      const j = toIndex(size, a.x + 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 1, y: 0, z: 0 });\n    }\n    // down\n    if(a.y < size.y - 1) {\n      const j = toIndex(size, a.x, a.y + 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: 1, z: 0 });\n    }\n    // // left\n    if(a.x > 0) {\n      const j = toIndex(size, a.x - 1, a.y, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: -1, y: 0, z: 0 });\n    }\n    // up\n    if(a.y > 0) {\n      const j = toIndex(size, a.x, a.y - 1, a.z);\n      if(graph.hasNode(j))\n        graph.addEdge(i, j, { x: 0, y: -1, z: 0 });\n    }\n\n    // next floor\n    if(a.z < size.z - 1) {\n      // right\n      if(a.x < size.x - 1) {\n        const j = toIndex(size, a.x + 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 1, y: 0, z: 1 });\n      }\n      // down\n      if(a.y < size.y - 1) {\n        const j = toIndex(size, a.x, a.y + 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: 1, z: 1 });\n      }\n      // left\n      if(a.x > 0) {\n        const j = toIndex(size, a.x - 1, a.y, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: -1, y: 0, z: 1 });\n      }\n      // up\n      if(a.y > 0) {\n        const j = toIndex(size, a.x, a.y - 1, a.z + 1);\n        if(graph.hasNode(j))\n          graph.addEdge(i, j, { x: 0, y: -1, z: 1 });\n      }\n    }\n  }\n\n  return graph;\n});\n\n// group neighbors (on the same floor) into clusters\nconst clusters$ = combine(linksGraph$, size$, (linksGraph, size) => {\n  if(linksGraph === null || size === null)\n    return null;\n\n  let id = 0;\n  const idClusters = {};\n  const clusterIds = {};\n\n  const traverseNode = (i) => {\n    const a = linksGraph.getNodeAttributes(i);\n    // right\n    if(a.x < size.x - 1)\n      process(i, toIndex(size, a.x + 1, a.y, a.z));\n    // down\n    if(a.y < size.y - 1)\n      process(i, toIndex(size, a.x, a.y + 1, a.z));\n    // left\n    if(a.x > 0)\n      process(i, toIndex(size, a.x - 1, a.y, a.z));\n    // up\n    if(a.y > 0)\n      process(i, toIndex(size, a.x, a.y - 1, a.z));\n  };\n\n  const process = (i, j) => {\n    if(i in idClusters && j in idClusters)\n      return;\n\n    if(linksGraph.hasNode(j) && linksGraph.hasEdge(i, j)) {\n      if(!(i in idClusters)) {\n        idClusters[i] = ++id;\n        clusterIds[idClusters[i]] = [ +i ];\n      }\n\n      if(!(j in idClusters)) {\n        idClusters[j] = idClusters[i];\n        clusterIds[idClusters[j]].push(+j);\n      }\n\n      traverseNode(j);\n    }\n  };\n\n  for(let i of linksGraph.nodes())\n    traverseNode(+i);\n\n  return [ clusterIds, idClusters ];\n});\nexport const clusterIds$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ clusterIds, _ ] = clusters;\n\n  for(let key in clusterIds)\n    clusterIds[key].sort();\n\n  return clusterIds;\n});\nexport const idClusters$ = clusters$.map((clusters) => {\n  if(clusters === null)\n    return null;\n\n  const [ _, idClusters ] = clusters;\n\n  return idClusters;\n});\n","import { layout$ } from \"./layout\";\n\nexport const ids$ = layout$.map((layout) => {\n  if(!layout)\n    return null;\n\n  let id = 0;\n\n  return layout.map((item) => item === 0 ? 0 : ++id);\n});\n","import { horizontalTracks, verticalTracks } from \"./data/tracks\";\nimport { clusterIds$, idClusters$, linksGraph$ } from \"./store/graph\";\nimport { ids$ } from \"./store/ids\";\nimport { size$ } from \"./store/size\";\n\nexport function inside(p, [ x, y, w, h ]) {\n  return p.mouseX > x && p.mouseX < x + w && p.mouseY > y && p.mouseY < y + h;\n}\n\nexport function fromIndex(size, i) {\n  const xy = size.x * size.y;\n  const z = Math.floor(i / xy);\n\n  i -= z * xy;\n  const y = Math.floor(i / size.x);\n  const x = i - y * size.x;\n\n  return { x, y, z };\n}\nexport function toIndex(size, x, y, z) {\n  return z * size.x * size.y + y * size.x + x;\n}\n\nexport const generateIteration = (p) => {\n  const clusterIds = clusterIds$.getState();\n  const idClusters = idClusters$.getState();\n  const linksGraph = linksGraph$.getState();\n  const ids = ids$.getState();\n  const size = size$.getState();\n\n  const id2index = Object.fromEntries(Object.keys(idClusters).map((index) => [ ids[index], index ]));\n  // const edges = Array.from(linksGraph.edgeEntries());\n\n  // console.log(\"clusterIds\", clusterIds);\n  // console.log(\"idClusters\", idClusters);\n  // // console.log(\"linksGraph\", edges.filter(([ k, ka, s ]) => s == 19)); // ids[+s] === 1));\n  // console.log(\"ids\", ids);\n\n  const horizontalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x + 1, a.y, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n  const verticalSteps = (s, e) => {\n    let steps = [ s ];\n\n    for(let i = s; i !== e;) {\n      const a = linksGraph.getNodeAttributes(id2index[i]);\n\n      i = ids[toIndex(size, a.x, a.y + 1, a.z)];\n\n      steps = [ ...steps, i ];\n    }\n\n    return steps;\n  };\n\n  const pick = (steps) => steps[Math.floor(Math.random() * steps.length)];\n\n  const addPending = (i, a, floorTiles, pending) => {\n    if(a.x < 0 || a.y < 0 || a.x >= size.x || a.y >= size.y)\n      return;\n\n    const j = toIndex(size, a.x, a.y, a.z);\n    if(!linksGraph.hasEdge(i, j) || floorTiles.indexOf(ids[j]) < 0) {\n      const k = toIndex(size, a.x, a.y, a.z + 1);\n      if(linksGraph.hasEdge(i, k) && pending.indexOf(ids[k]) < 0)\n        pending.push(ids[k]);\n    }\n  };\n\n  let iteration = [];\n  let pending = [];\n\n  for(let floorIndex = 0; floorIndex < 5; ++floorIndex) {\n    const floor = horizontalTracks[floorIndex] || verticalTracks[floorIndex];\n\n    let floorTiles = [];\n\n    for(let [ n, s, e ] of floor) {\n      const steps = s === 0 ? null : horizontalTracks[floorIndex] ? horizontalSteps(s, e) : verticalSteps(s, e);\n      const row = [];\n\n      if(pending.length > 0) {\n        if(s === 0) {\n          const i = pending.indexOf(e);\n          if(i > -1)\n            row.push(e);\n          else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        } else {\n          const is = pending.filter((i) => steps.indexOf(i) > -1);\n          if(is.length > 0) {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(Math.random() < .5)\n                  id = is[Math.floor(Math.random() * is.length)];\n                else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              row.push(id);\n            }\n          } else {\n            for(let i = 0; i < n; ++i) {\n              let id = 0;\n\n              do {\n                if(s === 0) {\n                  id = [ s, e ][Math.round(Math.random())];\n                } else {\n                  id = pick(steps);\n                }\n              } while(row.indexOf(id) > -1);\n\n              if(id > 0)\n                row.push(id);\n            }\n          }\n        }\n      } else {\n        for(let i = 0; i < n; ++i) {\n          let id = 0;\n\n          do {\n            if(s === 0) {\n              id = [ s, e ][Math.round(Math.random())];\n            } else {\n              id = pick(steps);\n            }\n          } while(row.indexOf(id) > -1);\n\n          if(id > 0)\n            row.push(id);\n        }\n      }\n\n      floorTiles = [ ...floorTiles, ...row ];\n    }\n\n    pending = [];\n\n    for(let id of floorTiles) {\n      const i = id2index[id];\n      const a = linksGraph.getNodeAttributes(i);\n\n      // right\n      addPending(i, { x: a.x + 1, y: a.y, z: a.z }, floorTiles, pending);\n      // down\n      addPending(i, { x: a.x, y: a.y + 1, z: a.z }, floorTiles, pending);\n      // // left\n      addPending(i, { x: a.x - 1, y: a.y, z: a.z }, floorTiles, pending);\n      // up\n      addPending(i, { x: a.x, y: a.y - 1, z: a.z }, floorTiles, pending);\n    }\n\n    // console.log(\"pending\", pending);\n\n    iteration = [ ...iteration, ...floorTiles ];\n  }\n\n  iteration.sort((a, b) => a - b);\n\n  return iteration;\n};\n\nexport const iterationToLayout = (layout, iteration) => {\n  let id = 0;\n\n  return layout.map((item) => {\n    if(item === 0)\n      return 0;\n\n    return iteration.indexOf(++id) > -1 ? 1 : 0;\n  });\n};\n\nexport const join = (xs, ys) => xs.map((x, i) => x + ys[i]);\n","import { createEvent, restore } from \"effector\";\n\nexport const setTraining = createEvent();\nexport const training$ = restore(setTraining, false);\n","import { combine, createEffect, createEvent, restore } from \"effector\";\n\nimport { layout$ } from \"./layout\";\n\nimport { iterationToLayout, join } from \"../utils\";\nimport { training$ } from \"./training\";\n\nconst heartRateDog = (iteration) => {\n  const rates = [];\n\n  if(\"dog\" in iteration)\n    rates.push(iteration.dog);\n  if(\"george\" in iteration)\n    rates.push(iteration.george);\n  if(\"boogie\" in iteration)\n    rates.push(iteration.boogie);\n  if(\"mala\" in iteration)\n    rates.push(iteration.mala);\n  if(\"ada\" in iteration)\n    rates.push(iteration.ada);\n\n  const n = rates.length;\n\n  if(n === 0)\n    return null;\n\n  return { bpm: rates.reduce((memo, rate) => memo + rate, 0) / n, entries: [] };\n};\n\nexport const setHardcodedIterations = createEvent();\nexport const hardcodedIterations$ = restore(setHardcodedIterations, null);\n\n// current iteration\nconst setFetchedCurrentIteration = createEvent();\nexport const fetchedCurrentIteration$ = restore(setFetchedCurrentIteration, null);\n\nlet currentIterationTimeout = 0;\nexport const fetchCurrentIteration = createEffect();\nfetchCurrentIteration.use(() => {\n  clearTimeout(currentIterationTimeout);\n\n  return fetch(\"https://heartrate.miran248.now.sh/api/current-iteration\").then(\n    (response) => response.json()\n  );\n});\nfetchCurrentIteration.done.watch(({ params, result }) => {\n  setFetchedCurrentIteration(result);\n});\nfetchCurrentIteration.finally.watch(() => {\n  if(training$.getState() === false)\n    currentIterationTimeout = setTimeout(() => fetchCurrentIteration(), 30000);\n});\n\nfetchCurrentIteration();\n\ncombine(layout$, fetchedCurrentIteration$, (layout, fetchedCurrentIteration) => {\n  if(layout === null || fetchedCurrentIteration === null)\n    return;\n\n  const iterationLayout = iterationToLayout(layout, fetchedCurrentIteration.data);\n\n  const { aggregate } = fetchedCurrentIteration;\n  const { human, animal } = aggregate || { human: null, animal: null };\n\n  const iteration = {\n    ...fetchedCurrentIteration,\n    animal,\n    combined: join(layout, iterationLayout),\n    human,\n    layout: iterationLayout,\n  };\n\n  setCurrentIteration(iteration);\n});\n\nconst setCurrentIteration = createEvent();\nexport const currentIteration$ = restore(setCurrentIteration, null);\n\n// previous iteration\nexport const setFetchedPreviousIteration = createEvent();\nexport const fetchedPreviousIteration$ = restore(setFetchedPreviousIteration, null);\n\nlet previousIterationTimeout = 0;\nconst fetchPreviousIteration = createEffect();\nfetchPreviousIteration.use(() => {\n  clearTimeout(previousIterationTimeout);\n\n  return fetch(\"https://heartrate.miran248.now.sh/api/previous-iteration\").then(\n    (response) => response.json()\n  );\n});\nfetchPreviousIteration.done.watch(({ params, result }) => {\n  setFetchedPreviousIteration(result);\n});\nfetchPreviousIteration.finally.watch(() => {\n  if(training$.getState() === false)\n    previousIterationTimeout = setTimeout(() => fetchPreviousIteration(), 30000);\n});\n\nfetchPreviousIteration();\n\ncombine(layout$, fetchedPreviousIteration$, (layout, fetchedPreviousIteration) => {\n  if(layout === null || fetchedPreviousIteration === null)\n    return;\n\n  const iterationLayout = iterationToLayout(layout, fetchedPreviousIteration.data);\n  \n  const { aggregate } = fetchedPreviousIteration;\n  const { human, animal } = aggregate || { human: null, animal: null };\n\n  const iteration = {\n    ...fetchedPreviousIteration,\n    animal,\n    combined: join(layout, iterationLayout),\n    human,\n    layout: iterationLayout,\n  };\n\n  setPreviousIteration(iteration);\n});\n\nconst setPreviousIteration = createEvent();\nexport const previousIteration$ = restore(setPreviousIteration, null);\n\n// iterations\nconst setFetchedIterations = createEvent();\nexport const fetchedIterations$ = restore(setFetchedIterations, null);\n\nlet iterationTimeout = 0;\nconst fetchIterations = createEffect();\nfetchIterations.use(() => {\n  clearTimeout(iterationTimeout);\n\n  return fetch(\"https://heartrate.miran248.now.sh/api/iterations\").then(\n    (response) => response.json()\n  );\n});\nfetchIterations.done.watch(({ params, result }) => {\n  setFetchedIterations(result);\n});\nfetchIterations.finally.watch(() => {\n  if(training$.getState() === false)\n    iterationTimeout = setTimeout(() => fetchIterations(), 30000);\n});\n\nfetchIterations();\n\n// TODO: Move to utils\nconst heartRateDeltaRank = (rate) => {\n  if(rate < 5)\n    return 0; // [ 0, 5 )\n\n  if(rate < 10)\n    return 1; // [ 5, 10 )\n\n  if(rate < 20)\n    return 2; // [ 10, 20 )\n\n  if(rate < 40)\n    return 3; // [ 20, 40 )\n\n  return 4; // [ 40, inf )\n};\ncombine(layout$, hardcodedIterations$, fetchedIterations$, (layout, hardcodedIterations, fetchedIterations) => {\n  if(layout === null || hardcodedIterations === null || fetchedIterations === null)\n    return;\n\n  const all = [\n    ...hardcodedIterations,\n    ...fetchedIterations,\n  ];\n\n  all.sort((a, b) => a.timestamp - b.timestamp);\n\n  const iterations = all.map(\n    (iteration) => {\n      const iterationLayout = iterationToLayout(layout, iteration.data);\n\n      const { aggregate = null } = iteration;\n      let { human, animal } = aggregate || { human: null, animal: null };\n\n      if(\"_id\" in iteration) {\n        human = { entries: [], ...(human || {}) };\n        animal = { entries: [], ...(animal || {}) };\n\n        return {\n          ...iteration,\n          animal,\n          combined: join(layout, iterationLayout),\n          human,\n          layout: iterationLayout,\n        };\n      }\n\n      if(\"maja\" in iteration)\n        human = { bpm: iteration.maja, entries: [] };\n  \n      animal = heartRateDog(iteration);\n\n      const valid = \"valid\" in iteration ? iteration.valid : true;\n\n      const delta = human !== null && animal !== null ? Math.abs(human.bpm - animal.bpm) : null;\n      const actualRank = Number.isFinite(delta) ? heartRateDeltaRank(delta) : null;\n      const trainable = valid && Number.isFinite(actualRank);\n      const output = trainable\n        ? Array.from(Array(5), (_, i) => i === actualRank ? 1 : 0)\n        : null;\n    \n      return {\n        ...iteration,\n        animal,\n        combined: join(layout, iterationLayout),\n        human,\n        layout: iterationLayout,\n\n        actualRank,\n        aggregate,\n        delta,\n        ended: aggregate !== null && !!aggregate.stop,\n        output,\n        trainable,\n        valid,\n      };\n    }\n  );\n\n  iterations.sort((a, b) => b.timestamp - a.timestamp);\n\n  setIterations(iterations);\n});\n\nconst setIterations = createEvent();\nexport const iterations$ = restore(setIterations, null);\n\nconst clear = () => {\n  clearTimeout(currentIterationTimeout);\n  clearTimeout(previousIterationTimeout);\n  clearTimeout(iterationTimeout);\n};\n\ntraining$.watch((training) => {\n  if(training)\n    clear();\n});\n\nexport const refresh = () => {\n  fetchCurrentIteration();\n  fetchPreviousIteration();\n  fetchIterations();\n};\n","export const background = \"#0E111F\";\nexport const border = \"#1F222F\";\nexport const label = \"#9F9FA4\";\nexport const navigation = \"#198CB7\";\nexport const chartAnimal = \"#44C1EF\";\nexport const chartHuman = \"#45988E\";\nexport const valueAnimal = \"#E8A38E\";\nexport const valueHuman = \"#ED6E3D\";\nexport const title = \"#FFFFFF\";\n","import {\n  NavLink\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport * as colors from \"./colors\";\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n`;\n\n\nexport const Navigation = styled.header`\n  display: grid;\n  grid-auto-flow: row;\n  grid-auto-rows: 67px;\n  grid-gap: 21.5px;\n  grid-template-columns: repeat(3, 419px);\n`;\nexport const NavItem = styled(NavLink)`\n  border-bottom: 5px solid ${colors.border};\n  color: ${colors.border};\n  display: grid;\n  font-size: 25px;\n  place-items: center;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  &.active {\n    border-bottom: 5px solid ${colors.navigation};\n    color: ${colors.navigation};\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${colors.label};\n  display: grid !important;\n  font-size: 25px;\n  height: 46px;\n  margin: 0;\n  place-items: center;\n  text-decoration: none;\n  text-transform: uppercase;\n`;\n\nexport const Label = styled.div`\n  color: ${colors.label};\n  display: flex !important;\n  font-size: 20px;\n  line-height: 19px;\n  text-transform: uppercase;\n`;\nexport const Value = styled.div`\n  color: ${({ human }) => human ? colors.valueHuman : colors.valueAnimal};\n  display: flex !important;\n  font-size: 25px;\n  line-height: 19px;\n  justify-content: flex-end;\n  text-transform: uppercase;\n`;\nexport const BigValue = styled.div`\n  align-items: flex-end;\n  color: ${({ human }) => human ? colors.valueHuman : colors.valueAnimal};\n  display: flex !important;\n  font-size: 50px;\n  height: 52px;\n  line-height: 37px;\n  justify-content: flex-end;\n  text-transform: uppercase;\n`;\n\nexport const Center = styled.div`\n  display: grid;\n  place-items: center;\n`;\n\nexport const Panel = styled.div`\n  border: 2px solid ${colors.border};\n  border-radius: 4px;\n`;\nexport const Table = styled.div`\n  align-items: end;\n  display: grid;\n  grid-auto-flow: row;\n  grid-auto-rows: 52px;\n  grid-gap: 7px;\n  grid-template-columns: 70px 157px 46px;\n  padding-left: 22px;\n  padding-right: 22px;\n`;\nexport const Apart = styled.div`\n  align-items: center;\n  display: flex;\n  height: ${({ small }) => small ? \"34px\" : \"52px\" };\n  justify-content: space-between;\n  padding-left: 22px;\n  padding-right: 22px;\n`;\nexport const Chart = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 17px;\n  height: 479px;\n  padding-left: 22px;\n  padding-right: 22px;\n`;\n\nexport const Span2 = styled.div`\n  grid-column: span 2;\n`;\nexport const Span3 = styled.div`\n  grid-column: span 3;\n`;\n\nexport const Button = styled.button`\n  background-color: ${colors.border};\n  border: 2px solid ${colors.navigation};\n  border-radius: 5px;\n  color: ${colors.label};\n  font-size: 25px;\n  height: 53px;\n  padding: 0;\n  text-transform: uppercase;\n  width: 190px;\n`;\n\nexport const HR = styled.div`\n  border-top: 2px solid ${colors.border};\n`;\n","import React from \"react\";\n\nimport { Navigation, NavItem } from \"./components\";\n\nexport default () => (\n  <Navigation>\n    <NavItem to=\"/\" exact>main</NavItem>\n    <NavItem to=\"/archive\" exact>archive</NavItem>\n    <NavItem to=\"/map\" exact>map</NavItem>\n  </Navigation>\n);\n","import { format } from \"date-fns\";\n\nexport const formatBpm = (bpm) => Number.isFinite(bpm) ? Math.round(bpm) : \"NA\";\nexport const formatRank = (rank) => Number.isFinite(rank) ? rank : \"NA\";\nexport const formatDate = (date) => format(date, \"yyyy-MM-dd HH:mm:ss\");\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useRef } from \"react\";\n\nimport { ids$ } from \"../store/ids\";\nimport { size$ } from \"../store/size\";\nimport { fromIndex } from \"../utils\";\n\nimport * as colors from \"./colors\";\n\nconst TILE_SIZE = 12;\nconst sketch = (iteration, size) => (p) => {\n  const ids = ids$.getState();\n\n  // horizontal\n  const W = ((size.x + 1) * size.z - 1) * TILE_SIZE;\n  const H = size.y * TILE_SIZE;\n\n  // vertical\n  // const W = size.x * TILE_SIZE;\n  // const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n\n  const noneColor = p.color(colors.background);\n  const fillColor = p.color(colors.valueHuman);\n  const textColor = p.color(colors.border);\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textSize(TILE_SIZE * .6);\n    p.textAlign(p.CENTER, p.CENTER);\n    p.stroke(textColor);\n  };\n  p.draw = () => {\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    for(let i in iteration) {\n      const pos = fromIndex(size, i);\n\n      // horizontal\n      const posX = pos.x * TILE_SIZE;\n      const posY = pos.y * TILE_SIZE;\n      const posZ = pos.z * (size.x + 1) * TILE_SIZE;\n\n      const x = posX + posZ;\n      const y = posY;\n\n      // vertical\n      // const posX = p.x * TILE_SIZE;\n      // const posY = p.y * TILE_SIZE;\n      // const posZ = p.z * (size.y + 1) * TILE_SIZE;\n\n      // const x = posX;\n      // const y = posY + posZ;\n\n      let c = noneColor;\n\n      if(iteration[i] === 2)\n        c = fillColor;\n      else if(iteration[i] === 1)\n        c = textColor;\n\n      p.fill(c);\n      p.rect(x, y, TILE_SIZE, TILE_SIZE);\n\n      p.fill(noneColor);\n      // p.text(i, x + TILE_SIZE * .5, y + TILE_SIZE * .5);\n      if(ids[i] > 0) {\n        p.text(ids[i], x + TILE_SIZE * .5, y + TILE_SIZE * .5);\n      }\n    }\n  };\n};\nexport default ({ layout = null }) => {\n  const size = useStore(size$);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null || layout === null)\n      return;\n\n    const p = new p5(sketch(layout, size), ref.current);\n\n    return p.remove;\n  }, [ ref.current, layout ]);\n\n  return (\n    <div ref={ref} />\n  );\n};\n","import * as d3 from \"d3\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"effector-react\";\nimport React, { Fragment, useMemo, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { iterations$, refresh } from \"../../store/iterations\";\n\nimport { HR, Panel } from \"../components\";\nimport HorizontalPreview from \"../HorizontalPreview\";\nimport { training$ } from \"../../store/training\";\n\nconst saveIteration = async(id, diff) => {\n  const payload = {\n    _id: id,\n    ...diff,\n  };\n\n  console.log(\"saveIteration\", payload);\n\n  await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  });\n\n  refresh();\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-auto-rows: max-content;\n  grid-gap: 17px;\n  height: 639px;\n  overflow-y: auto;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nconst Grid = styled.div`\n  // border: 1px solid #000000;\n  color: #000000;\n  display: grid;\n  font-size: 1ch;\n  grid-auto-columns: 6ch;\n  grid-auto-flow: column;\n  grid-gap: 1ch;\n  grid-template-rows: repeat(5, 6ch);\n  overflow-x: auto;\n\n  * {\n    border: 1px solid #000000;\n    display: grid;\n    place-items: center;\n  }\n`;\n\nvar rankColor = d3.scaleSequential()\n      .interpolator(d3.scaleOrdinal(d3.schemePastel1))\n      .domain([ 0, 4 ]);\n\nconst Table = ({ columns, data }) => {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nconst renderRank = (targetRank, { actualRank, timestamp }) => actualRank === targetRank\n  ? (<div style={{ backgroundColor: rankColor(actualRank) }}>{format(timestamp, \"MM/dd\")}<br />{format(timestamp, \"HH:mm\")}</div>)\n  : (<div />);\nexport default () => {\n  const iterations = useStore(iterations$);\n\n  const [ valid, setValid ] = useState(false);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"valid\",\n        accessor: \"valid\",\n        Cell: ({ row: { original }, value }) => (\n          <input type=\"checkbox\"\n                 checked={value}\n                 disabled={!(\"_id\" in original)}\n                 onChange={() => saveIteration(original._id, { valid: !value })}\n                 />\n        ),\n      },\n      {\n        Header: \"date\",\n        accessor: ({ timestamp }) => formatDate(timestamp),\n      },\n      {\n        Header: \"layout\",\n        accessor: \"combined\",\n        Cell: ({ value }) => (\n          <HorizontalPreview layout={value} />\n        ),\n      },\n      {\n        Header: \"maja bpm\",\n        accessor: ({ human }) => formatBpm(human === null ? null : human.bpm),\n      },\n      {\n        Header: \"dog bpm\",\n        accessor: ({ animal }) => formatBpm(animal === null ? null : animal.bpm),\n      },\n      {\n        Header: \"delta bpm\",\n        accessor: ({ delta }) => formatBpm(delta),\n      },\n      {\n        Header: \"class\",\n        accessor: ({ actualRank }) => formatRank(actualRank),\n      },\n      {\n        Header: \"match\",\n        accessor: ({ expectedRank, actualRank }) => expectedRank === actualRank ? \"YES\" : \"NO\",\n      },\n      {\n        Header: \"trainable\",\n        accessor: ({ trainable }) => trainable ? \"YES\" : \"NO\",\n      },\n    ],\n    []\n  );\n\n  const data = iterations && iterations.filter(\n    (iteration) => valid === false || iteration.valid\n  ) || [];\n\n  const trainableData = iterations && iterations.filter(\n    (iteration) => iteration.trainable\n  ) || [];\n  trainableData.sort(\n    (a, b) => a.timestamp - b.timestamp\n  );\n\n  return (\n    <Container as={Panel}>\n      <Grid>\n        <b>4</b>\n        <b>3</b>\n        <b>2</b>\n        <b>1</b>\n        <b>0</b>\n        {trainableData.map(\n          (iteration, i) => (\n            <Fragment key={i}>\n              {renderRank(4, iteration)}\n              {renderRank(3, iteration)}\n              {renderRank(2, iteration)}\n              {renderRank(1, iteration)}\n              {renderRank(0, iteration)}\n            </Fragment>\n          )\n        )}\n      </Grid>\n      <HR />\n      <label><input type=\"checkbox\" checked={valid} onChange={() => setValid(!valid)} /> valid only</label>\n      <Table columns={columns} data={data} />\n    </Container>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useMemo, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../formatters\";\nimport { training$ } from \"../store/training\";\n\nimport * as colors from \"./colors\";\n\n/**\n * A Heart object will beat, and generate voltage values according to the time\n * the beat started\n *\n * \"Duration\" values are really pixels. 1 pixel represents 1/60 of a second.\n */\nclass Heart {\n  /**\n   * Creates an instance of Heart\n   * @param {number} adDuration Duration in pixels of the atria depolarization\n   * @param {number} vdDuration Duration in pixels of the ventricle depolarization\n   * @param {number} vrDuration Duration in pixels of the ventricle repolarization\n   *\n   * @property {number} this.beatDuration Duration in pixels of the whole beat\n   * @property {number} this.nextBeat Time between last beat, and next beat\n   * @property {number} this.nextBeatIn Time remaining for next beat\n   * @property {number[]} this.bpm Time between two particular beats\n   * @property {number} this.voltage Current voltage value. No units used.\n   */\n  constructor(p, ecg, options, adDuration, vdDuration, vrDuration) {\n    this.p = p;\n    this.ecg = ecg;\n    this.options = options;\n    this.adDuration = adDuration;\n    this.vdDuration = vdDuration;\n    this.vrDuration = vrDuration;\n\n    this.beatDuration = adDuration + vdDuration + vrDuration;\n\n    this.nextBeat = 1;\n    this.nextBeatIn = 1;\n    this.bpm = [];\n    this.voltage = 0;\n  }\n\n  /**\n   * Assign the heart a new voltage value, and report that value to the ECG\n   * the heart is connected to.\n   * @param {number} voltage\n   */\n  setVoltage(voltage) {\n    this.voltage = voltage;\n    this.ecg.addValue({ y: this.voltage });\n  }\n\n  /**\n   * Generates the voltage values corresponding to the atria depolarization process.\n   * This is the process that generates the first part of the curve of every beat.\n   *\n   * @param {number} time Time in pixels since the atria depolarization process started\n   */\n  atriaDepolarization(time) {\n    const p = this.p;\n    \n    // This process is not close to what reality does, but here it is generated using a\n    // sin function where only the positive values remain, making a bump followed by a\n    // flat section\n    let y = p.randomGaussian(5, 1) * p.sin(time * (360 / this.adDuration));\n\n    // To compensate for the y-axis inverted direction, return -y when y is over 0\n    y = y > 0 ? -y : 0.2 * (1 - y);\n\n    // Update the voltage to whatever value was calculated\n    this.setVoltage(y + p.noise(time));\n  }\n\n  /**\n   * Generates the voltage values corresponding to the ventricle depolarization process.\n   * This is the process that generates the spiky part of the curve of every beat.\n   *\n   * @param {number} time Time in pixels since the ventricle depolarization process started\n   */\n  ventricleDepolarization(time) {\n    const p = this.p;\n    \n    let y;\n    // In the first third, the curve has a spike going down\n    if(time <= this.vdDuration / 3)\n      y = (p.randomGaussian(8, 2) * (this.vdDuration - time)) / 6;\n    // In the second third, the curve has a big spike going up\n    else if(time < (2 * this.vdDuration) / 3) {\n      // Start producing a sound, going from 0 to 0.5 volume in 0.01 seconds\n      // osc.amp(0.5, 0.01);\n      y = (p.randomGaussian(70, 2) * p.abs(1.5 - (this.vdDuration - time))) / 3;\n      y = -y;\n    }\n\n    // In the last third, the curve has another spike (bigger than the first one) going down\n    else {\n      y = (p.randomGaussian(20, 2) * (this.vdDuration - time)) / 3;\n      // Stop the sound, going from 0.5 to 0 volume in 0.01 secs\n      // osc.amp(0, 0.01);\n    }\n\n    // Update the voltage to whatever value was calculated\n    this.setVoltage(y);\n  }\n\n  /**\n   * Generates the voltage values corresponding to the ventricle repolarization process.\n   * This is the process that generates the last part of the curve of every beat.\n   *\n   * @param {number} time Time in pixels since the ventricle repolarization process started\n   */\n  ventricleRepolarization(time) {\n    const p = this.p;\n    \n    // This process is not close to what reality does, but here it is generated using a\n    // sin function where only the positive values remain, but displaced half a turn to\n    // make a flat section followed by a bump\n    let y = p.randomGaussian(8, 2) * p.sin(180 + time * (360 / this.vrDuration));\n\n    // To compensate for the y-axis inverted direction, return -y when y is over 0\n    y = y < 0 ? 0.2 * (1 - y) : -y;\n\n    // Update the voltage to whatever value was calculated\n    this.setVoltage(y + p.noise(time));\n  }\n\n  updateBPM() {\n    const p = this.p;\n    \n    // bpm = 3600 / pixel-distance\n    // this.bpm = 3600 / this.nextBeat;\n    this.bpm.push(3600 / this.nextBeat);\n\n    // To make rapid frequency changes meaningful, get the average bpm using only the\n    // last 5 values of time, not all of them. So dispose the oldest one when the list\n    // length is over 5.\n    if(this.bpm.length > 5) this.bpm.splice(0, 1);\n    this.ecg.drawBPM(p.round(this.bpm.reduce((p, c) => p + c, 0) / this.bpm.length));\n    // this.ecg.drawBPM(p.round(this.bpm));\n  }\n  /**\n   * Decrease this.nextBeatIn to simulate the pass of time.\n   * If necessary, create a new this.nextBeat value\n   */\n  updateTimeToNextBeat() {\n    if(this.options.bpm > 0 && Number.isFinite(this.nextBeatIn) === false)\n      this.nextBeatIn = 0;\n    \n    // This indicates that the next beat will begin in the next iteration\n    if(this.nextBeatIn-- <= 0) {\n      // const p = this.p;\n    \n      // Then calculate a new \"remaining time\" for the next beat.\n      // Use the x coordinates of the mouse position to modify the heart frequency\n      // this.nextBeat = p.abs(p.ceil(p.randomGaussian((900 - p.mouseX) / 10, 3)));\n      // this.nextBeat = this.nextBeatIn + 3600 / 200;\n      this.nextBeat = this.nextBeatIn + 3600 / this.options.bpm;\n\n      // It the pixel time between beat and beat is less than 18, force it to be\n      // 18. This value makes to a bpm of 200.\n      // if(this.nextBeat < 18) this.nextBeat = 18;\n\n      // Get new bpm values using the last this.nextBeat\n      this.updateBPM();\n\n      // Reset the remaining time to the new calculated time\n      this.nextBeatIn = this.nextBeat;\n    }\n  }\n\n  /**\n   * Get voltage values for every second of the beat, even at rest (no-beating time\n   * after the ventricle repolarization finished, and before the next atria depolarization)\n   * @param {*} time Time in pixels after the atria depolarization started\n   */\n  beat(time) {\n    // Update the time left for the start of the next beat\n    this.updateTimeToNextBeat();\n\n    // If according to time, beat is in the atria depolarization process, call that function\n    if(time <= this.adDuration) {\n      this.atriaDepolarization(time);\n      return;\n    }\n\n    // If according to time, beat is in the ventricle depolarization process, call that function\n    // Update the time so the value sent is relative to the start of the ventricle\n    // depolarization process\n    time -= this.adDuration;\n    if(time <= this.vdDuration) {\n      this.ventricleDepolarization(time);\n      return;\n    }\n\n    // If according to time, beat is in the ventricle repolarization process, call that function\n    // Update the time so the value sent is relative to the start of the ventricle\n    // repolarization process\n    time -= this.vdDuration;\n    if(time <= this.vrDuration) {\n      this.ventricleRepolarization(time);\n      return;\n    }\n\n    const p = this.p;\n    \n    // If function reached this point, it's not in any of the beat processes, and it's resting.\n    // Add a noisy voltage value\n    this.setVoltage(0 + p.noise(p.draw_i * 0.5) * 5);\n  }\n}\n\n/**\n *  ECG will receive, process, and draw the health information\n */\nclass ECG {\n  /**\n   * @param {Object} graphZero  Coordinates of the {0, 0} value of the graph\n   * @param {Object[]} values   Array of {x, y} objects. x plots time, y plots voltage\n   * @param {number} maxValuesHistory   Maximum number of values before wiping oldest one\n   */\n  constructor(p, color, graphZero, values, maxValuesHistory) {\n    this.p = p;\n    this.color = color;\n    this.graphZero = graphZero;\n    this.values = values;\n    this.maxValuesHistory = maxValuesHistory;\n    this.maximumX = maxValuesHistory;\n  }\n\n  /**\n   * Add a new voltage value to the values array. If it exceeds the maximum number of\n   * values allowed to store, remove the oldest one before.\n   * @param {Object} value {x, y} object. x represents time, y represents voltage\n   */\n  addValue(value) {\n    // If no x (time) value is received, assume it is the sucessor of the last value\n    // in the values array. If the new x exceeds the maximum allowed, make x = 0\n    if(this.values.length >= this.maxValuesHistory) this.values.splice(0, 1);\n    if(value.x === undefined) {\n      value.x = (this.values[this.values.length - 1].x + 1) % this.maximumX;\n    }\n    this.values.push(value);\n  }\n\n  /**\n   * Draw lines joining every voltage value throughout time in the screen\n   */\n  plotValues() {\n    const p = this.p;\n    \n    p.push();\n\n    const c = this.color;\n\n    for(let i = 1; i < this.values.length; i++) {\n      // If the previous value has a X coordinate higher than the current one,\n      // don't draw it, to avoid lines crossing from end to start of the ECG plot area.\n      if(this.values[i - 1].x > this.values[i].x) continue;\n\n      // Older values are drawn with a lower alpha\n      let alpha = i / this.values.length;\n\n      // Set the color of the drawing\n      p.stroke(c, alpha);\n      p.fill(c, alpha);\n\n      // Line from previous value to current value\n      p.line(\n        this.graphZero.x + this.values[i - 1].x,\n        this.graphZero.y + this.values[i - 1].y,\n        this.graphZero.x + this.values[i].x,\n        this.graphZero.y + this.values[i].y\n      );\n\n      // For the last 5 values, draw a circle with a radius going in function to\n      // its index. This to make the leading line thicker\n      if(i + 5 > this.values.length) {\n        p.circle(\n          this.graphZero.x + this.values[i].x,\n          this.graphZero.y + this.values[i].y,\n          this.values.length / i * 4\n        );\n      }\n    }\n\n    const v = this.values[this.values.length - 1];\n\n    // Set the color of the drawing\n    p.stroke(c);\n\n    // Vertical line\n    p.line(\n      this.graphZero.x + v.x,\n      0,\n      this.graphZero.x + v.x,\n      124\n    );\n\n    p.pop();\n  }\n\n  //// The following methods update the values represented as html elements\n\n  updateInfo() {\n    const p = this.p;\n    \n    this.updateDate();\n    if(p.draw_i % 50 === 0) {\n      this.updateBloodPressure();\n      this.updateVentilation();\n      this.updateTemperature();\n      this.updateHemoglobin();\n    }\n  }\n\n  updateHemoglobin() {\n    const p = this.p;\n    \n    // document.getElementById(\"hemoglobin-value\").innerHTML = p.randomGaussian(14, .1).toFixed(1)\n\n  }\n  updateTemperature() {\n    const p = this.p;\n    \n    // document.getElementById(\"temperature-value\").innerHTML = p.randomGaussian(98.6, .1).toFixed(1)\n\n  }\n  updateVentilation() {\n    const p = this.p;\n    \n    // document.getElementById(\"minute-ventilation-value\").innerHTML = p.randomGaussian(6, .5).toFixed(2)\n  }\n\n  updateBloodPressure() {\n    const p = this.p;\n    \n    // document.getElementById(\"pressure-value\").innerHTML = \"\" + p.round(p.randomGaussian(130, 1)) + \"/\" + p.round(p.randomGaussian(90, 1));\n  }\n\n  updateDate() {\n    let date = new Date;\n    // document.getElementById(\"date-value\").innerHTML = formatDate(date);\n  }\n\n  /**\n   * Update the html content of the span containing the bpm info\n   * @param {number} bpm\n   */\n  drawBPM(bpm) {\n    // document.getElementById(\"heart-rate-value\").innerHTML = bpm;\n  }\n}\n\nconst sketch = (options) => (p) => {\n  // Taken from https://codepen.io/davidomarf/pen/ydyzaa\n  // Keep track of the times draw() has been called\n  p.draw_i = 0;\n\n  // p5.sound variables\n  // let osc;\n\n  const W = 286;\n  const H = 124;\n\n  // Initialize the ecg\n  // let ecg = new ECG(p, { x: 0, y: 110 }, [{ x: 0, y: 0 }], 600);\n  let ecg = new ECG(p, p.color(options.color), { x: 0, y: 100 }, [{ x: 0, y: 0 }], W);\n\n  // Initialize a heart\n  let heart = new Heart(p, ecg, options, 12, 8, 12);\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.WEBGL);\n    // p.frameRate(12);\n\n    // Set the color mode to allow calling RGBA without converting to string\n    p.colorMode(p.RGB, 255, 255, 255, 1);\n\n    // Work with degrees instead of Radians (sin function used inside Heart Class)\n    p.angleMode(p.DEGREES);\n\n    // Set the frequency the ecg will emit every heartbeat.\n    // osc = new p5.Oscillator();\n    // osc.setType(\"sine\");\n    // osc.freq(445);\n    // osc.amp(0);\n    // osc.start();\n  };\n  p.draw = () => {\n    p.translate(-W * .5, -H * .5);\n\n    // Keep track of the number of times draw has been called\n    ++p.draw_i;\n\n    // Hide previous ECG line by drawing a background\n    /**\n     *  Draw a rectangle of size (canvas.width - 1, canvas.height - 1)  with dark background\n     * and a brilliant green border.\n     *\n     * The -1 is to allow the border to be seen in the final page.\n     */\n    p.push();\n    p.noStroke();\n    p.fill(colors.background);\n    // p.stroke(121, 239, 150, 1);\n    // p.rect(0, 0, W - 1, H - 1);\n    p.rect(0, 0, W, H);\n    p.pop();\n\n    // Get the new voltage values for the ECG from the heart\n    heart.beat(heart.nextBeat - heart.nextBeatIn);\n\n    // Draw the line of voltage values over time in the ECG screen\n    ecg.plotValues();\n\n    // Update the information values of the ECG\n    ecg.updateInfo();\n  };\n};\n\nexport default ({ bpm, color }) => {\n  const training = useStore(training$);\n\n  const ref = useRef(null);\n  const options = useMemo(() => ({}), []);\n  options.bpm = training === false ? bpm : 0;\n  options.color = color;\n\n  useEffect(() => {\n    if(ref.current === null)\n      return;\n\n    const p = new p5(sketch(options), ref.current);\n\n    return p.remove;\n  }, [ ref.current ]);\n\n  return (\n    <div ref={ref} />\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { format } from \"date-fns\";\nimport { createEvent, restore } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../formatters\";\nimport { currentIteration$ } from \"../store/iterations\";\nimport { training$ } from \"../store/training\";\n\nimport * as colors from \"./colors\";\nimport { Apart, BigValue, Center, HR, Label, Panel, Span2, Table, Title, Value } from \"./components\";\nimport Heartrate from \"./Heartrate\";\nimport { startOfWeekWithOptions } from \"date-fns/esm/fp\";\n\np5.prototype.noiseSeed(123);\nconst nextNoise = () => p5.prototype.noise(+new Date / 100000);\nconst scale = (value, min, max) => value * (max - min) + min;\n// const nextValue = (value, min, max, alpha = .03) => {\n  // value += ((max - min) * (random() - .5)) * alpha;\n  // value = Math.max(min, Math.min(max, value));\n  // return Math.round(value * 10) / 10;\n// };\n\nconst setRespHuman = createEvent();\nconst respHuman$ = restore(setRespHuman, 15);\nconst setRespAnimal = createEvent();\nconst respAnimal$ = restore(setRespAnimal, 20);\n\nconst setTempHuman = createEvent();\nconst tempHuman$ = restore(setTempHuman, 33);\nconst setTempAnimal = createEvent();\nconst tempAnimal$ = restore(setTempAnimal, 36.5);\n\nsetInterval(() => {\n  const noise = nextNoise();\n  setRespHuman(scale(noise, 12, 18));\n  setRespAnimal(scale(noise, 15, 30));\n\n  setTempHuman(scale(noise, 31, 35.5));\n  setTempAnimal(scale(noise, 34, 37.2));\n}, 1000);\n\nconst Container = styled.aside`\n  display: grid;\n  grid-auto-flow: row;\n  grid-auto-rows: 100%;\n  grid-gap: 17px;\n  grid-template-columns: repeat(2, 330px);\n  width: 677px;\n`;\n\nexport default () => {\n  const training = useStore(training$);\n  const iteration = useStore(currentIteration$);\n\n  const respHuman = useStore(respHuman$);\n  const respAnimal = useStore(respAnimal$);\n  \n  const tempHuman = useStore(tempHuman$);\n  const tempAnimal = useStore(tempAnimal$);\n\n  if(iteration === null) {\n    return (\n      <Container>\n        <Panel as={Center} style={{ gridColumn: \"2 span\" }}>loading iteration</Panel>\n      </Container>\n    );\n  }\n\n  const { human, animal, ended } = iteration;\n\n  const humanBpm = human === null\n    ? null\n    : human.bpm;\n  const animalBpm = animal === null\n    ? null\n    : animal.bpm;\n\n  const humanEntries = human === null\n    ? []\n    : human.entries.map(({ bpm, date }) => ({ maja: bpm, date: +new Date(date) }));\n  const animalEntries = animal === null\n    ? []\n    : animal.entries.map(({ bpm, date }) => ({ dog: bpm, date: +new Date(date) }));\n\n  const humanStart = human === null || humanEntries.length === 0\n    ? null\n    : humanEntries[0].date;\n  const humanStop = human === null || humanEntries.length === 0\n    ? null\n    : humanEntries[humanEntries.length - 1].date;\n  const animalStart = animal === null || animalEntries.length === 0\n    ? null\n    : animalEntries[0].date;\n  const animalStop = animal === null || animalEntries.length === 0\n    ? null\n    : animalEntries[animal.entries.length - 1].date;\n\n  return (\n    <Container>\n      <Panel>\n        <Title>human</Title>\n        <HR />\n        <div style={{ paddingBottom: 11, paddingLeft: 22, paddingRight: 22, paddingTop: 11 }}>\n          <img src=\"Heart_Icon.png\" style={{ display: \"block\", height: 28 }} />\n        </div>\n        <div style={{ paddingLeft: 22, paddingRight: 22 }}>\n          <Heartrate bpm={training || ended ? 0 : humanBpm || 0} color={colors.valueHuman} />\n        </div>\n        <Table style={{ paddingBottom: 36, paddingTop: 25 }}>\n          <Label>heart</Label><BigValue human>{training || ended ? \"NA\" : formatBpm(humanBpm)}</BigValue><Label>bpm</Label>\n        </Table>\n        <HR />\n        <Table style={{ paddingBottom: 30, paddingTop: 24 }}>\n          <Label>resp</Label><BigValue human>{training || ended || humanStart === null ? \"NA\" : Math.round(respHuman)}</BigValue><Label>bpm</Label>\n        </Table>\n        <Table style={{ paddingBottom: 34 }}>\n          <Label>temp</Label><BigValue human>{training || ended || humanStart === null ? \"NA\" : tempHuman.toFixed(1)}</BigValue><Label>&deg;c</Label>\n        </Table>\n        <HR />\n        <Apart>\n          <Label>start</Label><Value human>{training || humanStart === null ? \"NA\" : format(humanStart, \"HH:mm:ss\")}</Value>\n        </Apart>\n        <HR />\n        <Apart>\n          <Label>end</Label><Value human>{training || ended === false || humanStop === null ? \"NA\" : format(humanStop, \"HH:mm:ss\")}</Value>\n        </Apart>\n      </Panel>\n      <Panel>\n        <Title>animal</Title>\n        <HR />\n        <div style={{ paddingBottom: 11, paddingLeft: 22, paddingRight: 22, paddingTop: 11 }}>\n          <img src=\"Heart_Icon.png\" style={{ display: \"block\", height: 28 }} />\n        </div>\n        <div style={{ paddingLeft: 22, paddingRight: 22 }}>\n          <Heartrate bpm={training || ended ? 0 : animalBpm || 0} color={colors.valueAnimal} />\n        </div>\n        <Table style={{ paddingBottom: 36, paddingTop: 25 }}>\n          <Label>heart</Label><BigValue>{training || ended ? \"NA\" : formatBpm(animalBpm)}</BigValue><Label>bpm</Label>\n        </Table>\n        <HR />\n        <Table style={{ paddingBottom: 30, paddingTop: 24 }}>\n          <Label>resp</Label><BigValue>{training || ended || animalStart === null ? \"NA\" : Math.round(respAnimal)}</BigValue><Label>bpm</Label>\n        </Table>\n        <Table style={{ paddingBottom: 34 }}>\n          <Label>temp</Label><BigValue>{training || ended || animalStart === null ? \"NA\" : tempAnimal.toFixed(1)}</BigValue><Label>&deg;c</Label>\n        </Table>\n        <HR />\n        <Apart>\n          <Label>start</Label><Value>{training || animalStart === null ? \"NA\" : format(animalStart, \"HH:mm:ss\")}</Value>\n        </Apart>\n        <HR />\n        <Apart>\n          <Label>end</Label><Value>{training || ended === false || animalStop === null ? \"NA\" : format(animalStop, \"HH:mm:ss\")}</Value>\n        </Apart>\n      </Panel>\n    </Container>\n  );\n};\n","import { createEvent, restore } from \"effector\";\n\nexport const setPhase = createEvent();\nexport const phase$ = restore(setPhase, 4);\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} from \"recharts\";\n\nimport * as colors from \"../colors\";\nimport { Apart, Center, Chart, HR, Label, Value } from \"../components\";\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { previousIteration$ } from \"../../store/iterations\";\n\nimport { format } from \"date-fns\";\n\nexport default () => {\n  const iteration = useStore(previousIteration$);\n  \n  if(iteration === null) {\n    return (\n      <Center>loading previous iteration</Center>\n    );\n  }\n\n  const human = iteration.human === null ? [] : iteration.human.entries.map(({ bpm, date }) => ({ maja: bpm, date: +new Date(date) }));\n  const animal = iteration.animal === null ? [] : iteration.animal.entries.map(({ bpm, date }) => ({ dog: bpm, date: +new Date(date) }));\n\n  const entries = [\n    ...human,\n    ...animal,\n  ].sort(\n    (a, b) => a.date - b.date\n  );\n\n  let previousMaja = null, previousDog = null;\n  const data = entries.map((item) => {\n    const maja = item.maja || previousMaja;\n    const dog = item.dog || previousDog;\n\n    previousMaja = maja;\n    previousDog = dog;\n\n    return {\n      ...item,\n      maja,\n      dog,\n      delta: maja === null || dog === null ? null : Math.abs(maja - dog),\n    };\n  });\n\n  return (\n    <>\n      <Apart small>\n        <Label>class</Label><Value>{formatRank(iteration.actualRank)}</Value>\n      </Apart>\n      <HR />\n      <Chart style={{ height: \"443px\" }}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={data} margin={{ top: 40, right: 0 /* 40 */, bottom: 5, left: 10 }}>\n            <CartesianGrid stroke={colors.border} strokeDasharray=\"5 5\" />\n            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"maja\" dot={false} stroke={colors.valueHuman} connectNulls isAnimationActive={false} />\n            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"dog\" dot={false} stroke={colors.valueAnimal} connectNulls isAnimationActive={false} />\n            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"delta\" dot={false} stroke={colors.label} connectNulls isAnimationActive={false} />\n            {/* <XAxis dataKey=\"date\" tickFormatter={(date) => format(date, \"HH:mm:ss\")} isAnimationActive={false} /> */}\n            <YAxis yAxisId=\"left\" type=\"number\" unit=\"bpm\" isAnimationActive={false} stroke={colors.label} />\n            {/* <YAxis yAxisId=\"right\" type=\"number\" unit=\"bpm\" orientation=\"right\" isAnimationActive={false} /> */}\n            {/* <Legend isAnimationActive={false} /> */}\n            <Tooltip labelFormatter={(date) => format(date, \"HH:mm:ss\")} formatter={(value) => `${value}bpm`} isAnimationActive={false} />\n          </LineChart>\n        </ResponsiveContainer>\n      </Chart>\n      <HR />\n      <Apart small>\n        <Label>avg human bpm</Label><Value human>{formatBpm(iteration.human === null ? null : iteration.human.bpm)}</Value>\n      </Apart>\n      <HR />\n      <Apart small>\n        <Label>avg animal bpm</Label><Value>{formatBpm(iteration.animal === null ? null : iteration.animal.bpm)}</Value>\n      </Apart>\n      <HR />\n      <Apart small>\n        <Label>avg delta bpm</Label><Value style={{ color: colors.label }}>{formatBpm(iteration.delta)}</Value>\n      </Apart>\n    </>\n  );\n};\n","import * as tf from \"@tensorflow/tfjs\";\n\nimport { size$ } from \"../store/size\";\n\nexport const model$ = size$.map((size) => {\n  if(size === null)\n    return null;\n\n  const model = tf.sequential({\n    layers: [\n      // hidden\n      // tf.layers.dense({\n      //   batchInputShape: [ null, 36 ],\n      //   units: 1024,\n      //   activation: \"sigmoid\",\n      // }),\n      // // output\n      // tf.layers.dense({\n      //   units: 2,\n      //   activation: \"softmax\",\n      // }),\n      tf.layers.conv2d({\n        batchInputShape: [ null, size.x, size.y, size.z ],\n        kernelSize: 5,\n        filters: 16,\n        strides: 2,\n        activation: \"relu\",\n        kernelInitializer: \"varianceScaling\",\n      }),\n\n      // The MaxPooling layer acts as a sort of downsampling using max values\n      // in a region instead of averaging.\n      // tf.layers.maxPooling2d({ poolSize: [2, 2], strides: [2, 2] }),\n\n      // Now we flatten the output from the 2D filters into a 1D vector to prepare\n      // it for input into our last layer. This is common practice when feeding\n      // higher dimensional data to a final classification output layer.\n      tf.layers.flatten(),\n\n      // output\n      tf.layers.dense({\n        units: 5,\n        kernelInitializer: \"varianceScaling\",\n        activation: \"softmax\",\n      }),\n    ],\n  });\n\n  model.compile({\n    // loss: tf.losses.categoricalCrossentropy,\n    loss: \"categoricalCrossentropy\",\n    metrics: [ \"accuracy\" ],\n    // loss: tf.losses.softmaxCrossEntropy,\n    // optimizer: tf.train.sgd(.2),\n    optimizer: tf.train.adam(),\n  });\n\n  return model;\n});\n","import { createEvent, restore } from \"effector\";\n\nexport const setProgress = createEvent();\nexport const progress$ = restore(setProgress, 0);\n","import { createEvent, createEffect, restore } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useRef } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n// import * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { ids$ } from \"../store/ids\";\nimport { currentIteration$, refresh } from \"../store/iterations\";\n// import { fetchedIterations$, setFetchedIterations } from \"../store/iterations\";\nimport { layout$ } from \"../store/layout\";\nimport { model$ } from \"../store/model\";\nimport { setPhase } from \"../store/phase\";\nimport { size$ } from \"../store/size\";\nimport { setTraining, training$ } from \"../store/training\";\nimport { inside, fromIndex, toIndex, generateIteration, iterationToLayout, join } from \"../utils\";\n\nimport * as colors from \"./colors\";\n\nconst setAttempts = createEvent();\nexport const attempts$ = restore(setAttempts, 0);\n\nconst setRank = createEvent();\nexport const rank$ = restore(setRank, -1);\n\nconst saveIteration = async(iteration, rank) => {\n  const now = new Date;\n  const timestamp = +now;\n  \n  const payload = {\n    _id: `${timestamp}`,\n    title: now.toISOString(),\n    data: iteration,\n    expectedRank: rank,\n    attempts: attempts$.getState(),\n    // iterationKey: entries$.getState().current,\n    timestamp,\n  };\n\n  console.log(\"saveIteration\", payload);\n\n  await fetch(\"https://heartrate.miran248.now.sh/api/iteration\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  });\n\n  refresh();\n};\n\n// const classNames = [\n//   \"Zero\",\n//   \"One\",\n//   \"Two\",\n//   \"Three\",\n//   \"Four\",\n//   \"Five\",\n//   \"Six\",\n//   \"Seven\",\n//   \"Eight\",\n//   \"Nine\",\n// ];\n\n// const ranks = [\n//   [ 1, 0, 0, 0, 0 ],\n//   [ 0, 1, 0, 0, 0 ],\n//   [ 0, 0, 1, 0, 0 ],\n//   [ 0, 0, 0, 1, 0 ],\n//   [ 0, 0, 0, 0, 1 ],\n// ];\n\n// const ranges = [\n//   \"[ 0, 5 )\",\n//   \"[ 5, 10 )\",\n//   \"[ 10, 20 )\",\n//   \"[ 20, 40 )\",\n//   \"[ 40, inf )\",\n// ];\nconst ranges = [\n  \"0 - 4\",\n  \"5 - 9\",\n  \"10 - 19\",\n  \"20 - 39\",\n  \"40 - inf\",\n];\n\nlet animationCompleted = null;\nexport const find = createEffect();\nfind.use(async({ rank }) => {\n  setTimeout(() => setPhase(3), 0);\n\n  const size = size$.getState();\n  const l = layout$.getState();\n\n  let argMax1;\n  let response;\n  let iteration;\n\n  let tries = 0;\n\n  let pendingRank = currentRank = -1;\n\n  setRank(currentRank);\n\n  do {\n    ++tries;\n\n    setAttempts(tries);\n\n    iteration = generateIteration(p);\n    const iterationLayout = join(l, iterationToLayout(l, iteration));\n\n    layout = iterationLayout;\n\n    const number = layout.map((item) => Math.max(0, item - 1));\n\n    const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ], \"int32\");\n    // const xs = tf.tensor([ number ], [ 1, size.x, size.y, size.z ]);\n    response = model$.getState().predict(xs);\n    const preds = response.argMax(1);\n    argMax1 = await preds.data();\n    // const data = await response.data();\n\n    // const ys = tf.tensor([ ranks[rank] ], [ 1, 5 ]);\n    // const labels = await ys.argMax(1);\n\n    pendingRank = argMax1[0];\n    progress = 0;\n\n    const animationCompletedPromise = new Promise((resolve, reject) => animationCompleted = resolve);\n    p.loop();\n    await animationCompletedPromise;\n    p.noLoop();\n\n    setRank(currentRank = pendingRank);\n    p.redraw();\n\n    // xs.dispose();\n    // ys.dispose();\n  } while(currentRank !== rank);\n\n  await saveIteration(iteration, rank);\n\n  return response;\n});\nfind.pending.watch((pending) => {\n  pending && setTraining(true);\n});\nfind.fail.watch((error) => {\n  console.error(\"find error\", error);\n})\nfind.done.watch(() => {\n  setTimeout(() => {\n    setPhase(4);\n    setTraining(false);\n  }, 0);\n});\n\nconst TILE_SIZE = 12;\n\nconst sketch = (size) => (p) => {\n  const ids = ids$.getState();\n\n  const W = (30 + 7) * TILE_SIZE;\n  const H = ((size.y + 1) * size.z - 1) * TILE_SIZE;\n\n  const outputOffsetX = 30 * TILE_SIZE;\n  const outputOffsetY = 0;\n\n  const HIDDEN_WIDTH = 10 * TILE_SIZE;\n  const HIDDEN_HEIGHT = 8 * TILE_SIZE;\n\n  const OUTPUT_WIDTH = 7 * TILE_SIZE;\n  const OUTPUT_HEIGHT = 5 * TILE_SIZE;\n\n  const noneColor = p.color(colors.background);\n  const rectColor = p.color(colors.navigation);\n  const fillColor = p.color(colors.valueHuman);\n  const textColor = p.color(colors.border);\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.CANVAS);\n    p.noLoop();\n    p.textAlign(p.CENTER, p.CENTER);\n    p.stroke(textColor);\n  };\n  p.draw = () => {\n    const layoutCount = layout.length;\n    const progressIndex = Math.floor(progress * layoutCount);\n\n    // aligns to top left\n    // p.translate(-W / 2, -H / 2, 0);\n\n    let posX, posY;\n\n    // input\n    p.textSize(TILE_SIZE * .6);\n    for(let i = 0; i < layoutCount; ++i) {\n      const { x, y, z } = fromIndex(size, i);\n\n      posX = x * TILE_SIZE;\n      posY = y * TILE_SIZE;\n      const posZ = z * (size.y + 1) * TILE_SIZE;\n\n      let c = noneColor;\n\n      if(layout[i] === 2)\n        c = i < progressIndex ? fillColor : noneColor;\n      else if(layout[i] === 1)\n        c = textColor;\n\n      if(i === progressIndex)\n        p.fill(rectColor);\n      else\n        p.fill(c);\n      \n      p.rect(posX, posY + posZ, TILE_SIZE, TILE_SIZE);\n\n      p.fill(noneColor);\n      // p.text(i, posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      if(ids[i] > 0) {\n        p.text(ids[i], posX + TILE_SIZE * .5, posY + posZ + TILE_SIZE * .5);\n      }\n    }\n\n    // in lines\n    posX = TILE_SIZE * 7;\n    posY = H * .5;\n    p.line(posX, posY - (OUTPUT_HEIGHT + TILE_SIZE) * 2, posX + TILE_SIZE * 6.5, posY);\n    p.line(posX, posY - (OUTPUT_HEIGHT + TILE_SIZE), posX + TILE_SIZE * 6.5, posY);\n    p.line(posX, posY, posX + TILE_SIZE * 6.5, posY);\n    p.line(posX, posY + (OUTPUT_HEIGHT + TILE_SIZE), posX + TILE_SIZE * 6.5, posY);\n    p.line(posX, posY + (OUTPUT_HEIGHT + TILE_SIZE) * 2, posX + TILE_SIZE * 6.5, posY);\n\n    // hidden\n    posX = W * .5;\n    posY = H * .5;\n    p.fill(rectColor);\n    p.rect(posX - HIDDEN_WIDTH * .5, posY - HIDDEN_HEIGHT * .5, HIDDEN_WIDTH, HIDDEN_HEIGHT);\n\n    // out lines\n    p.line(posX + HIDDEN_WIDTH * .5, posY, outputOffsetX, posY - (OUTPUT_HEIGHT + TILE_SIZE) * 2);\n    p.line(posX + HIDDEN_WIDTH * .5, posY, outputOffsetX, posY - (OUTPUT_HEIGHT + TILE_SIZE));\n    p.line(posX + HIDDEN_WIDTH * .5, posY, outputOffsetX, posY);\n    p.line(posX + HIDDEN_WIDTH * .5, posY, outputOffsetX, posY + (OUTPUT_HEIGHT + TILE_SIZE));\n    p.line(posX + HIDDEN_WIDTH * .5, posY, outputOffsetX, posY + (OUTPUT_HEIGHT + TILE_SIZE) * 2);\n\n    p.fill(noneColor);\n    p.textSize(TILE_SIZE * 2);\n    p.text(\"CNN\", posX, posY);\n\n    // output\n    for(let i = 0; i < 5; ++i) {\n      // const { x, y, z } = fromIndex(size, i);\n      \n      posX = outputOffsetX;\n      posY = outputOffsetY + i * (OUTPUT_HEIGHT + TILE_SIZE);\n\n      if(i === currentRank)\n        p.fill(fillColor);\n      else\n        p.fill(noneColor);\n\n      p.rect(posX, posY, OUTPUT_WIDTH, OUTPUT_HEIGHT);\n\n      if(i === currentRank)\n        p.fill(noneColor);\n      else\n        p.fill(rectColor);\n\n      p.line(posX, posY + TILE_SIZE * 2, posX + OUTPUT_WIDTH, posY + TILE_SIZE * 2);\n\n      p.textSize(TILE_SIZE * 1.6);\n      p.text(i, posX + OUTPUT_WIDTH * .5, posY + TILE_SIZE * 1);\n      \n      p.textSize(TILE_SIZE * 1);\n      p.text(`${ranges[i]}\\nBPM DELTA`, posX + OUTPUT_WIDTH * .5, posY + TILE_SIZE * 3.5);\n    }\n\n    // progress = (progress + .01) % 1;\n    if(progress < 1) {\n      progress += .005;\n    } else if(animationCompleted !== null) {\n      animationCompleted();\n      animationCompleted = null;\n    }\n  };\n};\n\nlet p, layout;\nlet progress = 1.1;\nlet currentRank = -1;\n\nexport default () => {\n  const size = useStore(size$);\n  const iteration = useStore(currentIteration$);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null || iteration === null)\n      return;\n\n    layout = iteration.combined;\n    \n    setAttempts(iteration.attempts || 0);\n\n    if(training$.getState() === false)\n      setRank(currentRank = iteration.expectedRank);\n\n    p = new p5(sketch(size), ref.current);\n\n    return p.remove;\n  }, [ ref.current, iteration ]);\n\n  return (\n    <div ref={ref} />\n  );\n};\n","import { combine, createEffect, createEvent, restore } from \"effector\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nimport { iterations$ } from \"../store/iterations\";\nimport { model$ } from \"../store/model\";\nimport { setPhase } from \"../store/phase\";\nimport { setProgress, progress$ } from \"../store/progress\";\nimport { size$ } from \"../store/size\";\nimport { setTraining, training$ } from \"../store/training\";\n\nimport { Button } from \"./components\";\nimport { find } from \"./Generator\";\n\nconst EPOCH_COUNT = 250;\n\nlet xs;\nlet ys;\ncombine(iterations$, size$, (iterations, size) => {\n  if(iterations === null || size === null)\n    return;\n\n  // if(xs)\n  //   xs.dispose();\n\n  // if(ys)\n  //   ys.dispose();\n\n  const validIterations = iterations.filter((iteration) => iteration.trainable);\n\n  const data = validIterations.map((iteration) => iteration.layout);\n  xs = tf.tensor(data, [ data.length, size.x, size.y, size.z ], \"int32\");\n\n  const output = validIterations.map((iteration) => iteration.output);\n  ys = tf.tensor(output, [ data.length, 5 ], \"int32\");\n});\n\nfunction getAccumulator(accumulators, callback, metric) {\n  if(accumulators[callback] == null) {\n    accumulators[callback] = {};\n  }\n  if(accumulators[callback][metric] == null) {\n    accumulators[callback][metric] = [];\n  }\n  return accumulators[callback][metric];\n}\n\nconst setTrainStats = createEvent();\nexport const trainStats$ = restore(setTrainStats, null);\n\nconst train = createEffect();\ntrain.use(async() => {\n  setTimeout(() => setPhase(1), 0);\n  setTimeout(() => setPhase(2), 10000);\n\n  // await new Promise((resolve, reject) => setTimeout(resolve, 100));\n\n  const model = model$.getState();\n\n  // visualizeModel(model);\n\n  // const callbacks = getFitCallbacks(parent);\n\n  const metrics = [ \"loss\", \"val_loss\", \"acc\", \"val_acc\" ];\n  const accumulators = {};\n  const historyOpts = { xLabel: \"Epoch\" };\n  // const drawArea = getDrawArea(container);\n  const response = await model.fit(xs, ys, {\n    epochs: EPOCH_COUNT,\n    shuffle: true,\n    // validationSplit: .1,\n    callbacks: {\n      // unblocks p5.draw\n      // onBatchEnd: tf.nextFrame,\n      onEpochEnd: async(...args) => {\n        const [ i, log ] = args;\n\n        const epoch = i + 1;\n\n        // console.log(`epoch ${epoch}, loss ${log.loss}`);\n\n        setProgress(epoch / EPOCH_COUNT);\n\n        // return callbacks.onEpochEnd(...args);\n\n        // -- inlined and modified callbacks.onEpochEnd\n\n        const callbackName = \"onEpochEnd\";\n  \n        // Because of how the _ (iteration) numbers are given in the layers api\n        // we have to store each metric for each callback in different arrays else\n        // we cannot get accurate \"global\" batch numbers for onBatchEnd.\n  \n        // However at render time we want to be able to combine metrics for a\n        // given callback. So here we make a nested list of metrics, the first\n        // level are arrays for each callback, the second level contains arrays\n        // (of logs) for each metric within that callback.\n  \n        const metricLogs = [];\n        const presentMetrics = [];\n        for(const metric of metrics) {\n          // not all logs have all kinds of metrics.\n          if(log[metric] != null) {\n            presentMetrics.push(metric);\n  \n            const accumulator = getAccumulator(accumulators, callbackName, metric);\n            accumulator.push({ [metric]: log[metric] });\n            metricLogs.push(accumulator);\n          }\n        }\n  \n        // const subContainer = subSurface(drawArea, callbackName, { title: callbackName });\n        // history(subContainer, metricLogs, presentMetrics, historyOpts);\n\n        setTrainStats({ metricLogs, presentMetrics, historyOpts });\n\n        await tf.nextFrame();\n      },\n    },\n  });\n\n  return response;\n});\ntrain.pending.watch((pending) => {\n  pending && setTraining(true);\n});\ntrain.fail.watch((error) => {\n  console.error(\"train error\", error);\n})\ntrain.done.watch(() => {\n  // setTraining(false);\n\n  find({ rank: 0 });\n});\n\nexport default () => {\n  // const progress = useStore(progress$);\n  const training = useStore(training$);\n\n  return (\n    <>\n      <Button onClick={train}\n              disabled={training}>{training ? \"training ...\" : \"start new\"}</Button>\n      {/* <progress value={progress}>{Math.round(progress * 100)}%</progress> */}\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\n\nimport { Chart } from \"../components\";\n\nimport * as colors from \"../colors\";\nimport { trainStats$ } from \"../Train\";\n\nconst Container = styled.div`\n  * {\n    border: none;\n    margin: 0;\n  }\n`;\n\nexport default () => {\n  const stats = useStore(trainStats$);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null || stats === null)\n      return;\n\n    const { metricLogs, presentMetrics, historyOpts } = stats;\n\n    tfvis.show.history(ref.current, metricLogs, presentMetrics, historyOpts); // { ...historyOpts, seriesColors: [ \"#FF0000\", \"#00FF00\", \"#0000FF\" ] });\n  }, [ ref.current, stats ]);\n\n  return (\n    <Chart>\n      <Container ref={ref} />\n    </Chart>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\n\nimport { Apart, Chart, HR, Label, Value } from \"../components\";\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\n\nimport Generator, { attempts$, rank$ } from \"../Generator\";\n\n// input hidden output\nexport default () => {\n  const attempts = useStore(attempts$);\n  const rank = useStore(rank$);\n\n  return (\n    <>\n      <Chart style={{ padding: 22 }}>\n        <Generator />\n      </Chart>\n      <HR />\n      <Apart small>\n        <Label>attempts</Label><Value>{attempts}</Value>\n      </Apart>\n      <HR />\n      <Apart small>\n        <Label>class</Label><Value>{formatRank(rank)}</Value>\n      </Apart>\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport p5 from \"p5\";\nimport React, { useEffect, useRef } from \"react\";\n\nimport { linksGraph$ } from \"../store/graph\";\nimport { currentIteration$ } from \"../store/iterations\";\nimport { size$ } from \"../store/size\";\nimport { fromIndex } from \"../utils\";\n\nconst TILE_SIZE = 60;\n\nconst sketch = (iteration, size) => (p) => {\n  const W = 750;\n  // const W = 400;\n  const H = W * 10 / 16;\n\n  p.setup = () => {\n    p.createCanvas(W, H, p.WEBGL);\n    p.frameRate(12);\n  };\n  p.draw = () => {\n    p.clear();\n\n    // p.normalMaterial();\n    p.ambientLight(255, 255, 255);\n\n    //p.rotateX(-p.mouseY * .01);\n    p.rotateX(-.6);\n    p.rotateY(p.mouseX * .01);\n\n    p.translate(\n      -.5 * TILE_SIZE * size.x,\n      -.5 * TILE_SIZE * size.y,\n      -.5 * TILE_SIZE * size.z\n    );\n\n    for(let i in iteration) {\n      if(iteration[i] === 0)\n        continue;\n\n      const { x, y, z } = fromIndex(size, i);\n\n      p.push();\n\n      p.translate(\n        TILE_SIZE * (x + .5),\n        TILE_SIZE * (z + .5),\n        TILE_SIZE * (y + .5)\n      );\n      p.rotateX(p.PI * -.5);\n\n      if(iteration[i] === 2)\n        p.fill(51, 51, 51);\n      else if(iteration[i] === 1)\n        p.fill(153, 153, 153);\n\n      p.plane(TILE_SIZE);\n\n      // p.box(TILE_SIZE - 1, TILE_SIZE - 1, TILE_SIZE - 1);\n\n      p.pop();\n    }\n\n    const linksGraph = linksGraph$.getState();\n    for(let [ k, ka, s, t, sa, ta ] of linksGraph.edgeEntries()) {\n      const sp = fromIndex(size, +s);\n      const tp = fromIndex(size, +t);\n\n      p.push();\n\n      p.strokeWeight(2);\n      p.stroke(0, 102, 255);\n      p.line(\n        TILE_SIZE * (sp.x + .5), TILE_SIZE * (sp.z + .5), TILE_SIZE * (sp.y + .5),\n        TILE_SIZE * (tp.x + .5), TILE_SIZE * (tp.z + .5), TILE_SIZE * (tp.y + .5)\n      );\n\n      p.pop();\n    }\n  };\n};\n\nexport default () => {\n  const iteration = useStore(currentIteration$);\n  const size = useStore(size$);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if(ref.current === null || iteration === null)\n      return;\n\n    const p = new p5(sketch(iteration.combined, size), ref.current);\n\n    return p.remove;\n  }, [ ref.current, iteration ]);\n\n  if(iteration === null) {\n    return (\n      <div><a href=\"#pick\">pick iteration</a></div>\n    );\n  }\n\n  return (\n    <div ref={ref} />\n  );\n};\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { formatBpm, formatRank, formatDate } from \"../../formatters\";\nimport { currentIteration$ } from \"../../store/iterations\";\n\nimport { Apart, Center, Chart, HR, Label, Value } from \"../components\";\nimport HorizontalPreview from \"../HorizontalPreview\";\nimport Preview from \"../Preview\";\nimport Train from \"../Train\";\n\nexport default () => {\n  const iteration = useStore(currentIteration$);\n  \n  if(iteration === null) {\n    return (\n      <Center>loading 3d preview</Center>\n    );\n  }\n\n  return (\n    <>\n      <Chart>\n        <Preview />\n        <HorizontalPreview layout={iteration.combined} />\n        <Train />\n      </Chart>\n      <HR />\n      <Apart small>\n        <Label>iteration status</Label><Value>{iteration.ended ? \"ended\" : \"in progress\"}</Value>\n      </Apart>\n      <HR />\n      <Apart small>\n        <Label>expected class</Label><Value>{formatRank(iteration.expectedRank)}</Value>\n      </Apart>\n      <HR />\n      <Apart small>\n        <Label>actual class</Label><Value>{formatRank(iteration.actualRank)}</Value>\n      </Apart>\n    </>\n  );\n};\n","import { Composition } from \"atomic-layout\";\nimport { useStore } from \"effector-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Sidebar from \"../Sidebar\";\nimport { HR, Panel, Title } from \"../components\";\nimport { phase$ } from \"../../store/phase\";\n\nimport Phase1 from \"./Phase1\";\nimport Phase2 from \"./Phase2\";\nimport Phase3 from \"./Phase3\";\nimport Phase4 from \"./Phase4\";\n\nconst phaseTitle = `\n  phase title\n`;\nconst PhaseTitle = ({ phase, title }) => (\n  <Composition areas={phaseTitle} gap={10}>\n    {(c) => (\n      <>\n        <c.Phase as={Title}>phase {phase}:</c.Phase>\n        <c.Title as={Title}>{title}</c.Title>\n      </>\n    )}\n  </Composition>\n);\n\nconst Container = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-auto-rows: 100%;\n  grid-gap: 17px;\n  grid-template-columns: repeat(2, 1fr);\n  height: 639px;\n`;\nconst Main = styled.main`\n  display: grid;\n  grid-auto-flow: row;\n  grid-auto-rows: 100%;\n  grid-gap: 17px;\n  overflow-y: auto;\n  width: 606px;\n`;\n\nexport default () => {\n  const phase = useStore(phase$);\n\n  return (\n    <Container>\n      <Sidebar />\n      <Main>\n      {phase > 3 && (\n        <Panel id=\"phase-4\">\n          <PhaseTitle phase={4} title=\"new iteration layout\" />\n          <HR />\n          <Phase4 />\n        </Panel>\n      )}\n      {phase > 2 && (\n        <Panel id=\"phase-3\">\n          <PhaseTitle phase={3} title=\"generating new layout\" />\n          <HR />\n          <Phase3 />\n        </Panel>\n      )}\n      {phase > 1 && (\n        <Panel id=\"phase-2\">\n          <PhaseTitle phase={2} title=\"training model w/ cnn\" />\n          <HR />\n          <Phase2 />\n        </Panel>\n      )}\n      {phase > 0 && (\n        <Panel id=\"phase-1\">\n          <PhaseTitle phase={1} title=\"previous iteration\" />\n          <HR />\n          <Phase1 />\n        </Panel>\n      )}\n      </Main>\n    </Container>\n  );\n};\n","import React from \"react\";\n\nimport { Image } from \"../components\";\n\nexport default () => {\n  return (\n    <div></div>\n    );\n    // <Image src=\"map-layout.png\" />\n};\n","import React, { useEffect } from \"react\";\nimport {\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Header from \"./Header\";\nimport Archive from \"./pages/Archive\";\nimport Main from \"./pages/Main\";\nimport Map from \"./pages/Map\";\n\nconst root = document.getElementById(\"root\");\n\nconst resize = () => {\n  const content = document.getElementById(\"content\");\n\n  const { width, height } = root.getBoundingClientRect();\n  \n  const scaleX = width / 1334;\n  const scaleY = height / 750;\n  \n  content.style.transform = `scale(${scaleX}, ${scaleY})`;\n};\n\nwindow.addEventListener(\"resize\", resize);\n\nconst Container = styled.div`\n  display: grid;\n  grid-gap: 22px;\n  height: 750px;\n  padding-bottom: 22px;\n  padding-left: 17px;\n  padding-right: 17px;\n  transform-origin: 0 0;\n  width: 1334px;\n`;\n\nexport default () => {\n  useEffect(resize, []);\n\n  return (\n    <Container id=\"content\">\n      <Router basename=\"/non-brute-force-ui\">\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Main />\n          </Route>\n          <Route path=\"/archive\" exact>\n            <Archive />\n          </Route>\n          <Route path=\"/map\" exact>\n            <Map />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n};\n","import \"regenerator-runtime/runtime\";\n// import \"@exampledev/new.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { setHardcodedIterations } from \"./store/iterations\";\nimport { setLayout } from \"./store/layout\";\nimport { setSize } from \"./store/size\";\nimport App from \"./ui/Redesign\";\n\n// import fours from \"./data/fours\";\n// import ones from \"./data/ones\";\n// import threes from \"./data/threes\";\n// import twos from \"./data/twos\";\n// import zeros from \"./data/zeros\";\n// const props = {\n//   iterations: [\n//     ...zeros .map((item, i) => ({ title: `zeros ${i + 1}`,  data: item, output: [ 1, 0, 0, 0, 0 ] })),\n//     ...ones  .map((item, i) => ({ title: `ones ${i + 1}`,   data: item, output: [ 0, 1, 0, 0, 0 ] })),\n//     ...twos  .map((item, i) => ({ title: `twos ${i + 1}`,   data: item, output: [ 0, 0, 1, 0, 0 ] })),\n//     ...threes.map((item, i) => ({ title: `threes ${i + 1}`, data: item, output: [ 0, 0, 0, 1, 0 ] })),\n//     ...fours .map((item, i) => ({ title: `fours ${i + 1}`,  data: item, output: [ 0, 0, 0, 0, 1 ] })),\n//   ],\n//   layout: Array.from(Array(36), () => 1),\n//   size: { x: 6, y: 6, z: 1 },\n// };\n\nimport iterations from \"./data/iterations\";\nimport layout, { layoutSize } from \"./data/layout\";\n\nimport \"./index.css\";\n\nconst props = {\n  iterations,\n  layout,\n  size: layoutSize,\n};\n\nsetHardcodedIterations(props.iterations.map((iteration) => ({\n  ...iteration,\n  timestamp: +new Date(iteration.title.split(\" \")[0]),\n  valid: true,\n})));\nsetLayout(props.layout);\nsetSize(props.size);\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","export default [\n  // 20200526\n  {\n    title: \"2020-05-26 1\",\n    data: [ 3, 4, 6, 7, 9, 11, 12, 14, 15, 24, 27, 29, 31, 34, 36, 38, 39, 44, 46, 48, 49, 51, 53, 54, 57, 59, 61, 62, 63, 64, 70, 72 ],\n    george: 89,\n    maja: 104,\n  },\n  // {\n  //   title: \"2020-05-26 2\",\n  //   data: [ 3, 4, 6, 7, 9, 11, 12, 13, 15, 24, 27, 29, 32, 35, 36, 38, 39, 44, 45, 48, 49, 52, 53, 54, 57, 59, 62, 63, 65, 70, 72 ],\n  //   boogie: 98,\n  //   maja: 87,\n  // },\n  // 20200527\n  {\n    title: \"2020-05-27 1\",\n    data: [ 1, 3, 4, 5, 7, 9,  11, 12, 13, 15, 19, 24, 28, 29, 32, 35, 36, 40, 41, 46, 48, 49, 51, 54, 57, 59, 61, 62, 68, 70, 72 ],\n    maja: 93,\n    george: 80,\n    // george_boogie: 85, // ?\n    // boogie: 90,\n  },\n  {\n    title: \"2020-05-27 2\",\n    data: [ 1, 3, 4, 5, 8, 10, 11, 12, 13, 15, 19, 24, 28, 29, 35, 38, 40, 41, 43, 46, 48, 50, 51, 55, 56, 59, 61, 62, 68, 70, 72 ],\n    maja: 90,\n    george: 82,\n    // george_boogie: 90, // ?\n    // boogie: 98,\n  },\n  // 20200601\n  // {\n  //   title: \"2020-06-01 1\",\n  //   data: [ 3, 4, 5, 7, 10, 13, 14, 15, 17, 19, 24, 28, 30, 32, 35, 38, 40, 41, 43, 46, 48, 50, 52, 54, 57, 59, 60, 62, 65, 68, 70, 72 ],\n  //   maja: 90,\n  //   boogie: 127,\n  // },\n  // {\n  //   title: \"2020-06-01 2\",\n  //   data: [ 4, 5, 10, 13, 14, 15, 16, 19, 24, 28, 30, 32, 34, 37, 38, 40, 41, 43, 47, 48, 50, 51, 54, 57, 59, 60, 61, 62, 64, 68, 70, 72 ],\n  //   maja: 96,\n  //   boogie: 93,\n  // },\n  // 20200602\n  {\n    title: \"2020-06-02 1\",\n    data: [ 3, 4, 5, 7, 9,  12, 13, 15, 17, 19, 24, 26, 30, 31, 34, 36, 38, 40, 43, 46, 48, 50, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 93,\n    george: 92, // georgy?\n  },\n  {\n    title: \"2020-06-02 2\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 16, 17, 19, 26, 27, 29, 31, 34, 36, 40, 43, 48, 49, 52, 55, 57, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 97,\n    george: 142, // georgy?\n  },\n  {\n    title: \"2020-06-02 3\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 13, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 40, 43, 46, 48, 49, 50, 54, 57, 59, 61, 62, 68, 70, 71, 72 ],\n    maja: 92,\n    mala: 81,\n  },\n  {\n    title: \"2020-06-02 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 19, 24, 26, 29, 30, 34, 36, 38, 41, 43, 46, 48, 49, 52, 54, 57, 59, 60, 61, 68, 70, 71, 72 ],\n    maja: 86,\n    mala: 88,\n  },\n  // 20200603\n  {\n    title: \"2020-06-03 1\",\n    data: [ 3, 4, 5, 7, 9,  11, 12, 15, 16, 20, 26, 28, 29, 30, 32, 36, 39, 41, 43, 46, 48, 49, 52, 54, 56, 59, 60, 61, 63, 69, 70, 71 ],\n    maja: 95,\n    mala: 154,\n  },\n  {\n    title: \"2020-06-03 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 13, 14, 17, 20, 25, 28, 29, 31, 33, 36, 37, 41, 43, 46, 48, 49, 52, 56, 57, 59, 62, 63, 64, 65, 70, 71 ],\n    maja: 99,\n    mala: 87,\n  },\n  {\n    title: \"2020-06-03 3\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 38, 41, 43, 46, 48, 49, 52, 55, 57, 59, 60, 61, 63, 70, 71, 72 ],\n    maja: 98,\n    george: 96,\n  },\n  {\n    title: \"2020-06-03 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 13, 14, 17, 20, 25, 26, 30, 32, 33, 36, 40, 41, 43, 46, 47, 48, 49, 52, 55, 57, 59, 61, 62, 63, 70, 71, 72 ],\n    maja: 93,\n    george: 119,\n  },\n  // {\n  //   title: \"2020-06-03 5\",\n  //   data: [ 3, 4, 5, 8, 10, 11, 13, 15, 17, 20, 25, 26, 30, 32, 34, 36, 38, 41, 43, 44, 46, 47, 48, 50, 52, 55, 57, 59, 60, 61, 63, 66, 71, 72 ],\n  //   maja: 101,\n  //   boogie: 75,\n  // },\n  {\n    title: \"2020-06-03 6\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 15, 17, 20, 25, 26, 29, 31, 34, 36, 38, 41, 45, 46, 48, 49, 51, 55, 57, 59, 60, 61, 66, 68, 70, 72 ],\n    maja: 92,\n    ada: 69,\n  },\n  // 20200604\n  {\n    title: \"2020-06-04 1\",\n    data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 20, 24, 25, 27, 29, 30, 32, 33, 39, 43, 44, 48, 49, 50, 51, 56, 59, 60, 61, 62, 68, 70, 72 ],\n    maja: 92,\n    ada: 96,\n  },\n  {\n    title: \"2020-06-04 2\",\n    data: [ 3, 4, 5, 8, 9, 11, 13, 15, 17, 19, 24, 25, 29, 32, 34, 38, 40, 41, 43, 46, 47, 48, 49, 52, 53, 57, 60, 61, 64, 68, 71, 73 ],\n    maja: 87,\n    george: 93,\n  },\n  // {\n  //   title: \"2020-06-04 3\",\n  //   data: [ 3, 4, 5, 7, 9, 11, 13, 15, 17, 19, 24, 26, 29, 32, 34, 38, 40, 41, 44, 46, 48, 50, 52, 55, 57, 59, 62, 65, 68, 71, 72, 73 ],\n  //   maja: 96,\n  //   boogie: 184,\n  // },\n  {\n    title: \"2020-06-04 4\",\n    data: [ 3, 4, 5, 7, 8, 11, 13, 15, 17, 20, 24, 27, 29, 30, 34, 38, 40, 41, 45, 46, 48, 51, 52, 54, 57, 59, 61, 63, 64, 70, 71, 73 ],\n    maja: 97,\n    ada: 98,\n  },\n  // 20200605\n  // {\n  //   title: \"2020-06-05 1\",\n  //   data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 20, 24, 27, 29, 31, 34, 38, 40, 41, 43, 44, 48, 51, 52, 54, 57, 62, 63, 70, 71, 72, 73 ],\n  //   maja: 89,\n  //   boogie: 108,\n  // },\n  // {\n  //   title: \"2020-06-05 2\",\n  //   data: [ 3, 4, 5, 7, 9,  11, 12, 14, 15, 16, 24, 27, 29, 31, 34, 38, 40, 41, 43, 45, 48, 49, 51, 54, 56, 60, 63, 69, 70, 71, 73 ],\n  //   maja: 97,\n  //   boogie: 85,\n  // },\n  {\n    title: \"2020-06-05 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 25, 27, 29, 31, 34, 37, 40, 41, 43, 48, 49, 52, 55, 57, 59, 62, 65, 68, 69, 71, 73 ],\n    maja: 93,\n    george: 124,\n  },\n  {\n    title: \"2020-06-05 4\",\n    data: [ 3, 4, 5, 7, 10, 11, 14, 16, 19, 26, 27, 29, 31, 34, 36, 40, 41, 46, 48, 51, 52, 55, 57, 59, 61, 62, 64, 65, 68, 71 ],\n    maja: 86,\n    george: 150,\n  },\n  {\n    title: \"2020-06-05 5\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 13, 15, 20, 26, 27, 31, 32, 34, 36, 39, 41, 44, 46, 51, 52, 54, 56, 59, 61, 62, 63, 65, 69, 71 ],\n    maja: 95,\n    ada: 90,\n  },\n  // 20200608\n  // {\n  //   title: \"2020-06-08 1\",\n  //   data: [ 3, 4, 5 ],\n  //   maja: 88,\n  //   george: 83,\n  // },\n  {\n    title: \"2020-06-08 2\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 27, 31, 32, 34, 36, 38, 41, 43, 48, 49, 52, 55, 57, 59, 61, 62, 63, 64, 66, 69 ],\n    maja: 90,\n    george: 117,\n  },\n  {\n    title: \"2020-06-08 3\",\n    data: [ 3, 4, 5, 7, 10, 11, 12, 16, 17, 20, 24, 26, 31, 32, 34, 36, 38, 41, 43, 48, 49, 51, 55, 57, 59, 61, 62, 63, 64, 66, 69, 70 ],\n    maja: 97,\n    mala: 98,\n  },\n  {\n    title: \"2020-06-08 4\",\n    data: [ 3, 4, 5, 9, 10, 11, 12, 16, 17, 20, 24, 25, 31, 33, 34, 36, 38, 41, 46, 48, 49, 52, 55, 57, 59, 60, 63, 64, 65, 66, 70 ],\n    maja: 105,\n    mala: 133,\n  },\n  // {\n  //   title: \"2020-06-08 5\",\n  //   data: [ 3, 4, 5, 9, 10, 11, 13, 16, 17, 20, 25, 27, 30, 33, 34, 37, 38, 41, 45, 48, 50, 51, 55, 57, 59, 60, 63, 65, 66, 70, 72 ],\n  //   maja: 107,\n  //   boogie: 88,\n  // },\n  // {\n  //   title: \"2020-06-08 6\",\n  //   data: [ 3, 4, 5, 8, 10, 11, 13, 14, 16, 21, 25, 27, 30, 33, 34, 36, 37, 38, 43, 48, 51, 52, 55, 56, 59, 62, 63, 65, 70, 71, 72 ],\n  //   maja: 105,\n  //   boogie: 129,\n  // },\n  // 20200609\n  // {\n  //   title: \"2020-06-09 1\",\n  //   data: [ 3, 4, 5, 8, 10, 11, 12, 14, 15, 16, 19, 21, 25, 28, 30, 31, 35, 37, 39, 40, 43, 48, 51, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n  //   maja: 82,\n  //   mala: 0,\n  // },\n  {\n    title: \"2020-06-09 2\",\n    data: [ 3, 4, 5, 8, 9,  11, 12, 14, 16, 19, 24, 28, 29, 30, 35, 39, 40, 41, 45, 48, 50, 52, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n    maja: 89,\n    george: 153,\n  },\n  // {\n  //   title: \"2020-06-09 3\",\n  //   data: [ 3, 4, 5, 7, 10, 11, 13, 14, 16, 19, 25, 26, 30, 33, 35, 37, 40, 41, 45, 48, 50, 51, 54, 56, 59, 60, 63, 65, 69, 70, 71 ],\n  //   maja: 109,\n  //   boogie: 94,\n  // },\n  // 20200611\n  {\n    title: \"2020-06-11 1\",\n    data: [ 1, 3, 5, 7, 10, 11, 13, 15, 16, 20, 24, 25, 30, 32, 35, 36, 37, 39, 44, 48, 50, 51, 54, 56, 59, 60, 62, 63, 65, 70, 72 ],\n    maja: 140,\n    george: 119, // 114 / 124 AW\n  },\n  {\n    title: \"2020-06-11 2\",\n    data: [ 1, 3, 5, 7, 9,  10, 11, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 46, 48, 49, 52, 54, 56, 59, 61, 62, 63, 69, 70, 71 ],\n    maja: 97,\n    mala: 116, // 107 / 125 AW\n  },\n  // {\n  //   title: \"2020-06-11 3\",\n  //   data: [ 1, 3, 5, 7, 10, 11, 12, 13, 16, 20, 24, 27, 30, 32, 35, 36, 37, 39, 45, 48, 50, 52, 54, 56, 59, 61, 63, 64, 66, 70, 71 ],\n  //   maja: 87,\n  //   boogie: 113, // 105 / 122 AW\n  // },\n  // {\n  //   title: \"2020-06-11 4\",\n  //   data: [ 1, 3, 5, 7, 10, 12, 14, 15, 16, 20, 24, 27, 30, 33, 35, 36, 38, 39, 45, 48, 50, 51, 54, 55, 59, 61, 63, 64, 66, 70, 71 ],\n  //   maja: 117,\n  //   boogie: 87,\n  // },\n  // 20200612\n  {\n    title: \"2020-06-12 1\",\n    data: [ 1, 3, 4, 7, 10, 12, 14, 15, 16, 20, 24, 25, 30, 34, 35, 36, 37, 39, 43, 49, 50, 51, 52, 54, 57, 59, 62, 63, 69, 70, 71, 73 ],\n    maja: 106,\n    george: 106, // 113/99aw\n  },\n  {\n    title: \"2020-06-12 2\",\n    data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 37, 38, 39, 43, 44, 50, 51, 52, 54, 57, 59, 61, 62, 63, 71, 73 ],\n    maja: 125,\n    george: 125,\n  },\n  // {\n  //   title: \"2020-06-12 3\",\n  //   data: [ 1, 3, 5, 7, 9,  11, 12, 15, 16, 21, 24, 26, 30, 34, 35, 37, 39, 40, 43, 48, 49, 51, 56, 57, 59, 61, 62, 68, 69, 71, 73 ],\n  //   maja: 124,\n  //   boogie: 154,\n  // },\n  // {\n  //   title: \"2020-06-12 4\",\n  //   data: [ 1, 3, 4, 7, 10, 11, 12, 15, 16, 21, 26, 27, 30, 34, 35, 37, 39, 40, 44, 48, 49, 51, 56, 57, 59, 61, 66, 68, 71, 72, 73 ],\n  //   maja: 88,\n  //   boogie: 97,\n  // },\n  // 20200615\n  {\n    title: \"2020-06-15 1\",\n    data: [ 1, 3, 5, 8, 9,  11, 13, 14, 16, 21, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 51, 55, 57, 59, 61, 66, 68, 69, 70, 71 ],\n    maja: 80,\n    george: 176, // 174/178aw\n  },\n  {\n    title: \"2020-06-15 2\",\n    data: [ 1, 3, 4, 8, 10, 11, 12, 15, 16, 20, 26, 27, 30, 34, 35, 38, 39, 40, 43, 44, 48, 49, 52, 55, 56, 59, 61, 64, 66, 68, 70, 71 ],\n    maja: 84,\n    george: 140, // 147/133aw\n  },\n  // {\n  //   title: \"2020-06-15 3\",\n  //   data: [ 1, 3, 5, 9, 10, 11, 12, 14, 16, 21, 26, 28, 30, 33, 35, 38, 39, 40, 43, 44, 48, 50, 51, 55, 57, 59, 61, 66, 68, 71, 72, 73 ],\n  //   maja: 87,\n  //   boogie: 139,\n  // },\n  // {\n  //   title: \"2020-06-15 4\",\n  //   data: [ 1, 3, 5, 7, 9, 11, 12, 13, 14, 21, 26, 28, 30, 34, 35, 38, 39, 40, 43, 45, 48, 50, 51, 55, 57, 59, 61, 63, 66, 71, 72, 73 ],\n  //   maja: 70,\n  //   boogie: 126,\n  // },\n  // {\n  //   title: \"2020-06-15 5\",\n  //   data: [],\n  // },\n  // {\n  //   title: \"2020-06-15 6\",\n  //   data: [],\n  // },\n  // 20200616\n  // {\n  //   title: \"2020-06-16 1\",\n  //   data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 26, 28, 32, 34, 35, 36, 39, 41, 43, 46, 49, 50, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n  //   maja: 102,\n  //   boogie: 124, // 124 / AW\n  // },\n  // {\n  //   title: \"2020-06-16 2\",\n  //   data: [ 1, 3, 4, 7, 9, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 37, 39, 41, 43, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n  //   maja: 85,\n  //   boogie: 123,\n  // },\n  // {\n  //   title: \"2020-06-16 3\",\n  //   data: [],\n  // },\n  // 20200618\n  // {\n  //   title: \"2020-06-18 1\",\n  //   data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 33, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 63, 65, 70, 72 ],\n  //   maja: 89,\n  //   boogie: 155,\n  // },\n  // {\n  //   title: \"2020-06-18 2\",\n  //   data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 24, 26, 30, 34, 35, 36, 39, 41, 43, 46, 50, 51, 52, 56, 57, 59, 60, 62, 65, 68, 70, 72 ],\n  //   maja: 115,\n  //   boogie: 130,\n  // },\n  {\n    title: \"2020-06-18 3\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 16, 20, 25, 26, 32, 34, 35, 36, 40, 41, 43, 45, 49, 51, 52, 56, 57, 59, 60, 62, 64, 65, 68, 70 ],\n    maja: 116,\n    george: 157,\n  },\n  {\n    title: \"2020-06-18 4\",\n    data: [ 1, 3, 4, 9, 10, 11, 12, 13, 17, 21, 25, 26, 30, 34, 35, 36, 40, 41, 43, 46, 49, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 107,\n    ada: 97,\n  },\n  {\n    title: \"2020-06-18 5\",\n    data: [ 3, 5, 9, 10, 11, 13, 16, 17, 21, 26, 27, 32, 34, 35, 36, 40, 41, 43, 44, 50, 51, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68 ],\n    maja: 108,\n    ada: 120,\n  },\n  // {\n  //   title: \"2020-06-18 6\",\n  //   data: [],\n  // },\n  // 20200619\n  // {\n  //   title: \"2020-06-19 1\",\n  //   data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 24, 27, 32, 34, 35, 36, 38, 41, 43, 44, 49, 50, 52, 55, 57, 59, 60, 61, 62, 64, 65, 68 ],\n  //   maja: 73,\n  //   boogie: 66,\n  // },\n  // {\n  //   title: \"2020-06-19 2\",\n  //   data: [ 1, 3, 4, 7, 8, 11, 13, 15, 17, 21, 27, 28, 31, 32, 34, 36, 38, 41, 43, 44, 49, 50, 52, 54, 55, 59, 60, 61, 64, 65, 68, 71 ],\n  //   maja: 109,\n  //   boogie: 91,\n  // },\n  {\n    title: \"2020-06-19 3\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 30, 34, 36, 40, 41, 43, 44, 49, 50, 51, 56, 57, 59, 60, 61, 64, 65, 68, 71 ], // 20?\n    maja: 76,\n    george: 144,\n  },\n  {\n    title: \"2020-06-19 4\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 21, 27, 28, 29, 34, 35, 36, 37, 38, 43, 44, 49, 51, 52, 55, 57, 59, 60, 61, 62, 64, 68, 70 ],\n    maja: 118,\n    ada: 97,\n  },\n  // 20200622\n  {\n    title: \"2020-06-22 1\",\n    data: [ 1, 3, 4, 7, 8, 11, 12, 13, 16, 20, 27, 28, 31, 34, 35, 37, 39, 40, 44, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 89,\n    ada: 72,\n  },\n  {\n    title: \"2020-06-22 2\",\n    data: [ 1, 3, 4, 7, 8, 11, 13, 14, 16, 20, 27, 28, 29, 34, 35, 37, 39, 40, 43, 45, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 84,\n    ada: 92,\n  },\n  {\n    title: \"2020-06-22 3\",\n    data: [ 1, 3, 4, 8, 9, 11, 13, 14, 16, 20, 26, 28, 30, 34, 35, 37, 39, 40, 43, 46, 49, 51, 52, 55, 57, 59, 60, 62, 64, 68, 70, 73 ],\n    maja: 86,\n    george: 90,\n  },\n  {\n    title: \"2020-06-22 4\",\n    data: [ 1, 2, 4, 8, 9, 11, 12, 14, 17, 20, 25, 28, 30, 33, 35, 37, 39, 40, 45, 46, 48, 51, 52, 55, 56, 59, 60, 64, 68, 70, 71, 73 ],\n    maja: 86,\n    george: 85,\n  },\n  // 20200623\n  {\n    title: \"2020-06-23 1\",\n    data: [ 1, 2, 4, 8, 10, 11, 12, 16, 17, 21, 26, 28, 29, 32, 35, 36, 39, 40, 44, 46, 49, 50, 52, 54, 56, 59, 60, 65, 66, 68, 72, 73 ],\n    maja: 81,\n    george: 167,\n  },\n  {\n    title: \"2020-06-23 2\",\n    data: [ 1, 2, 4, 7, 10, 11, 12, 16, 17, 21, 26, 28, 29, 33, 35, 36, 39, 40, 44, 46, 48, 50, 52, 54, 56, 59, 60, 65, 66, 68, 69, 73 ],\n    maja: 90,\n    george: 88,\n  },\n  {\n    title: \"2020-06-23 3\",\n    data: [ 1, 2, 5, 7, 10, 11, 12, 16, 17, 21, 26, 28, 29, 33, 35, 36, 39, 40, 44, 46, 48, 50, 52, 55, 56, 59, 60, 61, 62, 68, 69, 73 ],\n    maja: 85,\n    ada: 123,\n  },\n  {\n    title: \"2020-06-23 4\",\n    data: [ 1, 2, 4, 7, 10, 11, 12, 16, 17, 21, 24, 28, 29, 31, 35, 36, 39, 40, 44, 46, 48, 50, 52, 55, 56, 59, 60, 61, 66, 68, 72, 73 ],\n    maja: 85,\n    ada: 90,\n  },\n  // {\n  //   title: \"2020-06-23 5\",\n  //   data: [],\n  // },\n  // 20200626\n  // {\n  //   title: \"2020-06-26 1\",\n  //   data: [ 1, 2, 4, 9, 10, 11, 12, 13, 15, 20, 25, 26, 29, 33, 35, 36, 39, 40, 43, 46, 49, 50, 51, 52, 54, 57, 59, 60, 63, 64, 66, 70, 73 ],\n  //   maja: 88,\n  //   boogie: 201,\n  // },\n  // {\n  //   title: \"2020-06-26 2\",\n  //   data: [ 1, 2, 5, 9, 10, 11, 12, 13, 17, 21, 24, 25, 29, 33, 35, 36, 37, 40, 43, 46, 49, 51, 54, 57, 59, 60, 63, 64, 66, 70, 73 ],\n  //   maja: 89,\n  //   boogie: 146,\n  // },\n  {\n    title: \"2020-06-26 3\",\n    data: [ 1, 2, 5, 9, 10, 11, 12, 13, 17, 21, 24, 25, 29, 32, 35, 36, 39, 40, 45, 46, 49, 51, 52, 54, 56, 59, 60, 66, 68, 69, 70, 73 ],\n    maja: 83,\n    ada: 143,\n  },\n  {\n    title: \"2020-06-26 4\",\n    data: [ 1, 2, 4, 8, 10, 11, 14, 15, 17, 19, 25, 26, 30, 32, 34, 36, 37, 38, 45, 46, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 69, 70 ],\n    maja: 96,\n    ada: 92,\n  },\n  // 20200629\n  // {\n  //   title: \"2020-06-29 1\",\n  //   data: [ 1, 2, 4, 7, 9,  10, 11, 12, 17, 21, 24, 27, 29, 30, 34, 38, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 69, 72 ],\n  //   maja: 85, // 84/85aw\n  //   boogie: 186,\n  // },\n  // {\n  //   title: \"2020-06-29 2\",\n  //   data: [ 1, 2, 4, 7, 10, 11, 12, 13, 17, 21, 24, 27, 30, 32, 34, 36, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 68, 70, 72 ],\n  //   maja: 81, // 81/81aw\n  //   boogie: 182,\n  // },\n  {\n    title: \"2020-06-29 3\",\n    data: [ 1, 2, 4, 8, 10, 11, 12, 13, 17, 21, 24, 27, 30, 32, 34, 36, 39, 40, 43, 50, 51, 52, 56, 57, 59, 60, 61, 62, 65, 68, 72 ],\n    maja: 76, // 73/79aw\n    ada: 180,\n  },\n  // 20200630\n  // {\n  //   title: \"2020-06-30 1\",\n  //   data: [ 1, 2, 4, 10, 11, 12, 13, 16, 17, 21, 43, 46, 49, 51, 52, 57, 59, 60, 61, 62, 65, 68, 72 ],\n  //   maja: 82, // 83/81aw\n  //   ada: 104,\n  // },\n  {\n    title: \"2020-06-30 2\",\n    data: [ 1, 2, 4, 7,  10, 11, 12, 13, 17, 21, 24, 26, 30, 31, 34, 36, 39, 40, 44, 45, 48, 51, 52, 55, 59, 60, 62, 68, 70, 72, 73 ],\n    maja: 85, // 83/86a\n    ada: 101,\n  },\n  // {\n  //   title: \"2020-06-30 3\",\n  //   data: [ 1, 2, 5, 7,  10, 11, 12, 16, 17, 21, 24, 26, 30, 33, 34, 36, 39, 40, 43, 46, 48, 51, 52, 55, 57, 59, 60, 61, 62, 65, 68, 72 ],\n  //   maja: 78, // 77/79aw\n  //   boogie: 147,\n  // },\n  // 20200702\n  // {\n  //   title: \"2020-07-02 1\",\n  //   data: [ 1, 2, 4, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 33, 34, 36, 39, 40, 43, 46, 47, 49, 51, 55, 57, 59, 60, 61, 68, 69, 70, 71 ],\n  //   maja: 78, // 74/82aw\n  //   boogie: 192,\n  // },\n  // {\n  //   title: \"2020-07-02 2\",\n  //   data: [ 1, 2, 5, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 49, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n  //   maja: 91, // 83/98aw\n  //   boogie: 167,\n  // },\n  {\n    title: \"2020-07-02 3\",\n    data: [ 1, 2, 4, 9, 10, 12, 13, 16, 17, 21, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 48, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n    maja: 90, // 87/92aw\n    ada: 167,\n  },\n  {\n    title: \"2020-07-02 4\",\n    data: [ 1, 2, 4, 9, 10, 12, 13, 15, 17, 20, 24, 26, 30, 32, 35, 36, 39, 40, 43, 46, 48, 50, 51, 55, 56, 59, 61, 63, 64, 65, 66, 71 ],\n    maja: 90, // 85/94aw\n    ada: 97,\n  },\n  // // 20200703\n  // {\n  //   title: \"2020-07-03 1\",\n  //   data: [ ],\n  //   maja: 88,\n  //   boogie: 78,\n  // },\n  // {\n  //   title: \"2020-07-03 2\",\n  //   data: [ ],\n  //   maja: 74,\n  //   boogie: 152,\n  // },\n  // {\n  //   title: \"2020-07-03 3\",\n  //   data: [ ],\n  //   maja: 74,\n  //   ada: 210,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: 87,\n  //   ada: 210,\n  // },\n  // // 202007\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n  // {\n  //   title: \"2020-07-03 4\",\n  //   data: [ ],\n  //   maja: ,\n  // },\n];\n","export const layoutSize = { x: 7, y: 5, z: 5 };\n\nexport default [\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 1, 0,\n  0, 1, 1, 0, 0, 1, 1,\n  0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 0, 0, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 1,\n  0, 1, 1, 1, 1, 1, 1,\n  0, 0, 0, 0, 0, 1, 0,\n\n  0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  1, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 0, 0, 1, 0, 0, 0,\n\n  0, 0, 0, 0, 1, 0, 0,\n  0, 0, 0, 1, 1, 0, 0,\n  0, 1, 1, 1, 1, 1, 0,\n  0, 1, 1, 1, 1, 0, 0,\n  0, 0, 1, 1, 0, 0, 0,\n];"],"sourceRoot":""}